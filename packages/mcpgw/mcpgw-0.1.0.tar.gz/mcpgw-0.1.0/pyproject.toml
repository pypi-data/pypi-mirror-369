[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcpgw"
version = "0.1.0"
authors = [
    {name = "Mark Lechner", email = "hello@marklechner.dev"},
]
description = "A lightweight, security-focused FastAPI gateway for Model Context Protocol (MCP) servers"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
    "Topic :: System :: Networking",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
    "Environment :: Web Environment",
]
keywords = [
    "mcp",
    "model-context-protocol",
    "gateway",
    "api-gateway",
    "security",
    "fastapi",
    "authentication",
    "authorization",
    "rate-limiting",
    "proxy",
    "middleware",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
redis = [
    "redis>=4.5.0",
]
postgres = [
    "asyncpg>=0.28.0",
    "sqlalchemy>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/marklechner/mcpgw"
Documentation = "https://github.com/marklechner/mcpgw#readme"
Repository = "https://github.com/marklechner/mcpgw"
"Bug Tracker" = "https://github.com/marklechner/mcpgw/issues"

[project.scripts]
mcpgw = "mcpgw.main:main"
mcpgw-server = "mcpgw.main:main"

[tool.setuptools]
packages = ["mcpgw"]

[tool.setuptools.package-data]
mcpgw = ["config.yaml", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
