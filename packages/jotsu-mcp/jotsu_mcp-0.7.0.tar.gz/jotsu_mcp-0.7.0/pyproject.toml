[project]
name = "jotsu-mcp"
version = "0.7.0"
description = "Automatation for the Model Context Protocol (MCP)."
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*"]
requires-python = ">=3.12"
dependencies = [
    "jsonata-python>=0.5.3",
    "jsonschema>=4.25.0",
    "mcp>=1.9.1",
    "pkce>=1.0.3",
    "pydantic>=2.6.1",
    "pyjwt>=2.10.1",
    "asteval>=1.0.6"
]

[project.scripts]
jotsu-mcp = "jotsu.mcp.cli.main:cli"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
cli = [
    "click>=8.2.1",
    "aiofiles==24.1.0",
    "pkce>=1.0.3",
    "python-ulid>=3.0.0",
    "python-dotenv>=1.1.0"
]
anthropic = [
    "anthropic>=0.57.1",
    "pybars3>=0.9.7",
]
dev = [
    "flake8>=7.2.0",
    "flake8-quotes>=3.4.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
    "setuptools>=80.9.0",
    "pydantic-to-typescript>=2.0.0"
]

[tool.setuptools.packages.find]
namespaces = true
include = ["jotsu*"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = "-ra"

[tool.coverage.run]
omit = [
    "*/cli/*",
    "jotsu/mcp/local/*",   # FIXME
    "jotsu/mcp/workflow/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "# pragma: no cover",
    "^\\s*\\.\\.\\.\\s*$"
]
