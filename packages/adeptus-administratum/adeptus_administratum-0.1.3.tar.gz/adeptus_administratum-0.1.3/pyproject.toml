[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
    "bump-my-version>=1.2.1",
    "coverage>=7.10.0",
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "ruff>=0.12.5",
]

[project]
name = "adeptus-administratum"
version = "0.1.3"
authors = [
    { name = "Dorian Turba", email = "commit.9wuzh@slmail.me" },
]
description = "CLI game in 40k setting."
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "rich>=14.1.0",
    "typer>=0.16.0",
]

[project.urls]
"Bug Tracker" = "https://gitlab.com/swepy/packages/40k-cli/-/issues"
"Homepage" = "https://gitlab.com/swepy/packages/40k-cli"

[project.scripts]
# Support calls from CLI. Using the following comment will run the helloworld function:
# $ administratum
# Hello, world!
administratum = "administratum:helloworld"

[tool.bumpversion]
# bump-my-version bump major|minor|patch
allow-dirty = false
commit = true
config-file = "pyproject.toml"
current_version = "0.1.3"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
replace = "{new_version}"
search = "{current_version}"
serialize = [
    "{major}.{minor}.{patch}",
]
tag = true

[[tool.bumpversion.files]]
filename = "pyproject.toml"
replace = "version = \"{new_version}\""
search = "version = \"{current_version}\""

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
replace = """## [Unreleased]

[![Pipeline](https://https://gitlab.com/swepy/packages/40k-cli/badges/main/pipeline.svg)](https://https://gitlab.com/swepy/packages/40k-cli/-/pipelines?ref=main)

## [{new_version}] - {now:%Y-%m-%d}

[![Pipeline](https://https://gitlab.com/swepy/packages/40k-cli/badges/{new_version}/pipeline.svg)](https://https://gitlab.com/swepy/packages/40k-cli/-/pipelines?ref={new_version})
"""
search = """## [Unreleased]

[![Pipeline](https://https://gitlab.com/swepy/packages/40k-cli/badges/main/pipeline.svg)](https://https://gitlab.com/swepy/packages/40k-cli/-/pipelines?ref=main)
"""

[tool.mypy]
disallow_untyped_defs = true
packages = "administratum"
python_version = "3.13"

[tool.pytest.ini_options]
addopts = "-rA -q"
minversion = "6.0"
testpaths = [
    "integration",
    "tests",
]

[tool.ruff]
indent-width = 4
line-length = 88
target-version = "py313"

[tool.ruff.format]
# Configures the way Ruff formats your code.
docstring-code-format = true  # Whether to format code snippets in docstrings. (default: false)

[tool.ruff.lint]
# Configures how Ruff checks your code.
select = [# A list of rule codes or prefixes to enable. (default: ["E4", "E7", "E9", "F"])
    # Security and reliability
    "S", # flake8-bandit
    "PGH", # pygrep-hooks
    "TID", # flake8-tidy-imports

    # Software defects
    ## Priority 1
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    ## Priority 2
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    ## Priority 3
    "YTT", # flake8-2020
    "INT", # flake8-gettext
    "INP", # flake8-no-pep420
    ## Priority 4
    "C90", # mccabe (recommended max-complexity = 30)
    "PERF", # Perflint

    # Updates and deadcode
    "ERA", # eradicate
    "T10", # flake8-debugger
    "FA", # flake8-future-annotations
    "PTH", # flake8-use-pathlib
    "UP", # pyupgrade

    # Conventions
    "ICN", # flake8-import-conventions
    "SLF", # flake8-self
    "I", # isort
    "N", # pep8-naming
    "E", # pycodestyle Error
    "W", # pycodestyle Warning

    # Quality and antipatterns
    ## Priority 1
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "RET", # flake8-return
    "C90", # mccabe (recommended max-complexity = 20)
    ## Priority 2
    "FBT", # flake8-boolean-trap
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    "C90", # mccabe (recommended max-complexity = 17)
    ## Priority 3
    "ISC", # flake8-implicit-str-concat
    "C4", # flake8-comprehensions
    "RSE", # flake8-raise
    "C90", # mccabe (recommended max-complexity = 15)
    ## Priority 4
    "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "EM", # flake8-errmsg
    "C90", # mccabe (recommended max-complexity = 12)
    ## Priority 5
    "PYI", # flake8-pyi
    "C90", # mccabe (recommended max-complexity = 10)
    ## Priority 6
    "PIE", # flake8-pie
    "EXE", # flake8-executable
    "T20", # flake8-print
    ## Priority 7
    "FIX", # flake8-fixme
    "TD", # flake8-todos
    "SIM", # flake8-simplify
    "SLOT", # flake8-slots
    ## Priority 8
    "TC", # flake8-type-checking
    "FLY", # flynt
    ## Priority 9
    "D", # pydocstyle
    "F", # Pyflakes
    ## Priority 10
    "PT", # flake8-pytest-style
    "DOC", # pydoclint
    ## Priority 11
    "PL", # Pylint
    "FURB", # refurb
    "RUF", # Ruff-specific rules
    "TRY", # tryceratops

    # Misc
#    "CPY",  # flake8-copyright
#    "Q", # flake8-quotes
#    "PLC", # Pylint Convention
#    "PLE", # Pylint Error
#    "PLR", # Pylint Refactor
#    "PLW", # Pylint Warning

    ## Quality and antipatterns
#     "AIR", # Airflow
#     "FAST", # FastAPI
#     "DJ",  # flake8-django
#     "NPY",  # NumPy-specific rules
#     "PD",  # pandas-vet
]
ignore = [  # A list of rule codes or prefixes to ignore.
    "FIX002", # Checks for "TODO" comments.
    "DOC201", # return is not documented in docstring
    "DOC402", # yield is not documented in docstring
]

[tool.ruff.per-file-ignores]
# A list of mappings from file pattern to rule codes or prefixes to exclude, when considering any matching files.
"tests/**/*.py" = [
#    "ARG", # flake8-unused-arguments: use @pytest.mark.usefixtures or noqa: ARG
    "S101",  # Use of assert detected
    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.mccabe]
# Checks for functions with a high McCabe complexity. (default: 10)
max-complexity = 10

[tool.tomlsort.overrides."project"]
table_keys = false

[tool.tox]
legacy_tox_ini = """
    [tox]
    min_version = 4.0
    env_list =
        py{313}
    isolated_build = true

    [testenv]
    deps = pytest
    commands = pytest
"""
