# Generated by ariadne-codegen
# Source: graphql/

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import CustomerTenantMembershipParts, PageInfoParts


class CustomerTenants(BaseModel):
    customer: Optional["CustomerTenantsCustomer"]


class CustomerTenantsCustomer(BaseModel):
    tenant_memberships: "CustomerTenantsCustomerTenantMemberships" = Field(
        alias="tenantMemberships"
    )


class CustomerTenantsCustomerTenantMemberships(BaseModel):
    edges: List["CustomerTenantsCustomerTenantMembershipsEdges"]
    page_info: "CustomerTenantsCustomerTenantMembershipsPageInfo" = Field(
        alias="pageInfo"
    )


class CustomerTenantsCustomerTenantMembershipsEdges(BaseModel):
    node: "CustomerTenantsCustomerTenantMembershipsEdgesNode"


class CustomerTenantsCustomerTenantMembershipsEdgesNode(CustomerTenantMembershipParts):
    pass


class CustomerTenantsCustomerTenantMembershipsPageInfo(PageInfoParts):
    pass


CustomerTenants.model_rebuild()
CustomerTenantsCustomer.model_rebuild()
CustomerTenantsCustomerTenantMemberships.model_rebuild()
CustomerTenantsCustomerTenantMembershipsEdges.model_rebuild()
