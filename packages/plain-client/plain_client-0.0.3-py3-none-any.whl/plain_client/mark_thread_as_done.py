# Generated by ariadne-codegen
# Source: graphql/

from typing import Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import MutationErrorParts, ThreadParts


class MarkThreadAsDone(BaseModel):
    mark_thread_as_done: "MarkThreadAsDoneMarkThreadAsDone" = Field(
        alias="markThreadAsDone"
    )


class MarkThreadAsDoneMarkThreadAsDone(BaseModel):
    thread: Optional["MarkThreadAsDoneMarkThreadAsDoneThread"]
    error: Optional["MarkThreadAsDoneMarkThreadAsDoneError"]


class MarkThreadAsDoneMarkThreadAsDoneThread(ThreadParts):
    pass


class MarkThreadAsDoneMarkThreadAsDoneError(MutationErrorParts):
    pass


MarkThreadAsDone.model_rebuild()
MarkThreadAsDoneMarkThreadAsDone.model_rebuild()
