# Generated by ariadne-codegen
# Source: graphql/

from typing import List

from pydantic import Field

from .base_model import BaseModel
from .fragments import PageInfoParts, TenantParts


class SearchTenants(BaseModel):
    search_tenants: "SearchTenantsSearchTenants" = Field(alias="searchTenants")


class SearchTenantsSearchTenants(BaseModel):
    edges: List["SearchTenantsSearchTenantsEdges"]
    page_info: "SearchTenantsSearchTenantsPageInfo" = Field(alias="pageInfo")


class SearchTenantsSearchTenantsEdges(BaseModel):
    cursor: str
    node: "SearchTenantsSearchTenantsEdgesNode"


class SearchTenantsSearchTenantsEdgesNode(BaseModel):
    tenant: "SearchTenantsSearchTenantsEdgesNodeTenant"


class SearchTenantsSearchTenantsEdgesNodeTenant(TenantParts):
    pass


class SearchTenantsSearchTenantsPageInfo(PageInfoParts):
    pass


SearchTenants.model_rebuild()
SearchTenantsSearchTenants.model_rebuild()
SearchTenantsSearchTenantsEdges.model_rebuild()
SearchTenantsSearchTenantsEdgesNode.model_rebuild()
