# Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

- parent: !uuid '00000000-0000-0000-0000-000000000000'
  sync:
    packages:
    - find:
        name: package1
      sync:
        classes:
        - find:
            name: SampleClass
          promise_id: package1.SampleClass
          set:
            description: 'SampleClass.msg The first comment block at the top of the
              file is added to the class description of SampleClass. '
          sync:
            properties:
            - find:
                name: sample_field1
              promise_id: package1.SampleClass.sample_field1
              set:
                description: 'This block comment is added to the property description
                  of sample_field1. This block comment is also added to the property
                  description of sample_field1. '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '10'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '0'
                type: !promise 'package1.uint8'
            - find:
                name: sample_field2
              promise_id: package1.SampleClass.sample_field2
              set:
                description: 'This block comment is added to the property descriptions
                  of sample_field2 and sample_field3. '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '*'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '0'
                type: !promise 'package2.SampleClassEnum'
            - find:
                name: sample_field3
              promise_id: package1.SampleClass.sample_field3
              set:
                description: 'This block comment is added to the property descriptions
                  of sample_field2 and sample_field3. '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '3'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '3'
                type: !promise 'package1.uint8'
            - find:
                name: sample_field4
              promise_id: package1.SampleClass.sample_field4
              set:
                description: 'This block comment is added to the property descriptions
                  of sample_field4 and sample_field5. Fields in SampleClass can reference
                  enums in other files. The property sample_field4 is of type SampleEnum.
                  cf. SampleEnum '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                type: !promise 'SampleEnum.SampleEnum'
            - find:
                name: sample_field5
              promise_id: package1.SampleClass.sample_field5
              set:
                description: 'This block comment is added to the property descriptions
                  of sample_field4 and sample_field5. This inline comment is added
                  to the property description of sample_field5. The property sample_field5
                  is of type SampleEnumValue. cf. SampleEnum, SAMPLE_ENUM_VALUE_XXX '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                type: !promise 'SampleEnum.SampleEnumValue'
        enumerations:
        - find:
            name: SampleEnumValue
          promise_id: SampleEnum.SampleEnumValue
          set:
            description: 'SampleEnum.msg This block comment is added to the enum description
              of SampleEnumValue. '
          sync:
            literals:
            - find:
                name: RED
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '0'
            - find:
                name: BLUE
              set:
                description: 'This inline comment is added to the enum literal description
                  of BLUE. '
                value: !new_object
                  _type: LiteralNumericValue
                  value: '1'
            - find:
                name: YELLOW
              set:
                description: 'This block comment is added to the enum literal descriptions
                  of YELLOW and GREEN. '
                value: !new_object
                  _type: LiteralNumericValue
                  value: '2'
            - find:
                name: GREEN
              set:
                description: 'This block comment is added to the enum literal descriptions
                  of YELLOW and GREEN. '
                value: !new_object
                  _type: LiteralNumericValue
                  value: '3'
        - find:
            name: SampleEnum
          promise_id: SampleEnum.SampleEnum
          set:
            description: 'This block comment is added to the enum description of SampleEnum.
              In a file, there can only be one or no enum whose literal names do not
              share a common prefix. '
          sync:
            literals:
            - find:
                name: OK
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '0'
            - find:
                name: WARN
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '1'
            - find:
                name: ERROR
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '2'
            - find:
                name: STALE
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '3'
        owned_associations:
        - find:
            navigable_members:
            - !promise 'package1.SampleClass.sample_field2'
          sync:
            members:
            - find:
                type: !promise 'package1.SampleClass'
              set:
                _type: Property
                kind: ASSOCIATION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
        - find:
            navigable_members:
            - !promise 'package1.SampleClass.sample_field4'
          sync:
            members:
            - find:
                type: !promise 'package1.SampleClass'
              set:
                _type: Property
                kind: ASSOCIATION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
        - find:
            navigable_members:
            - !promise 'package1.SampleClass.sample_field5'
          sync:
            members:
            - find:
                type: !promise 'package1.SampleClass'
              set:
                _type: Property
                kind: ASSOCIATION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
    - find:
        name: package2
      sync:
        classes:
        - find:
            name: SampleClassEnum
          promise_id: package2.SampleClassEnum
          set:
            description: 'SampleClassEnum.msg Properties in SampleClassEnum can reference
              enums in the same file. '
          sync:
            properties:
            - find:
                name: status
              promise_id: package2.SampleClassEnum.status
              set:
                description: 'The property status is of type SampleClassEnumStatus. '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                type: !promise 'SampleClassEnum.SampleClassEnumStatus'
            - find:
                name: color
              promise_id: package2.SampleClassEnum.color
              set:
                description: 'The property color is of type Color. '
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                type: !promise 'SampleClassEnum.Color'
            - find:
                name: field
              promise_id: package2.SampleClassEnum.field
              set:
                kind: COMPOSITION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                type: !promise 'package2.uint8'
        enumerations:
        - find:
            name: SampleClassEnumStatus
          promise_id: SampleClassEnum.SampleClassEnumStatus
          set:
            description: 'This block comment is added to the enum description of SampleClassEnumStatus. '
          sync:
            literals:
            - find:
                name: OK
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '0'
            - find:
                name: WARN
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '1'
            - find:
                name: ERROR
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '2'
            - find:
                name: STALE
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '3'
        - find:
            name: Color
          promise_id: SampleClassEnum.Color
          set:
            description: 'This block comment is added to the enum description of Color. '
          sync:
            literals:
            - find:
                name: RED
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '0'
            - find:
                name: BLUE
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '1'
            - find:
                name: YELLOW
              set:
                value: !new_object
                  _type: LiteralNumericValue
                  value: '2'
        owned_associations:
        - find:
            navigable_members:
            - !promise 'package2.SampleClassEnum.status'
          sync:
            members:
            - find:
                type: !promise 'package2.SampleClassEnum'
              set:
                _type: Property
                kind: ASSOCIATION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
        - find:
            navigable_members:
            - !promise 'package2.SampleClassEnum.color'
          sync:
            members:
            - find:
                type: !promise 'package2.SampleClassEnum'
              set:
                _type: Property
                kind: ASSOCIATION
                max_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
                min_card: !new_object
                  _type: LiteralNumericValue
                  value: '1'
- parent: !promise 'package1.SampleClass.sample_field1'
  set:
    kind: UNSET
- parent: !promise 'package1.SampleClass.sample_field3'
  set:
    kind: UNSET
- parent: !promise 'package2.SampleClassEnum.field'
  set:
    kind: UNSET
- parent: !uuid '00000000-0000-0000-0000-000000000001'
  sync:
    packages:
    - find:
        name: Data Types
      sync:
        datatypes:
        - find:
            _type: NumericType
            name: uint8
          promise_id: package1.uint8
        - find:
            _type: NumericType
            name: uint8
          promise_id: package2.uint8
