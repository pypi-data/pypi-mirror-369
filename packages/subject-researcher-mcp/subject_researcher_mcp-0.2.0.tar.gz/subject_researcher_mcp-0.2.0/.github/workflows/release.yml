name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git history
        echo "## What's Changed" > CHANGELOG.md
        
        # Check if this is the first tag
        if git describe --tags --abbrev=0 HEAD^ 2>/dev/null; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${GITHUB_REF#refs/tags/}" >> CHANGELOG.md
        else
          echo "ðŸŽ‰ Initial release of Enhanced Subject Researcher MCP!" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Features" >> CHANGELOG.md
          echo "- Iterative target-driven research engine with 11-phase methodology" >> CHANGELOG.md
          echo "- Real web search integration with multiple source types" >> CHANGELOG.md
          echo "- Quality metrics tracking (coverage, recency, novelty, agreement)" >> CHANGELOG.md
          echo "- Sophisticated claim mining and credibility analysis" >> CHANGELOG.md
          echo "- Configurable research parameters and stop criteria" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/commits/${GITHUB_REF#refs/tags/}" >> CHANGELOG.md
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  test-before-release:
    name: Pre-Release Test Suite
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-asyncio ruff
        
    - name: Run comprehensive test suite
      run: |
        echo "Running comprehensive test suite before release..."
        
        # Run date validation tests
        pytest tests/test_date_validation.py -v --tb=short
        
        # Run integration tests
        pytest tests/test_mcp_server_integration.py -v --tb=short
        
        # Run E2E tests with date validation
        pytest tests/test_e2e_research_dates.py -v --tb=short
        
        # Run custom test runner
        python tests/test_runner_dates.py
        
        echo "âœ… All tests passed - ready for release"

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: test-before-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install build tools
      run: |
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

  publish-docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: test-before-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/subject-researcher-mcp:latest
          ${{ secrets.DOCKER_USERNAME }}/subject-researcher-mcp:${{ steps.version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max