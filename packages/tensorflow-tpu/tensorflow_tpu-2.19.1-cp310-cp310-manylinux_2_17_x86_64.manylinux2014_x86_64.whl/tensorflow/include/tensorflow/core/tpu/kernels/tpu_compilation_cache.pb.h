// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/tpu/kernels/tpu_compilation_cache.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021009 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/tf2xla/host_compute_metadata.pb.h"
#include "tensorflow/core/tpu/kernels/tpu_compilation_cache_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto;
namespace tensorflow {
namespace tpu {
class GetTpuProgramResponseExternal;
struct GetTpuProgramResponseExternalDefaultTypeInternal;
extern GetTpuProgramResponseExternalDefaultTypeInternal _GetTpuProgramResponseExternal_default_instance_;
class GetTpuProgramResponseExternal_Blob;
struct GetTpuProgramResponseExternal_BlobDefaultTypeInternal;
extern GetTpuProgramResponseExternal_BlobDefaultTypeInternal _GetTpuProgramResponseExternal_Blob_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> ::tensorflow::tpu::GetTpuProgramResponseExternal* Arena::CreateMaybeMessage<::tensorflow::tpu::GetTpuProgramResponseExternal>(Arena*);
template<> ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* Arena::CreateMaybeMessage<::tensorflow::tpu::GetTpuProgramResponseExternal_Blob>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tensorflow {
namespace tpu {

// ===================================================================

class GetTpuProgramResponseExternal_Blob final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.tpu.GetTpuProgramResponseExternal.Blob) */ {
 public:
  inline GetTpuProgramResponseExternal_Blob() : GetTpuProgramResponseExternal_Blob(nullptr) {}
  ~GetTpuProgramResponseExternal_Blob() override;
  explicit PROTOBUF_CONSTEXPR GetTpuProgramResponseExternal_Blob(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetTpuProgramResponseExternal_Blob(const GetTpuProgramResponseExternal_Blob& from);
  GetTpuProgramResponseExternal_Blob(GetTpuProgramResponseExternal_Blob&& from) noexcept
    : GetTpuProgramResponseExternal_Blob() {
    *this = ::std::move(from);
  }

  inline GetTpuProgramResponseExternal_Blob& operator=(const GetTpuProgramResponseExternal_Blob& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTpuProgramResponseExternal_Blob& operator=(GetTpuProgramResponseExternal_Blob&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTpuProgramResponseExternal_Blob& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTpuProgramResponseExternal_Blob* internal_default_instance() {
    return reinterpret_cast<const GetTpuProgramResponseExternal_Blob*>(
               &_GetTpuProgramResponseExternal_Blob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetTpuProgramResponseExternal_Blob& a, GetTpuProgramResponseExternal_Blob& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTpuProgramResponseExternal_Blob* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTpuProgramResponseExternal_Blob* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTpuProgramResponseExternal_Blob* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTpuProgramResponseExternal_Blob>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetTpuProgramResponseExternal_Blob& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetTpuProgramResponseExternal_Blob& from) {
    GetTpuProgramResponseExternal_Blob::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTpuProgramResponseExternal_Blob* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.tpu.GetTpuProgramResponseExternal.Blob";
  }
  protected:
  explicit GetTpuProgramResponseExternal_Blob(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.tpu.GetTpuProgramResponseExternal.Blob)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto;
};
// -------------------------------------------------------------------

class GetTpuProgramResponseExternal final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tensorflow.tpu.GetTpuProgramResponseExternal) */ {
 public:
  inline GetTpuProgramResponseExternal() : GetTpuProgramResponseExternal(nullptr) {}
  ~GetTpuProgramResponseExternal() override;
  explicit PROTOBUF_CONSTEXPR GetTpuProgramResponseExternal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetTpuProgramResponseExternal(const GetTpuProgramResponseExternal& from);
  GetTpuProgramResponseExternal(GetTpuProgramResponseExternal&& from) noexcept
    : GetTpuProgramResponseExternal() {
    *this = ::std::move(from);
  }

  inline GetTpuProgramResponseExternal& operator=(const GetTpuProgramResponseExternal& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTpuProgramResponseExternal& operator=(GetTpuProgramResponseExternal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTpuProgramResponseExternal& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTpuProgramResponseExternal* internal_default_instance() {
    return reinterpret_cast<const GetTpuProgramResponseExternal*>(
               &_GetTpuProgramResponseExternal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetTpuProgramResponseExternal& a, GetTpuProgramResponseExternal& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTpuProgramResponseExternal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTpuProgramResponseExternal* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTpuProgramResponseExternal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTpuProgramResponseExternal>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetTpuProgramResponseExternal& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetTpuProgramResponseExternal& from) {
    GetTpuProgramResponseExternal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTpuProgramResponseExternal* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tensorflow.tpu.GetTpuProgramResponseExternal";
  }
  protected:
  explicit GetTpuProgramResponseExternal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetTpuProgramResponseExternal_Blob Blob;

  // accessors -------------------------------------------------------

  enum : int {
    kProtoFieldNumber = 1,
    kHostComputeMetadataFieldNumber = 2,
    kCompilerMetadataFieldNumber = 4,
    kMayModifyVariablesFieldNumber = 3,
    kIsEmptyFieldNumber = 5,
  };
  // .tensorflow.tpu.GetTpuProgramResponseExternal.Blob proto = 1;
  bool has_proto() const;
  private:
  bool _internal_has_proto() const;
  public:
  void clear_proto();
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& proto() const;
  PROTOBUF_NODISCARD ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* release_proto();
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* mutable_proto();
  void set_allocated_proto(::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* proto);
  private:
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& _internal_proto() const;
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* _internal_mutable_proto();
  public:
  void unsafe_arena_set_allocated_proto(
      ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* proto);
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* unsafe_arena_release_proto();

  // .tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 2;
  bool has_host_compute_metadata() const;
  private:
  bool _internal_has_host_compute_metadata() const;
  public:
  void clear_host_compute_metadata();
  const ::tensorflow::tf2xla::HostComputeMetadata& host_compute_metadata() const;
  PROTOBUF_NODISCARD ::tensorflow::tf2xla::HostComputeMetadata* release_host_compute_metadata();
  ::tensorflow::tf2xla::HostComputeMetadata* mutable_host_compute_metadata();
  void set_allocated_host_compute_metadata(::tensorflow::tf2xla::HostComputeMetadata* host_compute_metadata);
  private:
  const ::tensorflow::tf2xla::HostComputeMetadata& _internal_host_compute_metadata() const;
  ::tensorflow::tf2xla::HostComputeMetadata* _internal_mutable_host_compute_metadata();
  public:
  void unsafe_arena_set_allocated_host_compute_metadata(
      ::tensorflow::tf2xla::HostComputeMetadata* host_compute_metadata);
  ::tensorflow::tf2xla::HostComputeMetadata* unsafe_arena_release_host_compute_metadata();

  // .tensorflow.tpu.GetTpuProgramResponseExternal.Blob compiler_metadata = 4;
  bool has_compiler_metadata() const;
  private:
  bool _internal_has_compiler_metadata() const;
  public:
  void clear_compiler_metadata();
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& compiler_metadata() const;
  PROTOBUF_NODISCARD ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* release_compiler_metadata();
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* mutable_compiler_metadata();
  void set_allocated_compiler_metadata(::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* compiler_metadata);
  private:
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& _internal_compiler_metadata() const;
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* _internal_mutable_compiler_metadata();
  public:
  void unsafe_arena_set_allocated_compiler_metadata(
      ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* compiler_metadata);
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* unsafe_arena_release_compiler_metadata();

  // bool may_modify_variables = 3;
  void clear_may_modify_variables();
  bool may_modify_variables() const;
  void set_may_modify_variables(bool value);
  private:
  bool _internal_may_modify_variables() const;
  void _internal_set_may_modify_variables(bool value);
  public:

  // bool is_empty = 5;
  void clear_is_empty();
  bool is_empty() const;
  void set_is_empty(bool value);
  private:
  bool _internal_is_empty() const;
  void _internal_set_is_empty(bool value);
  public:

  // @@protoc_insertion_point(class_scope:tensorflow.tpu.GetTpuProgramResponseExternal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* proto_;
    ::tensorflow::tf2xla::HostComputeMetadata* host_compute_metadata_;
    ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* compiler_metadata_;
    bool may_modify_variables_;
    bool is_empty_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetTpuProgramResponseExternal_Blob

// bytes data = 1;
inline void GetTpuProgramResponseExternal_Blob::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& GetTpuProgramResponseExternal_Blob::data() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.Blob.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetTpuProgramResponseExternal_Blob::set_data(ArgT0&& arg0, ArgT... args) {
 
 _impl_.data_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tensorflow.tpu.GetTpuProgramResponseExternal.Blob.data)
}
inline std::string* GetTpuProgramResponseExternal_Blob::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.GetTpuProgramResponseExternal.Blob.data)
  return _s;
}
inline const std::string& GetTpuProgramResponseExternal_Blob::_internal_data() const {
  return _impl_.data_.Get();
}
inline void GetTpuProgramResponseExternal_Blob::_internal_set_data(const std::string& value) {
  
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* GetTpuProgramResponseExternal_Blob::_internal_mutable_data() {
  
  return _impl_.data_.Mutable(GetArenaForAllocation());
}
inline std::string* GetTpuProgramResponseExternal_Blob::release_data() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.GetTpuProgramResponseExternal.Blob.data)
  return _impl_.data_.Release();
}
inline void GetTpuProgramResponseExternal_Blob::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  _impl_.data_.SetAllocated(data, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.Blob.data)
}

// -------------------------------------------------------------------

// GetTpuProgramResponseExternal

// .tensorflow.tpu.GetTpuProgramResponseExternal.Blob proto = 1;
inline bool GetTpuProgramResponseExternal::_internal_has_proto() const {
  return this != internal_default_instance() && _impl_.proto_ != nullptr;
}
inline bool GetTpuProgramResponseExternal::has_proto() const {
  return _internal_has_proto();
}
inline void GetTpuProgramResponseExternal::clear_proto() {
  if (GetArenaForAllocation() == nullptr && _impl_.proto_ != nullptr) {
    delete _impl_.proto_;
  }
  _impl_.proto_ = nullptr;
}
inline const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& GetTpuProgramResponseExternal::_internal_proto() const {
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* p = _impl_.proto_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob&>(
      ::tensorflow::tpu::_GetTpuProgramResponseExternal_Blob_default_instance_);
}
inline const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& GetTpuProgramResponseExternal::proto() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.proto)
  return _internal_proto();
}
inline void GetTpuProgramResponseExternal::unsafe_arena_set_allocated_proto(
    ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* proto) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.proto_);
  }
  _impl_.proto_ = proto;
  if (proto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.proto)
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::release_proto() {
  
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* temp = _impl_.proto_;
  _impl_.proto_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::unsafe_arena_release_proto() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.GetTpuProgramResponseExternal.proto)
  
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* temp = _impl_.proto_;
  _impl_.proto_ = nullptr;
  return temp;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::_internal_mutable_proto() {
  
  if (_impl_.proto_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::tpu::GetTpuProgramResponseExternal_Blob>(GetArenaForAllocation());
    _impl_.proto_ = p;
  }
  return _impl_.proto_;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::mutable_proto() {
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* _msg = _internal_mutable_proto();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.GetTpuProgramResponseExternal.proto)
  return _msg;
}
inline void GetTpuProgramResponseExternal::set_allocated_proto(::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* proto) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.proto_;
  }
  if (proto) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(proto);
    if (message_arena != submessage_arena) {
      proto = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, proto, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.proto_ = proto;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.proto)
}

// .tensorflow.tf2xla.HostComputeMetadata host_compute_metadata = 2;
inline bool GetTpuProgramResponseExternal::_internal_has_host_compute_metadata() const {
  return this != internal_default_instance() && _impl_.host_compute_metadata_ != nullptr;
}
inline bool GetTpuProgramResponseExternal::has_host_compute_metadata() const {
  return _internal_has_host_compute_metadata();
}
inline const ::tensorflow::tf2xla::HostComputeMetadata& GetTpuProgramResponseExternal::_internal_host_compute_metadata() const {
  const ::tensorflow::tf2xla::HostComputeMetadata* p = _impl_.host_compute_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tf2xla::HostComputeMetadata&>(
      ::tensorflow::tf2xla::_HostComputeMetadata_default_instance_);
}
inline const ::tensorflow::tf2xla::HostComputeMetadata& GetTpuProgramResponseExternal::host_compute_metadata() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.host_compute_metadata)
  return _internal_host_compute_metadata();
}
inline void GetTpuProgramResponseExternal::unsafe_arena_set_allocated_host_compute_metadata(
    ::tensorflow::tf2xla::HostComputeMetadata* host_compute_metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.host_compute_metadata_);
  }
  _impl_.host_compute_metadata_ = host_compute_metadata;
  if (host_compute_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.host_compute_metadata)
}
inline ::tensorflow::tf2xla::HostComputeMetadata* GetTpuProgramResponseExternal::release_host_compute_metadata() {
  
  ::tensorflow::tf2xla::HostComputeMetadata* temp = _impl_.host_compute_metadata_;
  _impl_.host_compute_metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::tensorflow::tf2xla::HostComputeMetadata* GetTpuProgramResponseExternal::unsafe_arena_release_host_compute_metadata() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.GetTpuProgramResponseExternal.host_compute_metadata)
  
  ::tensorflow::tf2xla::HostComputeMetadata* temp = _impl_.host_compute_metadata_;
  _impl_.host_compute_metadata_ = nullptr;
  return temp;
}
inline ::tensorflow::tf2xla::HostComputeMetadata* GetTpuProgramResponseExternal::_internal_mutable_host_compute_metadata() {
  
  if (_impl_.host_compute_metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::tf2xla::HostComputeMetadata>(GetArenaForAllocation());
    _impl_.host_compute_metadata_ = p;
  }
  return _impl_.host_compute_metadata_;
}
inline ::tensorflow::tf2xla::HostComputeMetadata* GetTpuProgramResponseExternal::mutable_host_compute_metadata() {
  ::tensorflow::tf2xla::HostComputeMetadata* _msg = _internal_mutable_host_compute_metadata();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.GetTpuProgramResponseExternal.host_compute_metadata)
  return _msg;
}
inline void GetTpuProgramResponseExternal::set_allocated_host_compute_metadata(::tensorflow::tf2xla::HostComputeMetadata* host_compute_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.host_compute_metadata_);
  }
  if (host_compute_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_compute_metadata));
    if (message_arena != submessage_arena) {
      host_compute_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_compute_metadata, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.host_compute_metadata_ = host_compute_metadata;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.host_compute_metadata)
}

// bool may_modify_variables = 3;
inline void GetTpuProgramResponseExternal::clear_may_modify_variables() {
  _impl_.may_modify_variables_ = false;
}
inline bool GetTpuProgramResponseExternal::_internal_may_modify_variables() const {
  return _impl_.may_modify_variables_;
}
inline bool GetTpuProgramResponseExternal::may_modify_variables() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.may_modify_variables)
  return _internal_may_modify_variables();
}
inline void GetTpuProgramResponseExternal::_internal_set_may_modify_variables(bool value) {
  
  _impl_.may_modify_variables_ = value;
}
inline void GetTpuProgramResponseExternal::set_may_modify_variables(bool value) {
  _internal_set_may_modify_variables(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.GetTpuProgramResponseExternal.may_modify_variables)
}

// .tensorflow.tpu.GetTpuProgramResponseExternal.Blob compiler_metadata = 4;
inline bool GetTpuProgramResponseExternal::_internal_has_compiler_metadata() const {
  return this != internal_default_instance() && _impl_.compiler_metadata_ != nullptr;
}
inline bool GetTpuProgramResponseExternal::has_compiler_metadata() const {
  return _internal_has_compiler_metadata();
}
inline void GetTpuProgramResponseExternal::clear_compiler_metadata() {
  if (GetArenaForAllocation() == nullptr && _impl_.compiler_metadata_ != nullptr) {
    delete _impl_.compiler_metadata_;
  }
  _impl_.compiler_metadata_ = nullptr;
}
inline const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& GetTpuProgramResponseExternal::_internal_compiler_metadata() const {
  const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* p = _impl_.compiler_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob&>(
      ::tensorflow::tpu::_GetTpuProgramResponseExternal_Blob_default_instance_);
}
inline const ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob& GetTpuProgramResponseExternal::compiler_metadata() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.compiler_metadata)
  return _internal_compiler_metadata();
}
inline void GetTpuProgramResponseExternal::unsafe_arena_set_allocated_compiler_metadata(
    ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* compiler_metadata) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.compiler_metadata_);
  }
  _impl_.compiler_metadata_ = compiler_metadata;
  if (compiler_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.compiler_metadata)
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::release_compiler_metadata() {
  
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* temp = _impl_.compiler_metadata_;
  _impl_.compiler_metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::unsafe_arena_release_compiler_metadata() {
  // @@protoc_insertion_point(field_release:tensorflow.tpu.GetTpuProgramResponseExternal.compiler_metadata)
  
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* temp = _impl_.compiler_metadata_;
  _impl_.compiler_metadata_ = nullptr;
  return temp;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::_internal_mutable_compiler_metadata() {
  
  if (_impl_.compiler_metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::tpu::GetTpuProgramResponseExternal_Blob>(GetArenaForAllocation());
    _impl_.compiler_metadata_ = p;
  }
  return _impl_.compiler_metadata_;
}
inline ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* GetTpuProgramResponseExternal::mutable_compiler_metadata() {
  ::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* _msg = _internal_mutable_compiler_metadata();
  // @@protoc_insertion_point(field_mutable:tensorflow.tpu.GetTpuProgramResponseExternal.compiler_metadata)
  return _msg;
}
inline void GetTpuProgramResponseExternal::set_allocated_compiler_metadata(::tensorflow::tpu::GetTpuProgramResponseExternal_Blob* compiler_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.compiler_metadata_;
  }
  if (compiler_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(compiler_metadata);
    if (message_arena != submessage_arena) {
      compiler_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, compiler_metadata, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.compiler_metadata_ = compiler_metadata;
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.GetTpuProgramResponseExternal.compiler_metadata)
}

// bool is_empty = 5;
inline void GetTpuProgramResponseExternal::clear_is_empty() {
  _impl_.is_empty_ = false;
}
inline bool GetTpuProgramResponseExternal::_internal_is_empty() const {
  return _impl_.is_empty_;
}
inline bool GetTpuProgramResponseExternal::is_empty() const {
  // @@protoc_insertion_point(field_get:tensorflow.tpu.GetTpuProgramResponseExternal.is_empty)
  return _internal_is_empty();
}
inline void GetTpuProgramResponseExternal::_internal_set_is_empty(bool value) {
  
  _impl_.is_empty_ = value;
}
inline void GetTpuProgramResponseExternal::set_is_empty(bool value) {
  _internal_set_is_empty(value);
  // @@protoc_insertion_point(field_set:tensorflow.tpu.GetTpuProgramResponseExternal.is_empty)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tpu
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tensorflow_2fcore_2ftpu_2fkernels_2ftpu_5fcompilation_5fcache_2eproto
