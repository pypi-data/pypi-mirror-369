# Generated by Django 3.2.16 on 2023-04-07 23:37

from django.db import migrations, models
import django.db.models.deletion


def forward(apps, schema_editor):
    """From non inheritance to CustomBaseSetting inheritance"""
    CustomSetting = apps.get_model("tethys_apps", "customsetting")
    OldCustomSetting = apps.get_model("tethys_apps", "oldcustomsetting")

    db_alias = schema_editor.connection.alias

    for cs in OldCustomSetting.objects.using(db_alias).all():
        cs_child = CustomSetting.objects.create(
            tethys_app=cs.tethys_app,
            name=cs.name,
            description=cs.description,
            required=cs.required,
            type_custom_setting="SIMPLE",
            value=cs.value,
            default=cs.default,
            type=cs.type,
        )
        cs_child.save()


def backward(apps, schema_editor):
    """From CustomBaseSetting inheritance to non inheritance"""
    CustomSetting = apps.get_model("tethys_apps", "customsetting")
    OldCustomSetting = apps.get_model("tethys_apps", "oldcustomsetting")

    db_alias = schema_editor.connection.alias

    for cs in CustomSetting.objects.using(db_alias).all():
        cs_old = OldCustomSetting.objects.create(
            tethys_app=cs.tethys_app,
            name=cs.name,
            description=cs.description,
            required=cs.required,
            value=cs.value,
            default=cs.default,
            type=cs.type,
        )
        cs_old.save()


class Migration(migrations.Migration):
    dependencies = [
        ("tethys_apps", "0001_initial_41"),
    ]

    operations = [
        ## Rename Model
        migrations.RenameModel("customsetting", "oldcustomsetting"),
        migrations.CreateModel(
            name="CustomSettingBase",
            fields=[
                (
                    "tethysappsetting_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tethys_apps.tethysappsetting",
                    ),
                ),
                (
                    "type_custom_setting",
                    models.CharField(blank=True, default="", max_length=1024),
                ),
            ],
            bases=("tethys_apps.tethysappsetting",),
        ),
        migrations.CreateModel(
            name="JSONCustomSetting",
            fields=[
                (
                    "customsettingbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tethys_apps.customsettingbase",
                    ),
                ),
                ("value", models.JSONField(blank=True, default=dict)),
                ("default", models.JSONField(blank=True, default=dict)),
            ],
            bases=("tethys_apps.customsettingbase",),
        ),
        migrations.CreateModel(
            name="SecretCustomSetting",
            fields=[
                (
                    "customsettingbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tethys_apps.customsettingbase",
                    ),
                ),
                ("value", models.CharField(blank=True, default="", max_length=1024)),
            ],
            bases=("tethys_apps.customsettingbase",),
        ),
        # create new CustomSetting
        migrations.CreateModel(
            name="CustomSetting",
            fields=[
                (
                    "customsettingbase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tethys_apps.customsettingbase",
                    ),
                ),
                ("value", models.CharField(blank=True, default="", max_length=1024)),
                ("default", models.CharField(blank=True, default="", max_length=1024)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("STRING", "String"),
                            ("INTEGER", "Integer"),
                            ("FLOAT", "Float"),
                            ("BOOLEAN", "Boolean"),
                            ("UUID", "UUID"),
                        ],
                        default="STRING",
                        max_length=200,
                    ),
                ),
            ],
            bases=("tethys_apps.customsettingbase",),
        ),
        # Migrate data from oldcustomsetting model to new customsetting model
        migrations.RunPython(forward, backward),
        migrations.DeleteModel(
            name="oldcustomsetting",
        ),
    ]
