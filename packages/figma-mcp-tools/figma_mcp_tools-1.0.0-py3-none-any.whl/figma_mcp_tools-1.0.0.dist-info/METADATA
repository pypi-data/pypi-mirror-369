Metadata-Version: 2.4
Name: figma-mcp-tools
Version: 1.0.0
Summary: A Model Context Protocol (MCP) server for Figma integration
Author-email: DRX-1877 <your.email@example.com>
Maintainer-email: DRX-1877 <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/DRX-1877/figma-mcp-server
Project-URL: Documentation, https://github.com/DRX-1877/figma-mcp-server#readme
Project-URL: Repository, https://github.com/DRX-1877/figma-mcp-server
Project-URL: Bug Tracker, https://github.com/DRX-1877/figma-mcp-server/issues
Keywords: figma,mcp,model-context-protocol,design,api
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mcp>=1.0.0
Requires-Dist: httpx>=0.24.0
Requires-Dist: requests>=2.28.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: license-file

# Figma MCP Server

> **English**: [README.en.md](README.en.md) | **中文**: [README.zh-CN.md](README.zh-CN.md)

[![English](https://img.shields.io/badge/Language-English-blue)](README.en.md)
[![中文](https://img.shields.io/badge/Language-中文-red)](README.zh-CN.md)

## 🌍 Language Selection / 语言选择

### 🇺🇸 English
For English documentation, please visit: **[README.en.md](README.en.md)**

### 🇨🇳 中文
对于中文文档，请访问：**[README.zh-CN.md](README.zh-CN.md)**

---

## 🚀 Quick Overview / 快速概览

A specialized MCP server designed for **developers** to systematically extract and organize Figma design files at the **page level**.

一个专门为**程序员**设计的MCP服务器，用于系统性地按**页面级别**提取和组织Figma设计文件。

### ✨ Key Features / 主要功能

- ⭐ **Page-Level Data Extraction** / **页面级数据提取**
- 🔍 **Structured Node Information** / **结构化节点信息**
- 🖼️ **Visual References** / **视觉参考**
- 📊 **Context-Aware Processing** / **上下文感知处理**
- 📁 **Developer-Friendly Output** / **开发者友好输出**
- 🔧 **MCP Integration** / **MCP集成**
- 💡 **AI-Optimized Structure** / **AI优化结构**

### 🛠️ Quick Installation / 快速安装

```bash
# Clone the repository
git clone https://github.com/DRX-1877/figma-mcp-server.git
cd figma-mcp-server

# Run installation script (automatically configures environment)
./install.sh  # macOS/Linux
# or
install.bat   # Windows
```

**That's it!** The command will be available globally after installation.

**就这么简单！** 安装后命令即可全局使用。

### 🌍 Global Command Availability / 全局命令可用性

After installation, the `figma-mcp-server` command will be available **globally** from any directory:

安装完成后，`figma-mcp-server` 命令将在**任何目录**中全局可用：

#### macOS/Linux
```bash
# Use from any directory
figma-mcp-server --help

# If command is not available, run the fix script
./fix-command.sh

# Or manually reload shell configuration
source ~/.zshrc  # for zsh
# or
source ~/.bashrc # for bash
```

#### Windows
```cmd
# Use from any directory
figma-mcp-server --help

# If command is not available, run the fix script
fix-command.bat

# Or reopen command prompt to reload environment variables
```

### 🔧 Automatic Environment Configuration / 自动环境配置

The installation script automatically configures your environment:

安装脚本会自动配置您的环境：

- **PATH Configuration**: Adds virtual environment and local bin directories to PATH
- **PATH 配置**: 自动将虚拟环境和本地 bin 目录添加到 PATH
- **Global Symlinks**: Creates symbolic links in system directories
- **全局符号链接**: 在系统目录中创建符号链接
- **Shell Integration**: Updates shell configuration files (.zshrc, .bashrc)
- **Shell 集成**: 更新 shell 配置文件 (.zshrc, .bashrc)

**No manual configuration required!** 🎉

**无需手动配置！** 🎉

### 🔍 Troubleshooting / 故障排除

If the command is not available after installation:

如果安装后命令不可用：

#### macOS/Linux
```bash
# Option 1: Run the fix script
./fix-command.sh

# Option 2: Manually reload shell configuration
source ~/.zshrc  # for zsh
# or
source ~/.bashrc # for bash

# Option 3: Open a new terminal window
```

#### Windows
```cmd
# Option 1: Run the fix script
fix-command.bat

# Option 2: Reopen command prompt

# Option 3: Restart computer
```

### 📚 Documentation / 文档

- **[Usage Guide / 使用指南](USAGE.md)** | **[English](USAGE_EN.md)**
- **[Project Summary / 项目总结](PROJECT_SUMMARY.md)** | **[English](PROJECT_SUMMARY_EN.md)**

---

## 📖 Choose Your Language / 选择您的语言

### 🇺🇸 [English Documentation](README.en.md)
Complete English documentation with detailed installation instructions, usage examples, and API reference.

### 🇨🇳 [中文文档](README.zh-CN.md)
完整的中文文档，包含详细的安装说明、使用示例和API参考。
