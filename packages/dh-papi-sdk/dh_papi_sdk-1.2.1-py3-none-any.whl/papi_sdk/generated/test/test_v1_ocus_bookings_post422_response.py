# coding: utf-8

"""
    Salesforce Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from generated.models.v1_ocus_bookings_post422_response import V1OcusBookingsPost422Response

class TestV1OcusBookingsPost422Response(unittest.TestCase):
    """V1OcusBookingsPost422Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1OcusBookingsPost422Response:
        """Test V1OcusBookingsPost422Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1OcusBookingsPost422Response`
        """
        model = V1OcusBookingsPost422Response()
        if include_optional:
            return V1OcusBookingsPost422Response(
                message = '',
                errors = {"data.relationships.address.data.attributes.country_code":["The data.relationships.address.data.attributes.country code field is required."],"data.relationships.address.data.attributes.lat":["The data.relationships.address.data.attributes.lat field is required ..."],"data.relationships.address.data.attributes.lng":["The data.relationships.address.data.attributes.lng field is required ..."],"data.type":["The data.type field is required."]}
            )
        else:
            return V1OcusBookingsPost422Response(
        )
        """

    def testV1OcusBookingsPost422Response(self):
        """Test V1OcusBookingsPost422Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
