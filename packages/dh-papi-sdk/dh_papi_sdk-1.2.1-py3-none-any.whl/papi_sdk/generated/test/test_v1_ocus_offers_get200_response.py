# coding: utf-8

"""
    Salesforce Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from generated.models.v1_ocus_offers_get200_response import V1OcusOffersGet200Response

class TestV1OcusOffersGet200Response(unittest.TestCase):
    """V1OcusOffersGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1OcusOffersGet200Response:
        """Test V1OcusOffersGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1OcusOffersGet200Response`
        """
        model = V1OcusOffersGet200Response()
        if include_optional:
            return V1OcusOffersGet200Response(
                data = generated.models._v1_ocus_members_get_200_response_all_of_data._v1_ocus_members_get_200_response_allOf_data(
                    type = 'member', 
                    id = '37c024d2-6dde-11eb-ac77-46759aa033cb', 
                    attributes = generated.models._v1_ocus_members_get_200_response_all_of_data_attributes._v1_ocus_members_get_200_response_allOf_data_attributes(
                        firstname = 'API', 
                        lastname = 'Foodpanda', 
                        sex = '0', 
                        email = 'dh_sf_photobooking_service@deliveryhero.com', 
                        email_verified_at = '2021-06-21T13:31:41Z', 
                        email_unreachable = False, 
                        short_id = 51557488, 
                        hubspot_id = '', 
                        pin_code = '', 
                        phone_1 = '', 
                        phone_1_verified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        phone_2 = '', 
                        locale = 'en', 
                        position = '', 
                        rate = '', 
                        enabled = True, 
                        welcomed = True, 
                        last_login_at = '2025-02-24T08:38:16Z', 
                        created_at = '2021-02-13T09:31:15Z', 
                        updated_at = '2022-02-22T10:38:33Z', ), 
                    relationships = generated.models._v1_ocus_members_get_200_response_all_of_data_relationships._v1_ocus_members_get_200_response_allOf_data_relationships(
                        roles = generated.models._v1_ocus_members_get_200_response_all_of_data_relationships_roles._v1_ocus_members_get_200_response_allOf_data_relationships_roles(
                            data = [
                                generated.models._v1_ocus_members_get_200_response_all_of_data_relationships_roles_data_inner._v1_ocus_members_get_200_response_allOf_data_relationships_roles_data_inner(
                                    type = 'role', 
                                    id = 3, )
                                ], ), ), )
            )
        else:
            return V1OcusOffersGet200Response(
        )
        """

    def testV1OcusOffersGet200Response(self):
        """Test V1OcusOffersGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
