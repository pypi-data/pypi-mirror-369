# coding: utf-8

"""
    Salesforce Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Any, Dict, Optional
from typing_extensions import Annotated
from ..models.vrm_v1_std_composite_post200_response import VrmV1StdCompositePost200Response
from ..models.vrm_v1_std_composite_post_request import VrmV1StdCompositePostRequest
from ..models.vrm_v1_std_query_get200_response import VrmV1StdQueryGet200Response
from ..models.vrm_v1_std_sobjects_s_object_name_post201_response import VrmV1StdSobjectsSObjectNamePost201Response
from ..models.vrm_v1_std_sobjects_s_object_name_s_object_id_get200_response import VrmV1StdSobjectsSObjectNameSObjectIdGet200Response

from ..api_client import ApiClient, RequestSerialized
from ..api_response import ApiResponse
from ..rest import RESTResponseType


class VrmStdApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def vrm_v1_std_composite_post(
        self,
        vrm_v1_std_composite_post_request: Annotated[VrmV1StdCompositePostRequest, Field(description="The composite request containing multiple subrequests.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VrmV1StdCompositePost200Response:
        """Execute multiple Salesforce REST API requests in a single call (Composite API)

        This endpoint allows executing multiple Salesforce REST API requests in a single call using the Composite API. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/composite`. This API requires authentication using a Bearer token and the permissions to perform all the requested operations within the composite request. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to use the Composite API, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/requests_composite.htm). 

        :param vrm_v1_std_composite_post_request: The composite request containing multiple subrequests. (required)
        :type vrm_v1_std_composite_post_request: VrmV1StdCompositePostRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_composite_post_serialize(
            vrm_v1_std_composite_post_request=vrm_v1_std_composite_post_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdCompositePost200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_composite_post_with_http_info(
        self,
        vrm_v1_std_composite_post_request: Annotated[VrmV1StdCompositePostRequest, Field(description="The composite request containing multiple subrequests.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VrmV1StdCompositePost200Response]:
        """Execute multiple Salesforce REST API requests in a single call (Composite API)

        This endpoint allows executing multiple Salesforce REST API requests in a single call using the Composite API. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/composite`. This API requires authentication using a Bearer token and the permissions to perform all the requested operations within the composite request. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to use the Composite API, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/requests_composite.htm). 

        :param vrm_v1_std_composite_post_request: The composite request containing multiple subrequests. (required)
        :type vrm_v1_std_composite_post_request: VrmV1StdCompositePostRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_composite_post_serialize(
            vrm_v1_std_composite_post_request=vrm_v1_std_composite_post_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdCompositePost200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_composite_post_without_preload_content(
        self,
        vrm_v1_std_composite_post_request: Annotated[VrmV1StdCompositePostRequest, Field(description="The composite request containing multiple subrequests.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Execute multiple Salesforce REST API requests in a single call (Composite API)

        This endpoint allows executing multiple Salesforce REST API requests in a single call using the Composite API. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/composite`. This API requires authentication using a Bearer token and the permissions to perform all the requested operations within the composite request. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to use the Composite API, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/requests_composite.htm). 

        :param vrm_v1_std_composite_post_request: The composite request containing multiple subrequests. (required)
        :type vrm_v1_std_composite_post_request: VrmV1StdCompositePostRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_composite_post_serialize(
            vrm_v1_std_composite_post_request=vrm_v1_std_composite_post_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdCompositePost200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_composite_post_serialize(
        self,
        vrm_v1_std_composite_post_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if vrm_v1_std_composite_post_request is not None:
            _body_params = vrm_v1_std_composite_post_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/vrm/v1/std/composite',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def vrm_v1_std_query_get(
        self,
        q: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VrmV1StdQueryGet200Response:
        """vrm_v1_std_query_get

        This endpoint allows executing SOQL (Salesforce Object Query Language) queries against the Salesforce database. You must provide the SOQL query string in the `q` parameter. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/query?q={SOQL}`. This API requires authentication using a Bearer token and the permissions to the requested Salesforce object(s).  The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to construct SOQL queries, refer to the [Salesforce SOQL documentation](https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm). 

        :param q:
        :type q: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_query_get_serialize(
            q=q,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdQueryGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_query_get_with_http_info(
        self,
        q: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VrmV1StdQueryGet200Response]:
        """vrm_v1_std_query_get

        This endpoint allows executing SOQL (Salesforce Object Query Language) queries against the Salesforce database. You must provide the SOQL query string in the `q` parameter. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/query?q={SOQL}`. This API requires authentication using a Bearer token and the permissions to the requested Salesforce object(s).  The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to construct SOQL queries, refer to the [Salesforce SOQL documentation](https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm). 

        :param q:
        :type q: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_query_get_serialize(
            q=q,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdQueryGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_query_get_without_preload_content(
        self,
        q: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """vrm_v1_std_query_get

        This endpoint allows executing SOQL (Salesforce Object Query Language) queries against the Salesforce database. You must provide the SOQL query string in the `q` parameter. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/query?q={SOQL}`. This API requires authentication using a Bearer token and the permissions to the requested Salesforce object(s).  The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to construct SOQL queries, refer to the [Salesforce SOQL documentation](https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm). 

        :param q:
        :type q: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_query_get_serialize(
            q=q,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdQueryGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_query_get_serialize(
        self,
        q,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if q is not None:
            
            _query_params.append(('q', q))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/vrm/v1/std/query',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def vrm_v1_std_sobjects_s_object_name_post(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the new record to create.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VrmV1StdSobjectsSObjectNamePost201Response:
        """Create a new Salesforce SObject record

        This endpoint allows creating a new record in a specified Salesforce SObject. You must provide a JSON payload with the fields and values for the new record. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sobjectName}`. This API requires authentication using a Bearer token and the permissions to create records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to create SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_basic_info_post.htm). 

        :param s_object_name: The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param request_body: The JSON payload representing the new record to create. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_post_serialize(
            s_object_name=s_object_name,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "VrmV1StdSobjectsSObjectNamePost201Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_post_with_http_info(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the new record to create.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VrmV1StdSobjectsSObjectNamePost201Response]:
        """Create a new Salesforce SObject record

        This endpoint allows creating a new record in a specified Salesforce SObject. You must provide a JSON payload with the fields and values for the new record. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sobjectName}`. This API requires authentication using a Bearer token and the permissions to create records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to create SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_basic_info_post.htm). 

        :param s_object_name: The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param request_body: The JSON payload representing the new record to create. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_post_serialize(
            s_object_name=s_object_name,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "VrmV1StdSobjectsSObjectNamePost201Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_post_without_preload_content(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the new record to create.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a new Salesforce SObject record

        This endpoint allows creating a new record in a specified Salesforce SObject. You must provide a JSON payload with the fields and values for the new record. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sobjectName}`. This API requires authentication using a Bearer token and the permissions to create records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to create SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_basic_info_post.htm). 

        :param s_object_name: The name of the Salesforce SObject to create (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param request_body: The JSON payload representing the new record to create. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_post_serialize(
            s_object_name=s_object_name,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "VrmV1StdSobjectsSObjectNamePost201Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_sobjects_s_object_name_post_serialize(
        self,
        s_object_name,
        request_body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if s_object_name is not None:
            _path_params['sObjectName'] = s_object_name
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if request_body is not None:
            _body_params = request_body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/vrm/v1/std/sobjects/{sObjectName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_delete(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete a Salesforce SObject record

        This endpoint deletes a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to delete. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to delete records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to delete SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_delete.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_delete_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '500': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_delete_with_http_info(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete a Salesforce SObject record

        This endpoint deletes a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to delete. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to delete records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to delete SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_delete.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_delete_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '500': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_delete_without_preload_content(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete a Salesforce SObject record

        This endpoint deletes a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to delete. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to delete records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to delete SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_delete.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_delete_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '500': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_sobjects_s_object_name_s_object_id_delete_serialize(
        self,
        s_object_name,
        s_object_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if s_object_name is not None:
            _path_params['sObjectName'] = s_object_name
        if s_object_id is not None:
            _path_params['sObjectId'] = s_object_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/vrm/v1/std/sobjects/{sObjectName}/{sObjectId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_get(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VrmV1StdSobjectsSObjectNameSObjectIdGet200Response:
        """Get a Salesforce SObject record

        This endpoint retrieves a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to retrieve. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to read the requested Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to retrieve SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_retrieve.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_get_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdSobjectsSObjectNameSObjectIdGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_get_with_http_info(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VrmV1StdSobjectsSObjectNameSObjectIdGet200Response]:
        """Get a Salesforce SObject record

        This endpoint retrieves a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to retrieve. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to read the requested Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to retrieve SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_retrieve.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_get_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdSobjectsSObjectNameSObjectIdGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_get_without_preload_content(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a Salesforce SObject record

        This endpoint retrieves a specific record from a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to retrieve. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to read the requested Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to retrieve SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_retrieve.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_get_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VrmV1StdSobjectsSObjectNameSObjectIdGet200Response",
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_sobjects_s_object_name_s_object_id_get_serialize(
        self,
        s_object_name,
        s_object_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if s_object_name is not None:
            _path_params['sObjectName'] = s_object_name
        if s_object_id is not None:
            _path_params['sObjectId'] = s_object_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/vrm/v1/std/sobjects/{sObjectName}/{sObjectId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_patch(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the fields and values to update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Update a Salesforce SObject record

        This endpoint updates an existing record in a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to update, and a JSON payload with the fields and values to update. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to update records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to update SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_update.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param request_body: The JSON payload representing the fields and values to update. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_patch_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_patch_with_http_info(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the fields and values to update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Update a Salesforce SObject record

        This endpoint updates an existing record in a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to update, and a JSON payload with the fields and values to update. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to update records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to update SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_update.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param request_body: The JSON payload representing the fields and values to update. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_patch_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def vrm_v1_std_sobjects_s_object_name_s_object_id_patch_without_preload_content(
        self,
        s_object_name: Annotated[StrictStr, Field(description="The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`).")],
        s_object_id: Annotated[StrictStr, Field(description="The ID of the record to get, update or delete.")],
        request_body: Annotated[Dict[str, Any], Field(description="The JSON payload representing the fields and values to update.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update a Salesforce SObject record

        This endpoint updates an existing record in a specified Salesforce SObject. You must provide the `sObjectId` of the record you want to update, and a JSON payload with the fields and values to update. This endpoint acts as a direct proxy to the Salesforce REST API endpoint: `https://deliveryhero.my.salesforce.com/services/data/{api-ver}/sobjects/{sObjectName}/{sObjectId}`. This API requires authentication using a Bearer token and the permissions to update records in the specified Salesforce object. The `api-ver` is used for setting the correct Salesforce API version. The current version is `v61.0`. For details on how to update SObjects, refer to the [Salesforce documentation](https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_sobject_update.htm). 

        :param s_object_name: The name of the Salesforce SObject to delete (e.g., `Bank_Information__c`, `Account`, `Contact`). (required)
        :type s_object_name: str
        :param s_object_id: The ID of the record to get, update or delete. (required)
        :type s_object_id: str
        :param request_body: The JSON payload representing the fields and values to update. (required)
        :type request_body: Dict[str, object]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._vrm_v1_std_sobjects_s_object_name_s_object_id_patch_serialize(
            s_object_name=s_object_name,
            s_object_id=s_object_id,
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
            '4XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
            '5XX': "List[VrmV1StdSobjectsSObjectNamePost201ResponseErrorsInner]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _vrm_v1_std_sobjects_s_object_name_s_object_id_patch_serialize(
        self,
        s_object_name,
        s_object_id,
        request_body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if s_object_name is not None:
            _path_params['sObjectName'] = s_object_name
        if s_object_id is not None:
            _path_params['sObjectId'] = s_object_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if request_body is not None:
            _body_params = request_body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'oauth2'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/vrm/v1/std/sobjects/{sObjectName}/{sObjectId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


