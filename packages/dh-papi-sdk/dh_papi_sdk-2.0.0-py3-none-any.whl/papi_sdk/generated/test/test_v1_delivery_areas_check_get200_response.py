# coding: utf-8

"""
    Salesforce Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from generated.models.v1_delivery_areas_check_get200_response import V1DeliveryAreasCheckGet200Response

class TestV1DeliveryAreasCheckGet200Response(unittest.TestCase):
    """V1DeliveryAreasCheckGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1DeliveryAreasCheckGet200Response:
        """Test V1DeliveryAreasCheckGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1DeliveryAreasCheckGet200Response`
        """
        model = V1DeliveryAreasCheckGet200Response()
        if include_optional:
            return V1DeliveryAreasCheckGet200Response(
                data = [
                    generated.models._v1_delivery_areas_check_get_200_response_data_inner._v1_delivery_areas_check_get_200_response_data_inner(
                        city_id = 204, 
                        created_at = '2018-07-25T07:24:23.032Z', 
                        fleet_id = 'ro-oradea', 
                        geo_id = 'oradea', 
                        name = 'Oradea', 
                        shape = 'POLYGON((21.898456 47.082485, 21.894722 47.075821, ...))', 
                        city_name = 'Oradea', )
                    ]
            )
        else:
            return V1DeliveryAreasCheckGet200Response(
        )
        """

    def testV1DeliveryAreasCheckGet200Response(self):
        """Test V1DeliveryAreasCheckGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
