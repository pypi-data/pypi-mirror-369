# coding: utf-8

"""
    Salesforce Platform API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from generated.models.vrm_v1_vendors_grid_id_contacts_patch_request_inner import VrmV1VendorsGridIdContactsPatchRequestInner

class TestVrmV1VendorsGridIdContactsPatchRequestInner(unittest.TestCase):
    """VrmV1VendorsGridIdContactsPatchRequestInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VrmV1VendorsGridIdContactsPatchRequestInner:
        """Test VrmV1VendorsGridIdContactsPatchRequestInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VrmV1VendorsGridIdContactsPatchRequestInner`
        """
        model = VrmV1VendorsGridIdContactsPatchRequestInner()
        if include_optional:
            return VrmV1VendorsGridIdContactsPatchRequestInner(
                id = '0036900002zBwClAAK',
                email = 'pepito.perez@example.com',
                phone = '491525525525',
                mobile_phone = '491525525525',
                hotline_phone = '491525525525',
                salutation = 'Mr',
                first_name = 'Carlos',
                last_name = 'Bautista',
                middle_name = 'Alfonso',
                role = 'Owner'
            )
        else:
            return VrmV1VendorsGridIdContactsPatchRequestInner(
        )
        """

    def testVrmV1VendorsGridIdContactsPatchRequestInner(self):
        """Test VrmV1VendorsGridIdContactsPatchRequestInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
