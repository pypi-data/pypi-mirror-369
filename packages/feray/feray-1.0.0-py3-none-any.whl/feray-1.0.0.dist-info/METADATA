Metadata-Version: 2.3
Name: feray
Version: 1.0.0
Summary: Memoization-enabled feature store on ray
Keywords: dagster,ray,feray,featurestore
Author: danielgafni, geoheil
Author-email: danielgafni <danielgafni16@gmail.com>, geoheil <georg.kf.heiler@gmail.com>
License: Apache-2.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: ibis>=3.3.0
Requires-Dist: polars>=1.31.0
Requires-Dist: polars-hash>=0.5.4
Requires-Dist: sqlmodel>=0.0.24
Requires-Dist: ray>=2.48.0 ; extra == 'ray'
Requires-Python: >=3.12, <3.13
Project-URL: Bug Reports, https://github.com/feray-org/issues
Project-URL: Documentation, https://github.com/feray-org/docs/intro
Project-URL: Homepage, https://github.com/feray-org/
Project-URL: Repository, https://github.com/feray-org
Provides-Extra: ray
Description-Content-Type: text/markdown

# feRay
Feature stores have unique needs.
This is an opinionated framework for building and managing feature stores on top of:

- [dagster](https://dagster.io/)
- [ray](https://ray.io/)
- [dagster-ray](https://github.com/danielgafni/dagster-ray)
- [delta](https://delta.io/) in particular [delta-rs](https://github.com/delta-io/delta-rs)
- [postgres](https://www.postgresql.org/)
- S3 compatible object stores

Core Concepts:

- enable rapid experimentation and iteraton with memoization
- a feature can have sub-features (feature containers)
- data and code version are tracked on the record level
- orchestration of distributed compute incl. bootstrap of environments

This is the raw library - independent of any specific orchestrator.

Further reading material

> TODO link docs here

- https://docs.dagster.io/guides/build/assets/asset-versioning-and-caching
- https://gafni.dev/projects/sanas-ai-dagster-ray/
- https://dagster.io/blog/unlocking-flexible-pipelines-customizing-asset-decorator
- https://www.youtube.com/watch?v=HPqQSR0BoUQ
- https://georgheiler.com/post/paas-as-implementation-detail/
- https://www.samsara.com/blog/building-a-modern-machine-learning-platform-with-ray
