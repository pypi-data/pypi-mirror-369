[tox]
envlist = begin,py3{8,10,12,13},end
          py3{8,10,12,13}-functional
          black,black-check
minversion = 2.0
skipsdist = false
skip_missing_interpreters = true


[testenv]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
setenv =
  PACKAGE_NAME=genesis_notification
  TEST_PATH={env:PACKAGE_NAME}/tests/unit
  functional: TEST_PATH={env:PACKAGE_NAME}/tests/functional
  functional: DATABASE_URI={env:DATABASE_URI:postgresql://genesis_notification:pass@127.0.0.1:5432/genesis_notification}
commands =
  coverage run -p -m pytest {posargs} --timer-top-n=10 {env:TEST_PATH}
usedevelop=true


[testenv:begin]
envdir = {toxworkdir}/cover
commands =
  coverage erase


[testenv:end]
envdir = {toxworkdir}/cover
commands =
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml
  coverage report --skip-covered


[testenv:pep8]
commands =
  flake8


[testenv:doc]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/doc-requirements.txt
commands =
  python {toxinidir}/tools/validate-json-schemas.py -G {toxinidir}/doc/source/api/v1/schemas/*
  python setup.py build_sphinx


[testenv:venv]
commands = {posargs}

[testenv:develop]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       ipython


[testenv:black-check]
deps = black
commands = black -l 79 {env:PACKAGE_NAME} . --check


[testenv:black]
line-length = 79
deps = black
commands = black -l 79 {env:PACKAGE_NAME} .
