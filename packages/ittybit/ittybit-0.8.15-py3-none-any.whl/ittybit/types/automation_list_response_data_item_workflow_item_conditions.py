# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .automation_list_response_data_item_workflow_item_conditions_conditions_item import (
    AutomationListResponseDataItemWorkflowItemConditionsConditionsItem,
)
from .automation_list_response_data_item_workflow_item_conditions_next_item import (
    AutomationListResponseDataItemWorkflowItemConditionsNextItem,
)


class AutomationListResponseDataItemWorkflowItemConditions(UncheckedBaseModel):
    kind: typing.Literal["conditions"] = "conditions"
    conditions: typing.List[AutomationListResponseDataItemWorkflowItemConditionsConditionsItem]
    next: typing.Optional[typing.List[AutomationListResponseDataItemWorkflowItemConditionsNextItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
