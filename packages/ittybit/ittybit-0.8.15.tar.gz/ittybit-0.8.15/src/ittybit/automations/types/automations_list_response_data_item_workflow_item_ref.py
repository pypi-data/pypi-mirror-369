# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .automations_list_response_data_item_workflow_item_ref_kind import (
    AutomationsListResponseDataItemWorkflowItemRefKind,
)
from .automations_list_response_data_item_workflow_item_ref_next_item import (
    AutomationsListResponseDataItemWorkflowItemRefNextItem,
)


class AutomationsListResponseDataItemWorkflowItemRef(UncheckedBaseModel):
    kind: AutomationsListResponseDataItemWorkflowItemRefKind
    ref: typing.Optional[str] = None
    next: typing.Optional[typing.List[AutomationsListResponseDataItemWorkflowItemRefNextItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
