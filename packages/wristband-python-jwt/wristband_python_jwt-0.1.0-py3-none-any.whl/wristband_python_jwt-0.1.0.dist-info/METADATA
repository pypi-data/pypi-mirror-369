Metadata-Version: 2.4
Name: wristband-python-jwt
Version: 0.1.0
Summary: Framework-agnostic Python SDK for validating JWT access tokens issued by Wristband.
Author-email: Wristband <support@wristband.dev>
License-Expression: MIT
Project-URL: Homepage, https://wristband.dev
Project-URL: Repository, https://github.com/wristband-dev/python-jwt
Project-URL: Documentation, https://docs.wristband.dev
Keywords: api,auth,authentication,authorization,fastapi,flask,django,jwt,multi-tenant,multi-tenancy,oauth,oidc,sdk,secure,security,sso,validation,wristband
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Security
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: FastAPI
Classifier: Framework :: Flask
Classifier: Framework :: Django
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cryptography<45.0.0,>=41.0.0
Requires-Dist: httpx>=0.24.0
Provides-Extra: dev
Requires-Dist: setuptools>=61; extra == "dev"
Requires-Dist: pytest<9.0.0,>=8.2.0; extra == "dev"
Requires-Dist: pytest-cov<6.0.0,>=5.0.0; extra == "dev"
Requires-Dist: pytest-httpx>=0.21.0; extra == "dev"
Requires-Dist: mypy>=1.10.0; extra == "dev"
Requires-Dist: flake8<7.0.0,>=6.0.0; extra == "dev"
Requires-Dist: flake8-pyproject>=1.2.0; extra == "dev"
Requires-Dist: pip-audit>=2.0.0; extra == "dev"
Requires-Dist: bandit>=1.7.0; extra == "dev"
Requires-Dist: build>=0.10.0; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Dynamic: license-file

# Wristband Framework-Agnostic JWT Validation SDK for Python

Wristband provides enterprise-ready auth that is secure by default, truly multi-tenant, and ungated for small businesses.

- Website: [Wristband Website](https://wristband.dev)
- Documentation: [Wristband Docs](https://docs.wristband.dev/)

For detailed setup instructions and usage guidelines, visit the project's GitHub repository.

- [Python JWT SDK - GitHub](https://github.com/wristband-dev/python-jwt)


## Details

This SDK provides secure JWT validation capabilities for applications using Wristband authentication. It is framework-agnostic and works with FastAPI, Flask, Django, and other Python web frameworks. The SDK follows OWASP security best practices and is supported for Python 3.9+. Key functionalities include:

- Extracting Bearer tokens from HTTP Authorization headers.
- Validating JWT signatures using Wristband's JWKS endpoint.
- Verifying token claims including issuer, expiration, and algorithm allowlisting to prevent common JWT vulnerabilities.
- Automatic JWKS key caching and rotation for optimal performance.
- Comprehensive error handling with detailed validation messages.

You can learn more about JWTs in Wristband in our documentation:

- [JWTs and Signing Keys](https://docs.wristband.dev/docs/json-web-tokens-jwts-and-signing-keys)

## Questions

Reach out to the Wristband team at <support@wristband.dev> for any questions regarding this SDK.
