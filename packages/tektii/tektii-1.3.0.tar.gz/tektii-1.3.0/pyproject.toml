[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "tektii"
version = "1.3.0"
description = "Build trading strategies that run anywhere - Write Once. Trade Everywhere."
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [{ name = "Tektii", email = "support@tektii.com" }]
maintainers = [{ name = "Tektii Team", email = "support@tektii.com" }]
requires-python = ">=3.11"
keywords = [
    "trading",
    "algorithmic-trading",
    "algo-trading",
    "quantitative-finance",
    "finance",
    "fintech",
    "strategy",
    "backtesting",
    "grpc",
    "trading-bot",
    "trading-strategies",
    "market-data",
    "portfolio-management",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed",
    "Natural Language :: English",
]
dependencies = [
    "grpcio-health-checking>=1.48.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dateutil>=2.8.0",
    "requests>=2.28.0",
    "tektii-strategy-protocolbuffers-python==31.1.0.1.20250811142615+36044e963970",
    "tektii-strategy-grpc-python==1.74.0.1.20250811142615+36044e963970",
    "tektii-broker-protocolbuffers-python==31.1.0.1.20250811144523+61bf5f68cd93",
    "tektii-broker-grpc-python==1.74.1.1.20250811144523+61bf5f68cd93",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "hypothesis>=6.0.0",
    "factory-boy>=3.3.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "Flake8-pyproject>=1.2.3",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
    "commitizen>=3.13.0",
    "ipython>=8.0.0",
    "ipdb>=0.13.0",
    "grpcio-testing>=1.48.0",
    "types-protobuf>=4.21.0",
    "types-python-dateutil>=2.8.0",
    "types-requests>=2.32.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "wheel>=0.38.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
]

[project.urls]
Homepage = "https://tektii.com"
Documentation = "https://docs.tektii.com/sdk"
Repository = "https://github.com/tektii/tektii-sdk-python"
Issues = "https://github.com/tektii/tektii-sdk-python/issues"
Changelog = "https://github.com/tektii/tektii-sdk-python/blob/main/CHANGELOG.md"

[project.scripts]
tektii = "tektii.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["tektii*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
tektii = ["py.typed", "*.proto", "*_pb2.py", "*_pb2_grpc.py", "*_pb2.pyi"]

[tool.black]
line-length = 150
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | docs
  | proto
)/
'''

[tool.isort]
profile = "black"
line_length = 150
known_first_party = ["tektii"]
skip_glob = ["*_pb2.py", "*_pb2_grpc.py"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "proto/",
    "build/",
    "dist/",
    "docs/",
    ".venv/",
    "tektii/strategy/grpc/*_pb2.py",
    "tektii/strategy/grpc/*_pb2.pyi",
    "tektii/strategy/grpc/*_pb2_grpc.py",
]


[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = """
    -ra -q
    --strict-markers
    --cov=tektii
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests (deselect with '-m \"not slow\"')",
    "requires_proto: Tests that require generated proto files",
]

[tool.coverage.run]
source = ["tektii"]
omit = ["*/tests/*", "*/__init__.py", "*_pb2.py", "*_pb2_grpc.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "@(abc\\.)?abstractmethod",
    "class .*\\\\(Protocol\\\\):",
    "if 0:",
    "if False:",
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "examples", ".venv", "build", "dist"]
skips = ["B101"]                                                       # assert_used

[tool.flake8]
max-line-length = 150
extend-ignore = ["E203", "W503", "B027", "D202"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "proto",
    "tektii/strategy/grpc/*_pb2.py",
    "tektii/strategy/grpc/*_pb2_grpc.py",
    "tektii/strategy/grpc/*_pb2.pyi",
]

[tool.pylint.format]
max-line-length = 150

[tool.pydocstyle]
ignore = ["D212"]
