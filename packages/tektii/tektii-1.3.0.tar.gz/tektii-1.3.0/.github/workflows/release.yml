name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]" --extra-index-url https://buf.build/gen/python

      - name: Run tests
        run: pytest tests/ -v --cov=tektii

  release:
    name: Semantic Release & Publish
    runs-on: ubuntu-latest
    needs: test
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'


      - name: Install semantic-release
        run: |
          npm install -g semantic-release@21
          npm install -g @semantic-release/commit-analyzer@10
          npm install -g @semantic-release/release-notes-generator@11
          npm install -g @semantic-release/exec@6
          npm install -g @semantic-release/git@10
          npm install -g @semantic-release/github@9
          npm install -g conventional-changelog-conventionalcommits@6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install -e . --extra-index-url https://buf.build/gen/python


      - name: Get release status
        id: check_release
        run: |
          echo "current_version=$(grep -E '^version = ' pyproject.toml | head -1 | sed 's/version = "\(.*\)"/\1/')" >> $GITHUB_OUTPUT

      - name: Run semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: "github-actions[bot]"
          GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
          GIT_COMMITTER_NAME: "github-actions[bot]"
          GIT_COMMITTER_EMAIL: "github-actions[bot]@users.noreply.github.com"
        run: |
          semantic-release
          NEW_VERSION=$(grep -E '^version = ' pyproject.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          if [ "${{ steps.check_release.outputs.current_version }}" != "$NEW_VERSION" ]; then
            echo "released=true" >> $GITHUB_OUTPUT
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          else
            echo "released=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to PyPI
        if: steps.semantic_release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
