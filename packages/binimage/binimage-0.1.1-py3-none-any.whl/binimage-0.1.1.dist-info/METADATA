Metadata-Version: 2.4
Name: binimage
Version: 0.1.1
Summary: Extract binary from images (OCR or grid) and decode to text, saving to results.txt
Author-email: vesper <vesper.oneold@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/your-username/binimage
Project-URL: Issues, https://github.com/your-username/binimage/issues
Keywords: binary,image,OCR,grid,decode,persian,english
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Text Processing :: General
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Pillow>=10.0.0
Requires-Dist: numpy>=1.24.0
Provides-Extra: ocr
Requires-Dist: pytesseract>=0.3.10; extra == "ocr"
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: flake8>=7.0; extra == "dev"
Dynamic: license-file

# binimage

کتابخانه‌ای برای استخراج و رمزگشایی کد باینری از تصاویر.  
پشتیبانی از دو حالت: **OCR** (خواندن مستقیم `0` و `1`) و **Grid** (تحلیل شبکه‌ای پیکسل‌ها).

---

## نصب

می‌توانید کتابخانه را با یکی از روش‌های زیر نصب کنید:

```bash
pip install binimage
```
یا
```bash
python -m pip install binimage
```

---

## استفاده

### از طریق خط فرمان (CLI)

```bash
binimage path/to/image.png --mode auto
```

**پارامترهای مهم:**
- `image` (اجباری): مسیر تصویر ورودی
- `--mode` : حالت استخراج (`auto`، `ocr` یا `grid`)
- `--ocr-lang` : زبان OCR (مثلاً `eng` یا `fas`)
- `--rows` و `--cols` : تعداد سطر/ستون شبکه در حالت `grid`
- `--invert` : معکوس کردن نگاشت رنگ به بیت
- `--out` : مسیر فایل خروجی (پیش‌فرض `results.txt`)
- `--encodings` : ترتیب دلخواه برای دیکد متن (مثلاً `utf-8 utf-16le utf-16be latin-1`)
- `--errors` : نحوه‌ی برخورد با خطاهای دیکد (یکی از `strict`، `ignore`، `replace`)

مثال:
```bash
binimage ./binary_image.png --mode grid --rows 20 --cols 40 --out output.txt --encodings utf-8 utf-16le utf-16be latin-1 --errors strict
```

---

### استفاده در پایتون (API)

```python
from binimage import decode_image

result = decode_image(
    image_path="image.png",
    mode="auto",        # "auto" | "ocr" | "grid"
    ocr_lang="eng",     # زبان OCR
    rows=None,
    cols=None,
    invert=False,
    bits_per_byte=8,
    msb_first=True,
    out_file="results.txt",
    encodings=("utf-8", "utf-16le", "utf-16be", "latin-1"),
    errors="strict",
)

print("Encoding:", result.encoding)
print("Decoded text:", result.text)
```

---

### خروجی

پس از اجرا، متن استخراج‌شده در فایل مشخص‌شده (`results.txt` یا هر مسیر دلخواه) ذخیره می‌شود. اگر متن شما دارای BOM باشد (UTF-8 یا UTF-16)، به صورت خودکار تشخیص و به‌درستی دیکد می‌شود.
