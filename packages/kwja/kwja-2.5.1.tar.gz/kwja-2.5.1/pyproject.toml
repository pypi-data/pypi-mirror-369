[project]
name = "kwja"
version = "2.5.1"
description = "A unified Japanese analyzer based on foundation models"
license = "MIT"
authors = [
    { name = "Hirokazu Kiyomaru", email = "kiyomaru@i.kyoto-u.ac.jp"},
    { name = "Nobuhiro Ueda", email = "ueda@nlp.i.kyoto-u.ac.jp"},
    { name = "Kazumasa Omura", email = "omura@nlp.i.kyoto-u.ac.jp"},
    { name = "Takashi Kodama", email = "kodama@nlp.i.kyoto-u.ac.jp"},
    { name = "Yugo Murawaki", email = "murawaki@i.kyoto-u.ac.jp"},
    { name = "Daisuke Kawahara", email = "dkw@waseda.jp"},
    { name = "Sadao Kurohashi", email = "kuro@i.kyoto-u.ac.jp"}
]
maintainers = [
    { name = "Hirokazu Kiyomaru", email = "kiyomaru@i.kyoto-u.ac.jp"},
    { name = "Nobuhiro Ueda", email = "ueda@nlp.i.kyoto-u.ac.jp"},
    { name = "Kazumasa Omura", email = "omura@nlp.i.kyoto-u.ac.jp"},
    { name = "Takashi Kodama", email = "kodama@nlp.i.kyoto-u.ac.jp"},
    { name = "Yugo Murawaki", email = "murawaki@i.kyoto-u.ac.jp"},
]
readme = "README.md"
keywords = ["NLP", "Japanese"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Japanese",
    "Environment :: GPU",
    "Environment :: Console",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Text Processing",
]
requires-python = ">=3.9,<3.14"

dependencies = [
    "torch>=2.4.0,<2.8.0",
    "numpy>=2.0",
    "transformers[sentencepiece]>=4.50.3,<4.51.0",
    "tokenizers>=0.21.4,<0.22.0",
    "lightning>=2.5.0,<2.6.0",
    "omegaconf>=2.1",
    "hydra-core>=1.2",
    "rhoknp>=1.6",
    "typer-slim>=0.15.0,<0.16.0",  # TODO: Remove the upper constraint after dropping support for Python 3.9
    "jinf>=1.0.4",
    "pure-cdb>=4.0",
    "rich>=14.0.0,<15.0.0",
    "pyyaml>=6.0",
    "regex>=2024.7.24",
    "cohesion-tools>=0.7.5,<0.8.0",
    'typing-extensions>=4.0; python_version < "3.10"'
]

[project.urls]
Homepage = "https://github.com/ku-nlp/kwja"
Repository = "https://github.com/ku-nlp/kwja"
Issues = "https://github.com/ku-nlp/kwja/issues"
Changelog = "https://github.com/ku-nlp/kwja/blob/main/CHANGELOG.md"

[project.scripts]
kwja = "kwja.cli.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = true
packages = [
    { include = "kwja", from = "src" }
]
exclude = [
    "src/kwja/metrics/**/*"
]
requires-poetry = ">=2.0"

[tool.poetry.group.dev.dependencies]
torchmetrics = "^1.0"
seqeval = "^1.2"
scikit-learn = "^1.6"
Levenshtein = ">=0.21.0"
cohesion-tools = { version = "^0.7.5", extras = ["eval"] }
python-dotenv = "^1.0"
jaconv = "^0.4.0"
ipython = "^8.13"
ipdb = "^0.13.13"
types-attrs = "^19.1"
types-pyyaml = "^6.0.12.9"
wandb = ">=0.18.0"

[tool.poetry.group.test.dependencies]
torchmetrics = "^1.0"
seqeval = "^1.2"
Levenshtein = ">=0.21.0"
pandas = "^2.0"
jaconv = "^0.4.0"
pytest = "^8.0"
pytest-cov = "^6.0"
pytest-profiling = "^1.7"

[tool.ruff]
line-length = 120
indent-width = 4
src = ["src"]
target-version = "py39"  # The minimum Python version to target

[tool.ruff.lint]
select = ["F", "E", "W", "I", "B", "PL", "PD", "NPY", "RUF", "UP", "TID", "COM", "PT", "ARG", "PYI", "FA", "G", "FBT", "ANN"]
ignore = [
    "E501",  # Line too long
    "PLR0911",  # Too many return statements
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `...`
    "RUF001",  # String contains ambiguous `...` (...). Did you mean `...` (...)?
    "RUF002",  # Docstring contains ambiguous `...` (...). Did you mean `...` (...)?
    "RUF003",  # Comment contains ambiguous `...` (...). Did you mean `...` (...)?
    "UP037",  # Remove quotes from type annotation
    "COM812",  # Trailing comma missing
    "PLR2004",  # Magic value used in comparison
    "PT018",  # Assertion should be broken down into multiple parts
    "FA100",  # Missing `from __future__ import annotations`, but uses `...`
    "G004",  # Logging statement uses f-string
    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "FBT003",  # Boolean positional value in function call
]

[tool.ruff.lint.per-file-ignores]
"src/kwja/modules/components/deberta_v2.py" = [
    "PLW0127",  # Self-assignment of variable `...`
    "ANN",  # flake8-annotations
    "RUF005",  # Consider iterable unpacking instead of concatenation
]
"src/kwja/metrics/conll18_ud_eval.py" = [
    "PT027",  # Use `pytest.raises` instead of unittest-style `assertRaises`
    "B023",  # Function definition does not bind loop variable `sentence_start`
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    "ANN",  # flake8-annotations
]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["typer.Option"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 20  # default: 10

[tool.mypy]
python_version = "3.9"

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore::UserWarning',
]
