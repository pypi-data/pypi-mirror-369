Metadata-Version: 2.4
Name: milkpay.xrocket
Version: 1.0.0b10
Summary: A lightweight xRocket API Python SDK
Project-URL: Repository, https://github.com/py-stollen/milkpay-xrocket
Project-URL: Pay API Documentation, https://pay.xrocket.tg/api
Project-URL: Exchange API Documentation, https://trade.xrocket.tg/api
Author-email: wakaree <nullmatawasoradesu@gmail.com>
Maintainer-email: wakaree <nullmatawasoradesu@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: asyncio,client,crypto,payments,wrapper,xrocket
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.9
Requires-Dist: pydantic<2.12,>=2.4.1
Requires-Dist: stollen<1.0,>=0.2.11
Provides-Extra: dev
Requires-Dist: black~=24.8.0; extra == 'dev'
Requires-Dist: mypy~=1.11.1; extra == 'dev'
Requires-Dist: pre-commit~=3.8.0; extra == 'dev'
Requires-Dist: ruff~=0.6.1; extra == 'dev'
Description-Content-Type: text/x-rst


###############
milkpay-xrocket
###############

**milkpay** is a set of lightweight crypto payment system SDKs.
**⚠️ This SDK still in beta! ⚠️**

Installation
------------

..  code-block:: bash

    pip install -U milkpay-xrocket

Simple example
--------------

.. code-block:: python

    import asyncio
    import logging
    from typing import Final

    from milkpay.xrocket.pay import PayXRocket


    PAY_KEY: Final[str] = "YOUR_PAY_KEY_HERE"


    async def main() -> None:
        logging.basicConfig(level=logging.DEBUG)
        xrocket: PayXRocket = PayXRocket(pay_key=PAY_KEY)
        try:
            for invoice in await xrocket.get_invoices():
                logging.info("Invoice #%d created at %s", invoice.id, invoice.created)
        finally:
            await xrocket.session.close()


    if __name__ == "__main__":
        asyncio.run(main())


Support
-------
❤️ My TON Address: `UQBTR4X8Cg-qJ3jkMLbuhe7DkqSNAfddNj8kvOHZtLHtR8YQ`

