"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .indexconfigs_union import IndexConfigsUnion, IndexConfigsUnionTypedDict
from .status import Status
from lambdadb.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CollectionResponseTypedDict(TypedDict):
    project_name: str
    r"""Project name."""
    collection_name: str
    r"""Collection name."""
    index_configs: Dict[str, IndexConfigsUnionTypedDict]
    num_docs: int
    r"""Total number of documents."""
    collection_status: Status
    r"""Status"""
    source_project_name: NotRequired[str]
    r"""Source project name."""
    source_collection_name: NotRequired[str]
    r"""Source collection name."""
    source_collection_version_id: NotRequired[str]
    r"""Source collection version."""


class CollectionResponse(BaseModel):
    project_name: Annotated[str, pydantic.Field(alias="projectName")]
    r"""Project name."""

    collection_name: Annotated[str, pydantic.Field(alias="collectionName")]
    r"""Collection name."""

    index_configs: Annotated[
        Dict[str, IndexConfigsUnion], pydantic.Field(alias="indexConfigs")
    ]

    num_docs: Annotated[int, pydantic.Field(alias="numDocs")]
    r"""Total number of documents."""

    collection_status: Annotated[Status, pydantic.Field(alias="collectionStatus")]
    r"""Status"""

    source_project_name: Annotated[
        Optional[str], pydantic.Field(alias="sourceProjectName")
    ] = None
    r"""Source project name."""

    source_collection_name: Annotated[
        Optional[str], pydantic.Field(alias="sourceCollectionName")
    ] = None
    r"""Source collection name."""

    source_collection_version_id: Annotated[
        Optional[str], pydantic.Field(alias="sourceCollectionVersionId")
    ] = None
    r"""Source collection version."""
