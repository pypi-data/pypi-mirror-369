# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AwsQasm3JobInputParams(UniversalBaseModel):
    """
    Optional job parameters for AWS Braket QASM backends
    """

    disable_qubit_rewiring: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, automatic qubit rewiring is disabled, i.e. Braket is not allowed to re-map logical qubits to physical qubits on the backend device to optimize circuit execution. If not specified, the default is false.
    """

    qubit_count: typing.Optional[float] = pydantic.Field(default=None)
    """
    Number of qubits used in the circuit. If not specified, it is tried to infer it from the circuit.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
