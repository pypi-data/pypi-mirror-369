# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .cost_granularity import CostGranularity


class Cost(UniversalBaseModel):
    """
    Cost item for a backend
    """

    granularity: typing.Optional[CostGranularity] = pydantic.Field(default=None)
    """
    Cost granularity (e.g. shot, job)
    """

    currency: typing.Optional[str] = pydantic.Field(default=None)
    """
    ISO 4217 currency code
    """

    value: typing.Optional[float] = pydantic.Field(default=None)
    """
    Monetary value per granularity unit
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
