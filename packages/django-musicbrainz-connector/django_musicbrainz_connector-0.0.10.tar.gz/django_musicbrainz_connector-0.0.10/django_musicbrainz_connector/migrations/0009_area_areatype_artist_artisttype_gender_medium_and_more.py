# Generated by Django 5.1.4 on 2024-12-25 12:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("django_musicbrainz_connector", "0008_releasegroup_releasegroupprimarytype"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
                ("name", models.CharField(db_column="name", max_length=255)),
                (
                    "edits_pending",
                    models.PositiveIntegerField(db_column="edits_pending", default=0, verbose_name="Edits Pending"),
                ),
                ("last_updated", models.DateTimeField(db_column="last_updated", verbose_name="Last Updated")),
                ("begin_date_year", models.SmallIntegerField(null=True, verbose_name="Begin Date Year")),
                ("begin_date_month", models.SmallIntegerField(null=True, verbose_name="Begin Date Month")),
                ("begin_date_day", models.SmallIntegerField(null=True, verbose_name="Begin Date Day")),
                ("end_date_year", models.SmallIntegerField(null=True, verbose_name="End Date Year")),
                ("end_date_month", models.SmallIntegerField(null=True, verbose_name="End Date Month")),
                ("end_date_day", models.SmallIntegerField(null=True, verbose_name="End Date Day")),
                ("ended", models.BooleanField(default=False, verbose_name="Ended?")),
                ("comment", models.CharField(db_column="comment", default="", max_length=255)),
            ],
            options={
                "verbose_name_plural": "Areas",
                "db_table": "area",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AreaType",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(db_column="name", max_length=255)),
                ("child_order", models.IntegerField(db_column="child_order", verbose_name="Child Order")),
                ("description", models.TextField(db_column="description")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
            ],
            options={
                "verbose_name_plural": "Area Types",
                "db_table": "area_type",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
                ("name", models.CharField(db_column="name", max_length=255)),
                ("sort_name", models.CharField(db_column="sort_name", max_length=255, verbose_name="Sort Name")),
                ("begin_date_year", models.SmallIntegerField(null=True, verbose_name="Begin Date Year")),
                ("begin_date_month", models.SmallIntegerField(null=True, verbose_name="Begin Date Month")),
                ("begin_date_day", models.SmallIntegerField(null=True, verbose_name="Begin Date Day")),
                ("end_date_year", models.SmallIntegerField(null=True, verbose_name="End Date Year")),
                ("end_date_month", models.SmallIntegerField(null=True, verbose_name="End Date Month")),
                ("end_date_day", models.SmallIntegerField(null=True, verbose_name="End Date Day")),
                ("comment", models.CharField(db_column="comment", default="", max_length=255)),
                (
                    "edits_pending",
                    models.PositiveIntegerField(db_column="edits_pending", default=0, verbose_name="Edits Pending"),
                ),
                ("last_updated", models.DateTimeField(db_column="last_updated", verbose_name="Last Updated")),
                ("ended", models.BooleanField(default=False, verbose_name="Ended?")),
            ],
            options={
                "verbose_name_plural": "Artist",
                "db_table": "artist",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ArtistType",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(db_column="name", max_length=255)),
                ("child_order", models.IntegerField(db_column="child_order", verbose_name="Child Order")),
                ("description", models.TextField(db_column="description")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
            ],
            options={
                "verbose_name_plural": "Artist Types",
                "db_table": "artist_type",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(db_column="name", max_length=255)),
                ("child_order", models.IntegerField(db_column="child_order", verbose_name="Child Order")),
                ("description", models.TextField(db_column="description", null=True)),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
            ],
            options={
                "verbose_name_plural": "Genders",
                "db_table": "gender",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Medium",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.IntegerField(db_column="position", verbose_name="Position")),
                ("name", models.CharField(db_column="name", max_length=2048)),
                (
                    "edits_pending",
                    models.PositiveIntegerField(db_column="edits_pending", default=0, verbose_name="Edits Pending"),
                ),
                ("last_updated", models.DateTimeField(db_column="last_updated", verbose_name="Last Updated")),
                ("track_count", models.IntegerField(db_column="track_count", default=0, verbose_name="Track Count")),
            ],
            options={
                "verbose_name_plural": "Media",
                "db_table": "medium",
                "ordering": ["position"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MediumFormat",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(db_column="name", max_length=100, verbose_name="Name")),
                ("child_order", models.IntegerField(db_column="child_order", verbose_name="Child Order")),
                ("year", models.SmallIntegerField(blank=True, db_column="year", null=True, verbose_name="Year")),
                (
                    "has_discids",
                    models.BooleanField(db_column="has_discids", default=False, verbose_name="Has DiscIDs"),
                ),
                ("description", models.TextField(db_column="description", verbose_name="Description")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
            ],
            options={
                "verbose_name_plural": "Medium Formats",
                "db_table": "medium_format",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
                ("name", models.CharField(db_column="name", max_length=2048)),
                (
                    "barcode",
                    models.CharField(
                        blank=True, db_column="barcode", max_length=255, null=True, verbose_name="BarCode"
                    ),
                ),
                ("comment", models.CharField(db_column="comment", default="", max_length=255, verbose_name="Comment")),
                (
                    "edits_pending",
                    models.PositiveIntegerField(db_column="edits_pending", default=0, verbose_name="Edits Pending"),
                ),
                ("quality", models.SmallIntegerField(db_column="quality", default=-1, verbose_name="Quality")),
                ("last_updated", models.DateTimeField(db_column="last_updated", verbose_name="Last Updated")),
            ],
            options={
                "verbose_name_plural": "Releases",
                "db_table": "release",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                ("id", models.IntegerField(db_column="id", primary_key=True, serialize=False, verbose_name="ID")),
                ("gid", models.UUIDField(db_column="gid", verbose_name="GID")),
                ("position", models.IntegerField(db_column="position", verbose_name="Position")),
                ("number", models.TextField(db_column="number", verbose_name="Number")),
                ("name", models.CharField(db_column="name", max_length=2048)),
                (
                    "length",
                    models.PositiveIntegerField(blank=True, db_column="length", null=True, verbose_name="Length"),
                ),
                (
                    "edits_pending",
                    models.PositiveIntegerField(db_column="edits_pending", default=0, verbose_name="Edits Pending"),
                ),
                ("last_updated", models.DateTimeField(db_column="last_updated", verbose_name="Last Updated")),
                (
                    "is_data_track",
                    models.BooleanField(db_column="is_data_track", default=False, verbose_name="Is Data Track?"),
                ),
            ],
            options={
                "verbose_name_plural": "Tracks",
                "db_table": "track",
                "ordering": ["position"],
                "managed": False,
            },
        ),
    ]
