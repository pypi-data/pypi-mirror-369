[pytest]
# Add src to Python path
pythonpath = src

# Prevent pytest from recursing into specific directories
norecursedirs = tests/test_managers/test_bid_manager .git .tox dist build *.egg .hypothesis

# Register custom markers
markers =
    integration: marks tests as integration tests (deselect with '-m "not integration"')
    slow: marks tests as slow running
    timeout: marks tests that have custom timeout requirements
    e2e: marks tests as end-to-end tests requiring real infrastructure
    benchmark: marks performance benchmark tests
    unit: marks tests as unit tests (fast, isolated)
    quick: marks tests that should complete in under 1 second
    medium: marks tests that should complete in under 10 seconds
    long: marks tests that may take over 10 seconds
    performance: marks performance tests that measure execution speed or resource usage

# Test discovery patterns
testpaths = tests/fast tests/slow
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Fix pytest-asyncio warning
asyncio_default_fixture_loop_scope = function

# Timeout configuration
timeout = 300
timeout_method = thread

# Timeout budgets by marker
# Can be overridden per test with @pytest.mark.timeout(seconds)
# Note: These are documentation only - use @pytest.mark.timeout() on tests
# Quick tests: 1 second
# Medium tests: 10 seconds  
# Long tests: 60 seconds
# Integration tests: 120 seconds
# E2E tests: 300 seconds

# Parallel execution settings
# xdist flags are optional; if plugin is unavailable, run serially.
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=3
    # -n auto
    # --dist=worksteal
    # Show markers in test output
    --strict-markers
    # Marker-based test selection examples:
    # Run only unit tests: -m "unit"
    # Run integration tests: -m "integration"
    # Run non-slow tests: -m "not slow"
    # Run quick unit tests: -m "unit and quick"

# Coverage settings (when running with coverage)
# Use: pytest --cov=flow --cov-report=html
# Coverage reports will be in htmlcov/

# Output and reporting
console_output_style = progress
junit_family = xunit2

# Silence specific warnings
filterwarnings =
    ignore:.*ENVIRONMENT SETUP WARNING.*:UserWarning
    ignore:install "ipywidgets" for Jupyter support:UserWarning
    ignore:datetime\.datetime\.utcnow\(\) is deprecated.*:DeprecationWarning:pydantic