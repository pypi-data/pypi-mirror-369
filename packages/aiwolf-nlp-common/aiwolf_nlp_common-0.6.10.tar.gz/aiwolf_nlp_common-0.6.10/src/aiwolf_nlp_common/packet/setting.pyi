"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any
from aiwolf_nlp_common.packet.role import Role

"""
This type stub file was generated by pyright.
"""
@dataclass
class TalkMaxCount:
    per_agent: int
    per_day: int
    ...


@dataclass
class TalkMaxLength:
    count_in_word: bool | None
    count_spaces: bool | None
    per_talk: int | None
    mention_length: int | None
    per_agent: int | None
    base_length: int | None
    ...


@dataclass
class Talk:
    max_count: TalkMaxCount
    max_length: TalkMaxLength
    max_skip: int
    ...


@dataclass
class WhisperMaxCount:
    per_agent: int
    per_day: int
    ...


@dataclass
class WhisperMaxLength:
    count_in_word: bool | None
    count_spaces: bool | None
    per_talk: int | None
    mention_length: int | None
    per_agent: int | None
    base_length: int | None
    ...


@dataclass
class Whisper:
    max_count: WhisperMaxCount
    max_length: WhisperMaxLength
    max_skip: int
    ...


@dataclass
class Vote:
    max_count: int
    allow_self_vote: bool
    ...


@dataclass
class AttackVote:
    max_count: int
    allow_self_vote: bool
    allow_no_target: bool
    ...


@dataclass
class Timeout:
    action: int
    response: int
    ...


@dataclass
class Setting:
    """ゲームの設定を示す情報の構造体.

    Attributes:
        agent_count (int): ゲームのプレイヤー数.
        max_day (int | None): ゲーム内の最大日数. 制限がない場合は None.
        role_num_map (dict[Role, int]): 各役職の人数を示すマップ.
        vote_visibility (bool): 投票の結果を公開するか.
        talk.max_count.per_agent (int): 1日あたりの1エージェントの最大発言回数.
        talk.max_count.per_day (int): 1日あたりの全体の発言回数.
        talk.max_length.count_in_word (bool | None): 単語数でカウントするか. 設定されない場合は None.
        talk.max_length.count_spaces (bool | None): 文字数カウントの際に空白を含めてカウントするか. 設定されない場合は None.
        talk.max_length.per_talk (int | None): 1回のトークあたりの最大文字数. 制限がない場合は None.
        talk.max_length.mention_length (int | None): 1回のトークあたりのメンションを含む場合の追加文字数. per_talk の制限がない場合は None.
        talk.max_length.per_agent (int | None): 1日あたりの1エージェントの最大文字数. 制限がない場合は None.
        talk.max_length.base_length (int | None): 1日あたりの1エージェントの最大文字数に含まない最低文字数. 制限がない場合は None.
        talk.max_skip (int): 1日あたりの1エージェントの最大スキップ回数.
        whisper.max_count.per_agent (int): 1日あたりの1エージェントの最大囁き回数.
        whisper.max_count.per_day (int): 1日あたりの全体の囁き回数.
        whisper.max_length.count_in_word (bool | None): 単語数でカウントするか. 設定されない場合は None.
        whisper.max_length.count_spaces (bool | None): 文字数カウントの際に空白を含めてカウントするか. 設定されない場合は None.
        whisper.max_length.per_talk (int | None): 1回のトークあたりの最大文字数. 制限がない場合は None.
        whisper.max_length.mention_length (int | None): 1回のトークあたりのメンションを含む場合の追加文字数. per_talk の制限がない場合は None.
        whisper.max_length.per_agent (int | None): 1日あたりの1エージェントの最大文字数. 制限がない場合は None.
        whisper.max_length.base_length (int | None): 1日あたりの1エージェントの最大文字数に含まない最低文字数. 制限がない場合は None.
        whisper.max_skip (int): 1日あたりの1エージェントの最大スキップ回数.
        vote.max_count (int): 1位タイの場合の最大再投票回数.
        vote.allow_self_vote (bool): 自己投票を許可するか.
        attack_vote.max_count (int): 1位タイの場合の最大襲撃再投票回数.
        attack_vote.allow_self_vote (bool): 自己投票を許可するか.
        attack_vote.allow_no_target (bool): 襲撃なしの日を許可するか.
        timeout.action (int): エージェントのアクションのタイムアウト時間 (ミリ秒).
        timeout.response (int): エージェントの生存確認のタイムアウト時間 (ミリ秒).
    """
    agent_count: int
    max_day: int | None
    role_num_map: dict[Role, int]
    vote_visibility: bool
    talk: Talk
    whisper: Whisper
    vote: Vote
    attack_vote: AttackVote
    timeout: Timeout
    @staticmethod
    def from_dict(obj: Any) -> Setting:
        ...
    


