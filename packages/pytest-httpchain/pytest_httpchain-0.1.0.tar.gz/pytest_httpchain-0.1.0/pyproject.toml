[project]
name = "pytest-httpchain"
version = "0.1.0"
description = "pytest plugin for HTTP testing using JSON files"
readme = "README.md"
requires-python = ">=3.13,<4.0"
authors = [{ name = "Alexander Eresov", email = "aeresov@gmail.com" }]
dependencies = [
    "pydantic>=2.11.7",
    "pytest-httpchain-jsonref",
    "pytest-httpchain-models",
    "pytest-order>=1.3.0",
    "rich>=13.7.0",
]
keywords = ["testing", "pytest", "requests"]
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
]

[project.optional-dependencies]
mcp = ["pytest-httpchain-mcp"]

[dependency-groups]
dev = [
    "flask-httpauth>=4.8.0",
    "http-server-mock>=1.7",
    "pytest-xdist>=3.8.0",
    "responses>=0.25.7",
    "ruff>=0.12.1",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.16.12",
]

[tool.uv]
default-groups = ["docs"]

[tool.uv.workspace]
members = ["packages/*"]

[tool.uv.sources]
pytest-httpchain-jsonref = { workspace = true }
pytest-httpchain-templates = { workspace = true }
pytest-httpchain-mcp = { workspace = true }
pytest-httpchain-models = { workspace = true }
pytest-httpchain-userfunc = { workspace = true }

[build-system]
requires = ["uv_build>=0.7.21,<0.8.0"]
build-backend = "uv_build"

[project.entry-points.pytest11]
pytest_httpchain = "pytest_httpchain.plugin"

[tool.ruff]
line-length = 180
target-version = "py313"

[tool.ruff.format]
quote-style = "double"
line-ending = "lf"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["tests", "utils"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
# testpaths = ["tests"]
norecursedirs = ["examples"]
pytester_example_dir = "tests/integration/examples"
addopts = ["--log-disable=werkzeug", "--import-mode=importlib"]
pythonpath = [
    ".",
    "packages/pytest-httpchain-jsonref/src",
    "packages/pytest-httpchain-templates/src",
    "packages/pytest-httpchain-mcp/src",
    "packages/pytest-httpchain-models/src",
    "packages/pytest-httpchain-userfunc/src",
]
testpaths = ["tests", "packages/*/tests"]

[tool.pyright]
exclude = [".tox/"]
ignore = [".venv/"]
reportMissingImports = "error"
reportMissingTypeStubs = false
reportExplicitAny = false
typeCheckingMode = "off"
pythonPlatform = "Linux"
