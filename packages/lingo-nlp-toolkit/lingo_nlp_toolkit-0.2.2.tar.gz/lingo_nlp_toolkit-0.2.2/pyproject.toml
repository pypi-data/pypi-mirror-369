[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "lingo-nlp-toolkit"
dynamic = ["version"]
description = "Advanced NLP Toolkit - Lightweight, Fast, and Transformer-Ready"
readme = "README.md"
# license = "MIT"  # Commented out to avoid metadata conflicts
authors = [
    {name = "Md Irfan Ali", email = "irfanali29@hotmail.com"}
]
maintainers = [
    {name = "Md Irfan Ali", email = "irfanali29@hotmail.com"}
]
keywords = [
    "nlp", "natural-language-processing", "transformers", "bert", 
    "machine-learning", "ai", "text-processing", "sentiment-analysis",
    "named-entity-recognition", "text-classification", "embeddings"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
            # "License :: OSI Approved :: MIT License",  # Removed - superseded by license expression
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Framework :: Jupyter",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "torch>=1.12.0",
    "transformers>=4.20.0",
    "tokenizers>=0.13.0",
    "spacy>=3.5.0",
    "nltk>=3.8",
    "scikit-learn>=1.1.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scipy>=1.9.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "lxml>=4.9.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
    "pydantic>=1.10.0",
    "sentence-transformers>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
full = [
    "sentence-transformers>=2.2.0",
    "pdfplumber>=0.7.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.0.10",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.10.0",
    "umap-learn>=0.5.3",
    "hdbscan>=0.8.29",
    "gensim>=4.3.0",
    "wordcloud>=1.9.0",
    "textstat>=0.7.3",
    "language-tool-python>=2.7.1",
    "spacy[transformers]>=3.5.0",
]
gpu = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "torchaudio>=0.12.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "coverage>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/irfanalidv/lingo-nlp-toolkit"
Documentation = "https://lingo.readthedocs.io"
Repository = "https://github.com/irfanalidv/lingo-nlp-toolkit.git"
"Bug Tracker" = "https://github.com/irfanalidv/lingo-nlp-toolkit/issues"
"Source Code" = "https://github.com/irfanalidv/lingo-nlp-toolkit"
Changelog = "https://github.com/irfanalidv/lingo-nlp-toolkit/blob/main/CHANGELOG.md"
"Download" = "https://pypi.org/project/lingo/#files"

[project.scripts]
lingo = "lingo.cli:main"

[tool.setuptools]
packages = ["lingo"]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
lingo = [
    "configs/*.yaml",
    "configs/*.yml", 
    "models/*.json",
    "data/*.txt",
    "*.pyi",
    "py.typed"
]

# Version management removed to avoid conflicts

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lingo"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["lingo"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "spacy.*",
    "nltk.*",
    "sklearn.*",
    "numpy.*",
    "pandas.*",
    "scipy.*",
    "fastapi.*",
    "uvicorn.*",
    "pydantic.*",
]
ignore_missing_imports = true
