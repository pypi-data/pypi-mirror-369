{'CCSD3ZF0000100000001NJPL3IF0PDS200000001': 'SFDU_LABEL',
 'CCSD3ZF0000100000001NJPL3IF0PDS200000001_type': 'identifier',
 'CCSD3ZF0000100000001NJPL3IF0PDS200000001_source': 'SFDU_LABEL',
 'RECORD_TYPE': 'VARIABLE_LENGTH',
 'RECORD_TYPE_type': 'identifier',
 'RECORD_TYPE_source': 'VARIABLE_LENGTH',
 'RECORD_BYTES': 836,
 'RECORD_BYTES_type': 'integer',
 'RECORD_BYTES_source': '836',
 'FILE_RECORDS': 861,
 'FILE_RECORDS_type': 'integer',
 'FILE_RECORDS_source': '861',
 'LABEL_RECORDS': 55,
 'LABEL_RECORDS_type': 'integer',
 'LABEL_RECORDS_source': '55',
 '^IMAGE_HISTOGRAM': 56,
 '^IMAGE_HISTOGRAM_type': 'offset_pointer',
 '^IMAGE_HISTOGRAM_source': '56',
 '^IMAGE_HISTOGRAM_unit': '',
 '^IMAGE_HISTOGRAM_fmt': '56',
 '^ENCODING_HISTOGRAM': 58,
 '^ENCODING_HISTOGRAM_type': 'offset_pointer',
 '^ENCODING_HISTOGRAM_source': '58',
 '^ENCODING_HISTOGRAM_unit': '',
 '^ENCODING_HISTOGRAM_fmt': '58',
 '^ENGINEERING_TABLE': 61,
 '^ENGINEERING_TABLE_type': 'offset_pointer',
 '^ENGINEERING_TABLE_source': '61',
 '^ENGINEERING_TABLE_unit': '',
 '^ENGINEERING_TABLE_fmt': '61',
 '^IMAGE': 62,
 '^IMAGE_type': 'offset_pointer',
 '^IMAGE_source': '62',
 '^IMAGE_unit': '',
 '^IMAGE_fmt': '62',
 'SPACECRAFT_NAME': 'VOYAGER_1',
 'SPACECRAFT_NAME_type': 'identifier',
 'SPACECRAFT_NAME_source': 'VOYAGER_1',
 'MISSION_PHASE_NAME': 'SATURN_ENCOUNTER',
 'MISSION_PHASE_NAME_type': 'identifier',
 'MISSION_PHASE_NAME_source': 'SATURN_ENCOUNTER',
 'TARGET_NAME': 'S_RINGS',
 'TARGET_NAME_type': 'identifier',
 'TARGET_NAME_source': 'S_RINGS',
 'IMAGE_ID': '0958S1-019',
 'IMAGE_ID_type': 'quoted_symbol',
 'IMAGE_ID_source': "'0958S1-019'",
 'IMAGE_NUMBER': 34389.54,
 'IMAGE_NUMBER_type': 'real',
 'IMAGE_NUMBER_source': '34389.54',
 'IMAGE_TIME': datetime.datetime(1980, 10, 25, 12, 28, 34),
 'IMAGE_TIME_type': 'date_time',
 'IMAGE_TIME_source': '1980-10-25T12:28:34Z',
 'IMAGE_TIME_day': -7007,
 'IMAGE_TIME_sec': 44914,
 'IMAGE_TIME_fmt': '1980-10-25T12:28:34',
 'EARTH_RECEIVED_TIME': datetime.datetime(1980, 10, 25, 13, 53, 29),
 'EARTH_RECEIVED_TIME_type': 'date_time',
 'EARTH_RECEIVED_TIME_source': '1980-10-25T13:53:29Z',
 'EARTH_RECEIVED_TIME_day': -7007,
 'EARTH_RECEIVED_TIME_sec': 50009,
 'EARTH_RECEIVED_TIME_fmt': '1980-10-25T13:53:29',
 'INSTRUMENT_NAME': 'NARROW_ANGLE_CAMERA',
 'INSTRUMENT_NAME_type': 'identifier',
 'INSTRUMENT_NAME_source': 'NARROW_ANGLE_CAMERA',
 'SCAN_MODE_ID': '5:1',
 'SCAN_MODE_ID_type': 'quoted_symbol',
 'SCAN_MODE_ID_source': "'5:1'",
 'SHUTTER_MODE_ID': 'NAONLY',
 'SHUTTER_MODE_ID_type': 'identifier',
 'SHUTTER_MODE_ID_source': 'NAONLY',
 'GAIN_MODE_ID': 'LOW',
 'GAIN_MODE_ID_type': 'identifier',
 'GAIN_MODE_ID_source': 'LOW',
 'EDIT_MODE_ID': '1:1',
 'EDIT_MODE_ID_type': 'quoted_symbol',
 'EDIT_MODE_ID_source': "'1:1'",
 'FILTER_NAME': 'CLEAR',
 'FILTER_NAME_type': 'identifier',
 'FILTER_NAME_source': 'CLEAR',
 'FILTER_NUMBER': 0,
 'FILTER_NUMBER_type': 'integer',
 'FILTER_NUMBER_source': '0',
 'EXPOSURE_DURATION': 1.92,
 'EXPOSURE_DURATION_type': 'real',
 'EXPOSURE_DURATION_source': '1.9200 <SECONDS>',
 'EXPOSURE_DURATION_unit': '<SECONDS>',
 'NOTE': 'EPIMETHEUS (S11), TELESTO (S13), CALYPSO\n                                   (S14)',
 'NOTE_type': 'quoted_text',
 'NOTE_source': '"EPIMETHEUS (S11), TELESTO (S13), CALYPSO\n                                   (S14)"',
 'NOTE_unwrap': 'EPIMETHEUS (S11), TELESTO (S13), CALYPSO (S14)',
 'IMAGE_HISTOGRAM': {'OBJECT': 'IMAGE_HISTOGRAM',
  'OBJECT_type': 'identifier',
  'OBJECT_source': 'IMAGE_HISTOGRAM',
  'ITEMS': 256,
  'ITEMS_type': 'integer',
  'ITEMS_source': '256',
  'ITEM_TYPE': 'VAX_INTEGER',
  'ITEM_TYPE_type': 'identifier',
  'ITEM_TYPE_source': 'VAX_INTEGER',
  'ITEM_BITS': 32,
  'ITEM_BITS_type': 'integer',
  'ITEM_BITS_source': '32',
  'END_OBJECT': 'IMAGE_HISTOGRAM',
  'END_OBJECT_type': 'identifier',
  'END_OBJECT_source': ''},
 'ENCODING_HISTOGRAM': {'OBJECT': 'ENCODING_HISTOGRAM',
  'OBJECT_type': 'identifier',
  'OBJECT_source': 'ENCODING_HISTOGRAM',
  'ITEMS': 511,
  'ITEMS_type': 'integer',
  'ITEMS_source': '511',
  'ITEM_TYPE': 'VAX_INTEGER',
  'ITEM_TYPE_type': 'identifier',
  'ITEM_TYPE_source': 'VAX_INTEGER',
  'ITEM_BITS': 32,
  'ITEM_BITS_type': 'integer',
  'ITEM_BITS_source': '32',
  'END_OBJECT': 'ENCODING_HISTOGRAM',
  'END_OBJECT_type': 'identifier',
  'END_OBJECT_source': ''},
 'ENGINEERING_TABLE': {'OBJECT': 'ENGINEERING_TABLE',
  'OBJECT_type': 'identifier',
  'OBJECT_source': 'ENGINEERING_TABLE',
  'BYTES': 242,
  'BYTES_type': 'integer',
  'BYTES_source': '242',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001': 'SFDU_LABEL',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001_type': 'identifier',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001_source': 'SFDU_LABEL',
  'ENGINEERING_TABLE': {'OBJECT': 'ENGINEERING_TABLE',
   'OBJECT_type': 'identifier',
   'OBJECT_source': 'ENGINEERING_TABLE',
   'FORMAT': 'BINARY',
   'FORMAT_type': 'identifier',
   'FORMAT_source': 'BINARY',
   'BYTES': 243,
   'BYTES_type': 'integer',
   'BYTES_source': '243',
   'NOTE': 'This structure describes the format of the\n  engineering record which is included in each image file.  This\n  record contains the first 242 bytes of data extracted from the\n  Mission and Test Imaging System (MTIS) header record on each file\n  of an imaging EDR tape.  A 243rd byte containing some flag fields\n  has been added to the table for all images collected during the\n  Neptune encounter.',
   'NOTE_type': 'quoted_text',
   'NOTE_source': '"This structure describes the format of the\n  engineering record which is included in each image file.  This\n  record contains the first 242 bytes of data extracted from the\n  Mission and Test Imaging System (MTIS) header record on each file\n  of an imaging EDR tape.  A 243rd byte containing some flag fields\n  has been added to the table for all images collected during the\n  Neptune encounter."',
   'NOTE_unwrap': 'This structure describes the format of the engineering record which is included in each image file.  This record contains the first 242 bytes of data extracted from the Mission and Test Imaging System (MTIS) header record on each file of an imaging EDR tape.  A 243rd byte containing some flag fields has been added to the table for all images collected during the Neptune encounter.',
   'MTIS_RECORD_ID': {'OBJECT': 'MTIS_RECORD_ID',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MTIS_RECORD_ID',
    'TYPE': 'UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'UNSIGNED_INTEGER',
    'BYTE': 1,
    'BYTE_type': 'integer',
    'BYTE_source': '1',
    'NOTE': 'Mission and Test Imaging System record ID',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Mission and Test Imaging System record ID"',
    'END_OBJECT': 'MTIS_RECORD_ID',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MTIS_FILE_NUMBER': {'OBJECT': 'MTIS_FILE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MTIS_FILE_NUMBER',
    'TYPE': 'UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'UNSIGNED_INTEGER',
    'BYTE': 2,
    'BYTE_type': 'integer',
    'BYTE_source': '2',
    'NOTE': 'Mission and Test Imaging System tape file\n  number.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Mission and Test Imaging System tape file\n  number."',
    'NOTE_unwrap': 'Mission and Test Imaging System tape file number.',
    'END_OBJECT': 'MTIS_FILE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PHYSICAL_SEQUENCE_NUMBER': {'OBJECT': 'PHYSICAL_SEQUENCE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PHYSICAL_SEQUENCE_NUMBER',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 3,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '3',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Physical sequence number on Experiment Data\n  Record tape.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Physical sequence number on Experiment Data\n  Record tape."',
    'NOTE_unwrap': 'Physical sequence number on Experiment Data Record tape.',
    'END_OBJECT': 'PHYSICAL_SEQUENCE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LOGICAL_SEQUENCE_NUMBER': {'OBJECT': 'LOGICAL_SEQUENCE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LOGICAL_SEQUENCE_NUMBER',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 5,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '5',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Logical sequence number on Experiment Data\n  Record tape.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Logical sequence number on Experiment Data\n  Record tape."',
    'NOTE_unwrap': 'Logical sequence number on Experiment Data Record tape.',
    'END_OBJECT': 'LOGICAL_SEQUENCE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_ERT': {'OBJECT': 'FIRST_ERT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_ERT',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 7,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '7',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Earth Received Time year and day value.  Time\n  of first line record in the file containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time year and day value.  Time\n  of first line record in the file containing valid data."',
    'NOTE_unwrap': 'Earth Received Time year and day value.  Time of first line record in the file containing valid data.',
    'FIRST_ERT_YEAR': {'OBJECT': 'FIRST_ERT_YEAR',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FIRST_ERT_YEAR',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 1,
     'START_BIT_type': 'integer',
     'START_BIT_source': '1',
     'BITS': 7,
     'BITS_type': 'integer',
     'BITS_source': '7',
     'NOTE': 'Earth Received Time year of century (1900).\n    Time of first line record in the file containing valid data.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Earth Received Time year of century (1900).\n    Time of first line record in the file containing valid data."',
     'NOTE_unwrap': 'Earth Received Time year of century (1900). Time of first line record in the file containing valid data.',
     'END_OBJECT': 'FIRST_ERT_YEAR',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'FIRST_ERT_DAY': {'OBJECT': 'FIRST_ERT_DAY',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FIRST_ERT_DAY',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 8,
     'START_BIT_type': 'integer',
     'START_BIT_source': '8',
     'BITS': 9,
     'BITS_type': 'integer',
     'BITS_source': '9',
     'NOTE': 'Earth Received Time day of year.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Earth Received Time day of year."',
     'END_OBJECT': 'FIRST_ERT_DAY',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'FIRST_ERT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['FIRST_ERT_YEAR', 'FIRST_ERT_DAY']},
   'FIRST_ERT_MINUTE': {'OBJECT': 'FIRST_ERT_MINUTE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_ERT_MINUTE',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 9,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '9',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Earth Received Time minute of day.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time minute of day."',
    'END_OBJECT': 'FIRST_ERT_MINUTE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_ERT_MILLISECOND': {'OBJECT': 'FIRST_ERT_MILLISECOND',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_ERT_MILLISECOND',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 11,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '11',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Earth Received Time millisecond of minute.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time millisecond of minute."',
    'END_OBJECT': 'FIRST_ERT_MILLISECOND',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_ERT': {'OBJECT': 'LAST_ERT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_ERT',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 13,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '13',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Earth Received Time year and day value.  Time\n  of last line record of the file containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time year and day value.  Time\n  of last line record of the file containing valid data."',
    'NOTE_unwrap': 'Earth Received Time year and day value.  Time of last line record of the file containing valid data.',
    'LAST_ERT_YEAR': {'OBJECT': 'LAST_ERT_YEAR',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'LAST_ERT_YEAR',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 1,
     'START_BIT_type': 'integer',
     'START_BIT_source': '1',
     'BITS': 7,
     'BITS_type': 'integer',
     'BITS_source': '7',
     'NOTE': 'Earth Received Time year of century (1900).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Earth Received Time year of century (1900)."',
     'END_OBJECT': 'LAST_ERT_YEAR',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'LAST_ERT_DAY': {'OBJECT': 'LAST_ERT_DAY',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'LAST_ERT_DAY',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 8,
     'START_BIT_type': 'integer',
     'START_BIT_source': '8',
     'BITS': 9,
     'BITS_type': 'integer',
     'BITS_source': '9',
     'NOTE': 'Earth Received Time day of year.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Earth Received Time day of year."',
     'END_OBJECT': 'LAST_ERT_DAY',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'LAST_ERT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['LAST_ERT_YEAR', 'LAST_ERT_DAY']},
   'LAST_ERT_MINUTE': {'OBJECT': 'LAST_ERT_MINUTE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_ERT_MINUTE',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 15,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '15',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Earth Received Time minute of day.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time minute of day."',
    'END_OBJECT': 'LAST_ERT_MINUTE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_ERT_MILLISECOND': {'OBJECT': 'LAST_ERT_MILLISECOND',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_ERT_MILLISECOND',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 17,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '17',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Earth Received Time millisecond of minute.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Earth Received Time millisecond of minute."',
    'END_OBJECT': 'LAST_ERT_MILLISECOND',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_FDS16_COUNT': {'OBJECT': 'FIRST_FDS16_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_FDS16_COUNT',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 19,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '19',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem modulo 16-bit (65536)\n  count.  Represents the first 5 digits (xxxxx) of the image number\n  (xxxxx.yy).  This is the count for the first line record of the file\n  containing valid data.  Note that this may not correspond to the FDS\n  count for line record 1.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem modulo 16-bit (65536)\n  count.  Represents the first 5 digits (xxxxx) of the image number\n  (xxxxx.yy).  This is the count for the first line record of the file\n  containing valid data.  Note that this may not correspond to the FDS\n  count for line record 1."',
    'NOTE_unwrap': 'Flight Data Subsystem modulo 16-bit (65536) count.  Represents the first 5 digits (xxxxx) of the image number (xxxxx.yy).  This is the count for the first line record of the file containing valid data.  Note that this may not correspond to the FDS count for line record 1.',
    'END_OBJECT': 'FIRST_FDS16_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_FDS60_COUNT': {'OBJECT': 'FIRST_FDS60_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_FDS60_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 21,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '21',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem modulo 60 count.\n  Represents the last 2 digits (yy) of the image number (xxxxx.yy).\n  This is the count for the first line record of the file containing\n  valid data.  Note that this may not correspond to the FDS count for\n  line record 1.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem modulo 60 count.\n  Represents the last 2 digits (yy) of the image number (xxxxx.yy).\n  This is the count for the first line record of the file containing\n  valid data.  Note that this may not correspond to the FDS count for\n  line record 1."',
    'NOTE_unwrap': 'Flight Data Subsystem modulo 60 count. Represents the last 2 digits (yy) of the image number (xxxxx.yy). This is the count for the first line record of the file containing valid data.  Note that this may not correspond to the FDS count for line record 1.',
    'END_OBJECT': 'FIRST_FDS60_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_FDS_LINE_COUNT': {'OBJECT': 'FIRST_FDS_LINE_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_FDS_LINE_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 23,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '23',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem line count for first\n  line record containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem line count for first\n  line record containing valid data."',
    'NOTE_unwrap': 'Flight Data Subsystem line count for first line record containing valid data.',
    'END_OBJECT': 'FIRST_FDS_LINE_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_FDS16_COUNT': {'OBJECT': 'LAST_FDS16_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_FDS16_COUNT',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 25,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '25',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem modulo 16-bit (65536)\n  count.  Represents the first 5 digits (xxxxx) of the image number\n  (xxxxx.yy).  This is the count for the last line record of the file\n  containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem modulo 16-bit (65536)\n  count.  Represents the first 5 digits (xxxxx) of the image number\n  (xxxxx.yy).  This is the count for the last line record of the file\n  containing valid data."',
    'NOTE_unwrap': 'Flight Data Subsystem modulo 16-bit (65536) count.  Represents the first 5 digits (xxxxx) of the image number (xxxxx.yy).  This is the count for the last line record of the file containing valid data.',
    'END_OBJECT': 'LAST_FDS16_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_FDS60_COUNT': {'OBJECT': 'LAST_FDS60_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_FDS60_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 27,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '27',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem modulo 60 count.\n  Represents the last 2 digits (yy) of the image number (xxxxx.yy).\n  This is the count for the last line record of the file containing\n  valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem modulo 60 count.\n  Represents the last 2 digits (yy) of the image number (xxxxx.yy).\n  This is the count for the last line record of the file containing\n  valid data."',
    'NOTE_unwrap': 'Flight Data Subsystem modulo 60 count. Represents the last 2 digits (yy) of the image number (xxxxx.yy). This is the count for the last line record of the file containing valid data.',
    'END_OBJECT': 'LAST_FDS60_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_FDS_LINE_COUNT': {'OBJECT': 'LAST_FDS_LINE_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_FDS_LINE_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 29,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '29',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem line count for last\n  line record containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem line count for last\n  line record containing valid data."',
    'NOTE_unwrap': 'Flight Data Subsystem line count for last line record containing valid data.',
    'END_OBJECT': 'LAST_FDS_LINE_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SCET': {'OBJECT': 'SCET',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SCET',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 31,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '31',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Spacecraft Event Time year and day value.  The\n  (predicted) shutter-close time for this image.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Spacecraft Event Time year and day value.  The\n  (predicted) shutter-close time for this image."',
    'NOTE_unwrap': 'Spacecraft Event Time year and day value.  The (predicted) shutter-close time for this image.',
    'SCET_YEAR': {'OBJECT': 'SCET_YEAR',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SCET_YEAR',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 1,
     'START_BIT_type': 'integer',
     'START_BIT_source': '1',
     'BITS': 7,
     'BITS_type': 'integer',
     'BITS_source': '7',
     'NOTE': 'Spacecraft Event Time year of century (1900).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Spacecraft Event Time year of century (1900)."',
     'END_OBJECT': 'SCET_YEAR',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SCET_DAY': {'OBJECT': 'SCET_DAY',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SCET_DAY',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 8,
     'START_BIT_type': 'integer',
     'START_BIT_source': '8',
     'BITS': 9,
     'BITS_type': 'integer',
     'BITS_source': '9',
     'NOTE': 'Spacecraft Event Time day of year.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Spacecraft Event Time day of year."',
     'END_OBJECT': 'SCET_DAY',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SCET',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['SCET_YEAR', 'SCET_DAY']},
   'SCET_MINUTE': {'OBJECT': 'SCET_MINUTE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SCET_MINUTE',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 33,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '33',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Spacecraft Event Time minute of day.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Spacecraft Event Time minute of day."',
    'END_OBJECT': 'SCET_MINUTE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SCET_MILLISECOND': {'OBJECT': 'SCET_MILLISECOND',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SCET_MILLISECOND',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 35,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '35',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Spacecraft Event Time millisecond of minute.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Spacecraft Event Time millisecond of minute."',
    'END_OBJECT': 'SCET_MILLISECOND',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MTIS_RECORDING_ID': {'OBJECT': 'MTIS_RECORDING_ID',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MTIS_RECORDING_ID',
    'TYPE': 'CHARACTER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'CHARACTER',
    'START_BYTE': 37,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '37',
    'BYTES': 32,
    'BYTES_type': 'integer',
    'BYTES_source': '32',
    'NOTE': 'MTIS system identification information.\n  MTIS/IPL Data for first line record of the Recording Data\n  file.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"MTIS system identification information.\n  MTIS/IPL Data for first line record of the Recording Data\n  file."',
    'NOTE_unwrap': 'MTIS system identification information. MTIS/IPL Data for first line record of the Recording Data file.',
    'END_OBJECT': 'MTIS_RECORDING_ID',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'GCF_TABLE': {'OBJECT': 'GCF_TABLE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'GCF_TABLE',
    'START_BYTE': 69,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '69',
    'ROWS': 2,
    'ROWS_type': 'integer',
    'ROWS_source': '2',
    'ROW_NAME': ['FIRST', 'LAST'],
    'ROW_NAME_type': 'sequence_1D',
    'ROW_NAME_source': '(FIRST, LAST)',
    'ROW_COLUMNS': 13,
    'ROW_COLUMNS_type': 'integer',
    'ROW_COLUMNS_source': '13',
    'ROW_BYTES': 20,
    'ROW_BYTES_type': 'integer',
    'ROW_BYTES_source': '20',
    'NOTE': 'This table contains Ground Communications\n  Facility (GCF) parameters for the first and last line records of\n  the file containing valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"This table contains Ground Communications\n  Facility (GCF) parameters for the first and last line records of\n  the file containing valid data."',
    'NOTE_unwrap': 'This table contains Ground Communications Facility (GCF) parameters for the first and last line records of the file containing valid data.',
    'SYNC_MSB': {'OBJECT': 'SYNC_MSB',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_MSB',
     'TYPE': 'VAX_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_INTEGER',
     'START_BYTE': 1,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '1',
     'BYTES': 2,
     'BYTES_type': 'integer',
     'BYTES_source': '2',
     'NOTE': 'GCF sync ID (MSB).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF sync ID (MSB)."',
     'END_OBJECT': 'SYNC_MSB',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_LSB': {'OBJECT': 'SYNC_LSB',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_LSB',
     'TYPE': 'VAX_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_INTEGER',
     'BYTE': 3,
     'BYTE_type': 'integer',
     'BYTE_source': '3',
     'NOTE': 'GCF sync ID (LSB).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF sync ID (LSB)."',
     'END_OBJECT': 'SYNC_LSB',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SOURCE_ID': {'OBJECT': 'SOURCE_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SOURCE_ID',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'BYTE': 4,
     'BYTE_type': 'integer',
     'BYTE_source': '4',
     'NOTE': 'GCF source ID.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF source ID."',
     'END_OBJECT': 'SOURCE_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'DESTINATION_ID': {'OBJECT': 'DESTINATION_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'DESTINATION_ID',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'BYTE': 5,
     'BYTE_type': 'integer',
     'BYTE_source': '5',
     'NOTE': 'GCF destination ID.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF destination ID."',
     'END_OBJECT': 'DESTINATION_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'BLOCK_ID': {'OBJECT': 'BLOCK_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'BLOCK_ID',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'BYTE': 6,
     'BYTE_type': 'integer',
     'BYTE_source': '6',
     'NOTE': 'GCF block ID.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF block ID."',
     'END_OBJECT': 'BLOCK_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'COMM': {'OBJECT': 'COMM',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'COMM',
     'TYPE': 'VAX_BIT_STRING',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_BIT_STRING',
     'START_BYTE': 7,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '7',
     'BITS': 16,
     'BITS_type': 'integer',
     'BITS_source': '16',
     'NOTE': 'GCF communications parameters.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF communications parameters."',
     'GDD_ID': {'OBJECT': 'GDD_ID',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'GDD_ID',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 1,
      'START_BIT_type': 'integer',
      'START_BIT_source': '1',
      'BITS': 3,
      'BITS_type': 'integer',
      'BITS_source': '3',
      'NOTE': 'GCF GDD ID.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF GDD ID."',
      'END_OBJECT': 'GDD_ID',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'UDT_ID': {'OBJECT': 'UDT_ID',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'UDT_ID',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 4,
      'START_BIT_type': 'integer',
      'START_BIT_source': '4',
      'BITS': 7,
      'BITS_type': 'integer',
      'BITS_source': '7',
      'NOTE': 'GCF UDT ID.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF UDT ID."',
      'END_OBJECT': 'UDT_ID',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'DDT_ID': {'OBJECT': 'DDT_ID',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'DDT_ID',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 11,
      'START_BIT_type': 'integer',
      'START_BIT_source': '11',
      'BITS': 6,
      'BITS_type': 'integer',
      'BITS_source': '6',
      'NOTE': 'GCF DDT ID.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF DDT ID."',
      'END_OBJECT': 'DDT_ID',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'END_OBJECT': 'COMM',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': '',
     'objects': ['GDD_ID', 'UDT_ID', 'DDT_ID']},
    'GCF_PARM': {'OBJECT': 'GCF_PARM',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'GCF_PARM',
     'TYPE': 'VAX_BIT_STRING',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_BIT_STRING',
     'START_BYTE': 9,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '9',
     'BITS': 32,
     'BITS_type': 'integer',
     'BITS_source': '32',
     'NOTE': 'GCF Spacecraft parameters.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF Spacecraft parameters."',
     'LSB_TIME_ID': {'OBJECT': 'LSB_TIME_ID',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'LSB_TIME_ID',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 1,
      'START_BIT_type': 'integer',
      'START_BIT_source': '1',
      'BITS': 16,
      'BITS_type': 'integer',
      'BITS_source': '16',
      'NOTE': 'GCF time ID (lsb).',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF time ID (lsb)."',
      'END_OBJECT': 'LSB_TIME_ID',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'SPACECRAFT_NUMBER': {'OBJECT': 'SPACECRAFT_NUMBER',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'SPACECRAFT_NUMBER',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 18,
      'START_BIT_type': 'integer',
      'START_BIT_source': '18',
      'BITS': 7,
      'BITS_type': 'integer',
      'BITS_source': '7',
      'NOTE': 'GCF Spacecraft number.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF Spacecraft number."',
      'END_OBJECT': 'SPACECRAFT_NUMBER',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'MSB_TIME_ID': {'OBJECT': 'MSB_TIME_ID',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'MSB_TIME_ID',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 25,
      'START_BIT_type': 'integer',
      'START_BIT_source': '25',
      'BITS': 8,
      'BITS_type': 'integer',
      'BITS_source': '8',
      'NOTE': 'GCF time ID (msb).',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF time ID (msb)."',
      'END_OBJECT': 'MSB_TIME_ID',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'END_OBJECT': 'GCF_PARM',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': '',
     'objects': ['LSB_TIME_ID', 'SPACECRAFT_NUMBER', 'MSB_TIME_ID']},
    'GCF_DAY_BLOCK': {'OBJECT': 'GCF_DAY_BLOCK',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'GCF_DAY_BLOCK',
     'TYPE': 'VAX_BIT_STRING',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_BIT_STRING',
     'START_BYTE': 13,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '13',
     'BITS': 16,
     'BITS_type': 'integer',
     'BITS_source': '16',
     'NOTE': 'GCF year and block number.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF year and block number."',
     'DAY': {'OBJECT': 'DAY',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'DAY',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 3,
      'START_BIT_type': 'integer',
      'START_BIT_source': '3',
      'BITS': 12,
      'BITS_type': 'integer',
      'BITS_source': '12',
      'NOTE': 'GCF day of year.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF day of year."',
      'END_OBJECT': 'DAY',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'MSB_BLOCK_COUNT': {'OBJECT': 'MSB_BLOCK_COUNT',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'MSB_BLOCK_COUNT',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 15,
      'START_BIT_type': 'integer',
      'START_BIT_source': '15',
      'BITS': 2,
      'BITS_type': 'integer',
      'BITS_source': '2',
      'NOTE': 'GCF block serial count (msb).',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF block serial count (msb)."',
      'END_OBJECT': 'MSB_BLOCK_COUNT',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'END_OBJECT': 'GCF_DAY_BLOCK',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': '',
     'objects': ['DAY', 'MSB_BLOCK_COUNT']},
    'LSB_BLOCK_COUNT': {'OBJECT': 'LSB_BLOCK_COUNT',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'LSB_BLOCK_COUNT',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BYTE': 15,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '15',
     'BYTES': 1,
     'BYTES_type': 'integer',
     'BYTES_source': '1',
     'NOTE': 'GCF block serial count (lsb).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF block serial count (lsb)."',
     'END_OBJECT': 'LSB_BLOCK_COUNT',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'MILL_COUNT': {'OBJECT': 'MILL_COUNT',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'MILL_COUNT',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BYTE': 16,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '16',
     'BYTES': 1,
     'BYTES_type': 'integer',
     'BYTES_source': '1',
     'NOTE': 'GCF millisecond clock count.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF millisecond clock count."',
     'END_OBJECT': 'MILL_COUNT',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SERIAL_NUMBER': {'OBJECT': 'SERIAL_NUMBER',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SERIAL_NUMBER',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BYTE': 17,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '17',
     'BYTES': 1,
     'BYTES_type': 'integer',
     'BYTES_source': '1',
     'NOTE': 'GCF serial number.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF serial number."',
     'END_OBJECT': 'SERIAL_NUMBER',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'CONFIGURATION': {'OBJECT': 'CONFIGURATION',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'CONFIGURATION',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BYTE': 18,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '18',
     'BYTES': 1,
     'BYTES_type': 'integer',
     'BYTES_source': '1',
     'NOTE': 'GCF configuration status.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF configuration status."',
     'END_OBJECT': 'CONFIGURATION',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'ESC_PARAMETER': {'OBJECT': 'ESC_PARAMETER',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'ESC_PARAMETER',
     'TYPE': 'VAX_BIT_STRING',
     'TYPE_type': 'identifier',
     'TYPE_source': 'VAX_BIT_STRING',
     'START_BYTE': 19,
     'START_BYTE_type': 'integer',
     'START_BYTE_source': '19',
     'BITS': 16,
     'BITS_type': 'integer',
     'BITS_source': '16',
     'NOTE': 'GCF ESC value.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"GCF ESC value."',
     'ESC': {'OBJECT': 'ESC',
      'OBJECT_type': 'identifier',
      'OBJECT_source': 'ESC',
      'TYPE': 'UNSIGNED_INTEGER',
      'TYPE_type': 'identifier',
      'TYPE_source': 'UNSIGNED_INTEGER',
      'START_BIT': 14,
      'START_BIT_type': 'integer',
      'START_BIT_source': '14',
      'BITS': 2,
      'BITS_type': 'integer',
      'BITS_source': '2',
      'NOTE': 'GCF ESC value.',
      'NOTE_type': 'quoted_text',
      'NOTE_source': '"GCF ESC value."',
      'END_OBJECT': 'ESC',
      'END_OBJECT_type': 'identifier',
      'END_OBJECT_source': ''},
     'END_OBJECT': 'ESC_PARAMETER',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': '',
     'objects': ['ESC']},
    'END_OBJECT': 'GCF_TABLE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['SYNC_MSB',
     'SYNC_LSB',
     'SOURCE_ID',
     'DESTINATION_ID',
     'BLOCK_ID',
     'COMM',
     'GCF_PARM',
     'GCF_DAY_BLOCK',
     'LSB_BLOCK_COUNT',
     'MILL_COUNT',
     'SERIAL_NUMBER',
     'CONFIGURATION',
     'ESC_PARAMETER']},
   'IRT_YEAR': {'OBJECT': 'IRT_YEAR',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IRT_YEAR',
    'TYPE': 'INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'INTEGER',
    'BYTE': 109,
    'BYTE_type': 'integer',
    'BYTE_source': '109',
    'NOTE': 'Internal received time, year of century.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Internal received time, year of century."',
    'END_OBJECT': 'IRT_YEAR',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'IRT_DAY': {'OBJECT': 'IRT_DAY',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IRT_DAY',
    'TYPE': 'INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'INTEGER',
    'BYTE': 110,
    'BYTE_type': 'integer',
    'BYTE_source': '110',
    'NOTE': 'Internal received time, day of year.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Internal received time, day of year."',
    'END_OBJECT': 'IRT_DAY',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'IRT_MINUTE': {'OBJECT': 'IRT_MINUTE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IRT_MINUTE',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 111,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '111',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Internal received time, minute of day.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Internal received time, minute of day."',
    'END_OBJECT': 'IRT_MINUTE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'IRT_MILLISECOND': {'OBJECT': 'IRT_MILLISECOND',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IRT_MILLISECOND',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'START_BYTE': 113,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '113',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Internal received time, millisecond of minute.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Internal received time, millisecond of minute."',
    'END_OBJECT': 'IRT_MILLISECOND',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FORMAT_2': {'OBJECT': 'FORMAT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FORMAT',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 119,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '119',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Telemetry format ID for this image.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Telemetry format ID for this image."',
    'FORMAT_ID': {'OBJECT': 'FORMAT_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FORMAT_ID',
     'START_BIT': 9,
     'START_BIT_type': 'integer',
     'START_BIT_source': '9',
     'BITS': 2,
     'BITS_type': 'integer',
     'BITS_source': '2',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Format ID = 2 for imaging.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Format ID = 2 for imaging."',
     'END_OBJECT': 'FORMAT_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'IMAGE_FORMAT_ID': {'OBJECT': 'IMAGE_FORMAT_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'IMAGE_FORMAT_ID',
     'START_BIT': 11,
     'START_BIT_type': 'integer',
     'START_BIT_source': '11',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Image format ID.  Note that the ID used\n    by the GDS may differ from the ID down-linked by the spacecraft:\n\n     0=I3G4;  14=PB1;    24=IM15; \\n\n     1=IM16;  15=GS4;    26=IM6;  \\n\n     2=IM19;  17=GS2;    27=IM5;  \\n\n     9=IM7;   18=IM14;   28=IM4;  \\n\n    11=IM9;   20=IM12;   29=IM3;  \\n\n    12=PB3;   21=IM11;   30=IM2;  \\n\n    13=PB2;   22=IM10;   31=IM13. ',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Image format ID.  Note that the ID used\n    by the GDS may differ from the ID down-linked by the spacecraft:\n\n     0=I3G4;  14=PB1;    24=IM15; \\n\n     1=IM16;  15=GS4;    26=IM6;  \\n\n     2=IM19;  17=GS2;    27=IM5;  \\n\n     9=IM7;   18=IM14;   28=IM4;  \\n\n    11=IM9;   20=IM12;   29=IM3;  \\n\n    12=PB3;   21=IM11;   30=IM2;  \\n\n    13=PB2;   22=IM10;   31=IM13. "',
     'NOTE_unwrap': 'Image format ID.  Note that the ID used by the GDS may differ from the ID down-linked by the spacecraft:\n\n 0=I3G4;  14=PB1;    24=IM15;\n 1=IM16;  15=GS4;    26=IM6;\n 2=IM19;  17=GS2;    27=IM5;\n 9=IM7;   18=IM14;   28=IM4;\n11=IM9;   20=IM12;   29=IM3;\n12=PB3;   21=IM11;   30=IM2;\n13=PB2;   22=IM10;   31=IM13.',
     'END_OBJECT': 'IMAGE_FORMAT_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'FORMAT_SC_ID': {'OBJECT': 'FORMAT_SC_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FORMAT_SC_ID',
     'BIT': 16,
     'BIT_type': 'integer',
     'BIT_source': '16',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Zero for Voyager 2, one for Voyager 1.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Zero for Voyager 2, one for Voyager 1."',
     'END_OBJECT': 'FORMAT_SC_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'FORMAT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['FORMAT_ID', 'IMAGE_FORMAT_ID', 'FORMAT_SC_ID']},
   'MIN_BSNR': {'OBJECT': 'MIN_BSNR',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MIN_BSNR',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 121,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '121',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Bit Signal-to-noise ratio minimum.  The minimum\n  noise level found for the scan lines.  Binary number with binary point\n  between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Bit Signal-to-noise ratio minimum.  The minimum\n  noise level found for the scan lines.  Binary number with binary point\n  between bits 9 and 10."',
    'NOTE_unwrap': 'Bit Signal-to-noise ratio minimum.  The minimum noise level found for the scan lines.  Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MIN_BSNR',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MAX_BSNR': {'OBJECT': 'MAX_BSNR',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MAX_BSNR',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 123,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '123',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Bit Signal-to-noise ratio maximum.  The maximum\n  noise level found for the scan lines.  Binary number with binary point\n  between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Bit Signal-to-noise ratio maximum.  The maximum\n  noise level found for the scan lines.  Binary number with binary point\n  between bits 9 and 10."',
    'NOTE_unwrap': 'Bit Signal-to-noise ratio maximum.  The maximum noise level found for the scan lines.  Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MAX_BSNR',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MIN_SSNR': {'OBJECT': 'MIN_SSNR',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MIN_SSNR',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 125,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '125',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Symbol synchronizer signal-to-noise ratio minimum.\n  Binary number with binary point between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Symbol synchronizer signal-to-noise ratio minimum.\n  Binary number with binary point between bits 9 and 10."',
    'NOTE_unwrap': 'Symbol synchronizer signal-to-noise ratio minimum. Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MIN_SSNR',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MAX_SSNR': {'OBJECT': 'MAX_SSNR',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MAX_SSNR',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 127,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '127',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Symbol synchronizer signal-to-noise ratio maximum.\n  Binary number with binary point between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Symbol synchronizer signal-to-noise ratio maximum.\n  Binary number with binary point between bits 9 and 10."',
    'NOTE_unwrap': 'Symbol synchronizer signal-to-noise ratio maximum. Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MAX_SSNR',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MIN_AGC': {'OBJECT': 'MIN_AGC',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MIN_AGC',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 129,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '129',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Automatic gain control minimum.  Binary number\n  with binary point between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Automatic gain control minimum.  Binary number\n  with binary point between bits 9 and 10."',
    'NOTE_unwrap': 'Automatic gain control minimum.  Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MIN_AGC',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MAX_AGC': {'OBJECT': 'MAX_AGC',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MAX_AGC',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 131,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '131',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Automatic gain control maximum.  Binary number\n  with binary point between bits 9 and 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Automatic gain control maximum.  Binary number\n  with binary point between bits 9 and 10."',
    'NOTE_unwrap': 'Automatic gain control maximum.  Binary number with binary point between bits 9 and 10.',
    'END_OBJECT': 'MAX_AGC',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SYNC_ERROR_COUNT': {'OBJECT': 'SYNC_ERROR_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SYNC_ERROR_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 133,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '133',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of sync word errors.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of sync word errors."',
    'END_OBJECT': 'SYNC_ERROR_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FDS_ERROR_COUNT': {'OBJECT': 'FDS_ERROR_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FDS_ERROR_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 135,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '135',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of FDS count errors.  The sum of the\n  FDS count errors for the scan lines which contain valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of FDS count errors.  The sum of the\n  FDS count errors for the scan lines which contain valid data."',
    'NOTE_unwrap': 'Number of FDS count errors.  The sum of the FDS count errors for the scan lines which contain valid data.',
    'END_OBJECT': 'FDS_ERROR_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SYNC_PARAMETER_1': {'OBJECT': 'SYNC_PARAMETER_1',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SYNC_PARAMETER_1',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 137,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '137',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Sync parameters I and P as described in the\n  MTIS SRD.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Sync parameters I and P as described in the\n  MTIS SRD."',
    'NOTE_unwrap': 'Sync parameters I and P as described in the MTIS SRD.',
    'SYNC_PARM_I': {'OBJECT': 'SYNC_PARM_I',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_I',
     'START_BIT': 1,
     'START_BIT_type': 'integer',
     'START_BIT_source': '1',
     'BITS': 8,
     'BITS_type': 'integer',
     'BITS_source': '8',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_I',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_PARM_P': {'OBJECT': 'SYNC_PARM_P',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_P',
     'START_BIT': 9,
     'START_BIT_type': 'integer',
     'START_BIT_source': '9',
     'BITS': 8,
     'BITS_type': 'integer',
     'BITS_source': '8',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_P',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SYNC_PARAMETER_1',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['SYNC_PARM_I', 'SYNC_PARM_P']},
   'SYNC_PARAMETER_2': {'OBJECT': 'SYNC_PARAMETER_2',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SYNC_PARAMETER_2',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 139,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '139',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Three five-bit values representing the\n  sync parameters J, K, and L as described in the MTIS SDR.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Three five-bit values representing the\n  sync parameters J, K, and L as described in the MTIS SDR."',
    'NOTE_unwrap': 'Three five-bit values representing the sync parameters J, K, and L as described in the MTIS SDR.',
    'SYNC_PARM_J': {'OBJECT': 'SYNC_PARM_J',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_J',
     'START_BIT': 2,
     'START_BIT_type': 'integer',
     'START_BIT_source': '2',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_J',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_PARM_K': {'OBJECT': 'SYNC_PARM_K',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_K',
     'START_BIT': 7,
     'START_BIT_type': 'integer',
     'START_BIT_source': '7',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_K',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_PARM_L': {'OBJECT': 'SYNC_PARM_L',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_L',
     'START_BIT': 12,
     'START_BIT_type': 'integer',
     'START_BIT_source': '12',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_L',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SYNC_PARAMETER_2',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['SYNC_PARM_J', 'SYNC_PARM_K', 'SYNC_PARM_L']},
   'SYNC_PARAMETER_3': {'OBJECT': 'SYNC_PARAMETER_3',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SYNC_PARAMETER_3',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 141,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '141',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Three five-bit values representing the\n  sync parameters M, N, and R as described in the MTIS SDR.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Three five-bit values representing the\n  sync parameters M, N, and R as described in the MTIS SDR."',
    'NOTE_unwrap': 'Three five-bit values representing the sync parameters M, N, and R as described in the MTIS SDR.',
    'SYNC_PARM_M': {'OBJECT': 'SYNC_PARM_M',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_M',
     'START_BIT': 2,
     'START_BIT_type': 'integer',
     'START_BIT_source': '2',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_M',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_PARM_N': {'OBJECT': 'SYNC_PARM_N',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_N',
     'START_BIT': 7,
     'START_BIT_type': 'integer',
     'START_BIT_source': '7',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_N',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SYNC_PARM_R': {'OBJECT': 'SYNC_PARM_R',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SYNC_PARM_R',
     'START_BIT': 12,
     'START_BIT_type': 'integer',
     'START_BIT_source': '12',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'SYNC_PARM_R',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SYNC_PARAMETER_3',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['SYNC_PARM_M', 'SYNC_PARM_N', 'SYNC_PARM_R']},
   'LINES': {'OBJECT': 'LINES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LINES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 143,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '143',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Total number of line records in the\n  file which contain some valid data.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Total number of line records in the\n  file which contain some valid data."',
    'NOTE_unwrap': 'Total number of line records in the file which contain some valid data.',
    'END_OBJECT': 'LINES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FULL_LINES': {'OBJECT': 'FULL_LINES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FULL_LINES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 145,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '145',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of line records in the file\n  which are composed entirely of full minor frames.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of line records in the file\n  which are composed entirely of full minor frames."',
    'NOTE_unwrap': 'Number of line records in the file which are composed entirely of full minor frames.',
    'END_OBJECT': 'FULL_LINES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PARTIAL_LINES': {'OBJECT': 'PARTIAL_LINES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PARTIAL_LINES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 147,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '147',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Total number of line records in the file\n  which contain some valid data but are not composed entirely of\n  full minor frames.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Total number of line records in the file\n  which contain some valid data but are not composed entirely of\n  full minor frames."',
    'NOTE_unwrap': 'Total number of line records in the file which contain some valid data but are not composed entirely of full minor frames.',
    'END_OBJECT': 'PARTIAL_LINES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'UNREADABLE_RECORDS': {'OBJECT': 'UNREADABLE_RECORDS',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'UNREADABLE_RECORDS',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 149,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '149',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Total number of records from the IDR\n  and/or SDR which were unreadable and which fell within a time\n  period for which data was required for this file.  Note:  For\n  SDR input this does not necessarily result in data loss.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Total number of records from the IDR\n  and/or SDR which were unreadable and which fell within a time\n  period for which data was required for this file.  Note:  For\n  SDR input this does not necessarily result in data loss."',
    'NOTE_unwrap': 'Total number of records from the IDR and/or SDR which were unreadable and which fell within a time period for which data was required for this file.  Note:  For SDR input this does not necessarily result in data loss.',
    'END_OBJECT': 'UNREADABLE_RECORDS',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SEQUENCE_BREAKS': {'OBJECT': 'SEQUENCE_BREAKS',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SEQUENCE_BREAKS',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 151,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '151',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Total number of gaps on the IDR\n  and/or SDR as indicated by a discontinuity in the logical record\n  numbers which fell within a time period for which data was required\n  for this file.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Total number of gaps on the IDR\n  and/or SDR as indicated by a discontinuity in the logical record\n  numbers which fell within a time period for which data was required\n  for this file."',
    'NOTE_unwrap': 'Total number of gaps on the IDR and/or SDR as indicated by a discontinuity in the logical record numbers which fell within a time period for which data was required for this file.',
    'END_OBJECT': 'SEQUENCE_BREAKS',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SORT_PARAMETER': {'OBJECT': 'SORT_PARAMETER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SORT_PARAMETER',
    'ITEMS': 4,
    'ITEMS_type': 'integer',
    'ITEMS_source': '4',
    'ITEM_TYPE': 'VAX_INTEGER',
    'ITEM_TYPE_type': 'identifier',
    'ITEM_TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 153,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '153',
    'ITEM_BYTES': 2,
    'ITEM_BYTES_type': 'integer',
    'ITEM_BYTES_source': '2',
    'NOTE': 'Sort parameter 1 thru 4.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Sort parameter 1 thru 4."',
    'END_OBJECT': 'SORT_PARAMETER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'IDR_FRAMES': {'OBJECT': 'IDR_FRAMES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IDR_FRAMES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 161,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '161',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of minor frames from Intermediate Data\n  Record.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of minor frames from Intermediate Data\n  Record."',
    'NOTE_unwrap': 'Number of minor frames from Intermediate Data Record.',
    'END_OBJECT': 'IDR_FRAMES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WBDL_FRAMES': {'OBJECT': 'WBDL_FRAMES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WBDL_FRAMES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 163,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '163',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of minor frames from Wide Band Data\n  Link.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of minor frames from Wide Band Data\n  Link."',
    'NOTE_unwrap': 'Number of minor frames from Wide Band Data Link.',
    'END_OBJECT': 'WBDL_FRAMES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SDR_FRAMES': {'OBJECT': 'SDR_FRAMES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SDR_FRAMES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 165,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '165',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of minor frames from System Data\n  Record.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of minor frames from System Data\n  Record."',
    'NOTE_unwrap': 'Number of minor frames from System Data Record.',
    'END_OBJECT': 'SDR_FRAMES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MISSING_FRAMES': {'OBJECT': 'MISSING_FRAMES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MISSING_FRAMES',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 167,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '167',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of missing minor frames.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of missing minor frames."',
    'END_OBJECT': 'MISSING_FRAMES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'IMAGE_ID': {'OBJECT': 'IMAGE_ID',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'IMAGE_ID',
    'TYPE': 'CHARACTER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'CHARACTER',
    'START_BYTE': 171,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '171',
    'BYTES': 10,
    'BYTES_type': 'integer',
    'BYTES_source': '10',
    'NOTE': 'Picno (picture count, target, spacecraft,\n  day).  Ten ASCII characters of the form NNNNES+DDD, where:\n\n  NNNN = picture number within day;                      \\n\n  E    = planet of encounter (J=Jupiter, S=Saturn,....); \\n\n  S    = spacecraft number (1=Voyager 1, 2=Voyager 2);   \\n\n  -    = indicates before closest planetary approach;    \\n\n  +    = indicates after closest planetary approach;     \\n\n  DDD  = Number of days from closest approach.           ',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Picno (picture count, target, spacecraft,\n  day).  Ten ASCII characters of the form NNNNES+DDD, where:\n\n  NNNN = picture number within day;                      \\n\n  E    = planet of encounter (J=Jupiter, S=Saturn,....); \\n\n  S    = spacecraft number (1=Voyager 1, 2=Voyager 2);   \\n\n  -    = indicates before closest planetary approach;    \\n\n  +    = indicates after closest planetary approach;     \\n\n  DDD  = Number of days from closest approach.           "',
    'NOTE_unwrap': 'Picno (picture count, target, spacecraft, day).  Ten ASCII characters of the form NNNNES+DDD, where:\n\nNNNN = picture number within day;\nE    = planet of encounter (J=Jupiter, S=Saturn,....);\nS    = spacecraft number (1=Voyager 1, 2=Voyager 2);\n-    = indicates before closest planetary approach;\n+    = indicates after closest planetary approach;\nDDD  = Number of days from closest approach.',
    'END_OBJECT': 'IMAGE_ID',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'INPUT_SOURCE': {'OBJECT': 'INPUT_SOURCE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'INPUT_SOURCE',
    'TYPE': 'BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'BIT_STRING',
    'START_BYTE': 191,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '191',
    'BITS': 8,
    'BITS_type': 'integer',
    'BITS_source': '8',
    'NOTE': 'Input data source.  Logical sum (result of\n  successive inclusive OR operations) of input source of all line\n  records in the file.  Identify input source as follows: (equal to\n  1 if present)\n\n     Bit 1 - Fill data;                                            \\n\n     Bit 2 - Not Used;                                             \\n\n     Bit 3 - Not Used;                                             \\n\n     Bit 4 - Experiment Data Record (EDR) tape data (reprocessed); \\n\n     Bit 5 - Intermediate Data Record (IDR) tape data;             \\n\n     Bit 6 - System Data Record (SDR) tape data;                   \\n\n     Bit 7 - Real Time data;                                       \\n\n     Bit 8 - Not Used.                                             ',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Input data source.  Logical sum (result of\n  successive inclusive OR operations) of input source of all line\n  records in the file.  Identify input source as follows: (equal to\n  1 if present)\n\n     Bit 1 - Fill data;                                            \\n\n     Bit 2 - Not Used;                                             \\n\n     Bit 3 - Not Used;                                             \\n\n     Bit 4 - Experiment Data Record (EDR) tape data (reprocessed); \\n\n     Bit 5 - Intermediate Data Record (IDR) tape data;             \\n\n     Bit 6 - System Data Record (SDR) tape data;                   \\n\n     Bit 7 - Real Time data;                                       \\n\n     Bit 8 - Not Used.                                             "',
    'NOTE_unwrap': 'Input data source.  Logical sum (result of successive inclusive OR operations) of input source of all line records in the file.  Identify input source as follows: (equal to 1 if present)\n\n   Bit 1 - Fill data;\n   Bit 2 - Not Used;\n   Bit 3 - Not Used;\n   Bit 4 - Experiment Data Record (EDR) tape data (reprocessed);\n   Bit 5 - Intermediate Data Record (IDR) tape data;\n   Bit 6 - System Data Record (SDR) tape data;\n   Bit 7 - Real Time data;\n   Bit 8 - Not Used.',
    'END_OBJECT': 'INPUT_SOURCE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'INPUT_TYPE': {'OBJECT': 'INPUT_TYPE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'INPUT_TYPE',
    'TYPE': 'UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'UNSIGNED_INTEGER',
    'START_BYTE': 192,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '192',
    'BITS': 8,
    'BITS_type': 'integer',
    'BITS_source': '8',
    'NOTE': 'Input data type.  Logical sum (result of\n  successive inclusive OR operations) of input type of all line\n  records in the file.  Identify input type as follows:\n\n     00000000 - Voyager 2;                               \\n\n     00000001 - Voyager 1;                               \\n\n     00000010 - Proof Test Model data;                   \\n\n     00000011 - Not Used;                                \\n\n     00000100 - External Simulation (DSN spacecraft 41); \\n\n     00000101 - External Simulation (DSN spacecraft 42); \\n\n     00000110 - Voyager 2 test data;                     \\n\n     00000111 - Voyager 1 test data;                     \\n\n     00001000 - Internal Simulation.                     ',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Input data type.  Logical sum (result of\n  successive inclusive OR operations) of input type of all line\n  records in the file.  Identify input type as follows:\n\n     00000000 - Voyager 2;                               \\n\n     00000001 - Voyager 1;                               \\n\n     00000010 - Proof Test Model data;                   \\n\n     00000011 - Not Used;                                \\n\n     00000100 - External Simulation (DSN spacecraft 41); \\n\n     00000101 - External Simulation (DSN spacecraft 42); \\n\n     00000110 - Voyager 2 test data;                     \\n\n     00000111 - Voyager 1 test data;                     \\n\n     00001000 - Internal Simulation.                     "',
    'NOTE_unwrap': 'Input data type.  Logical sum (result of successive inclusive OR operations) of input type of all line records in the file.  Identify input type as follows:\n\n   00000000 - Voyager 2;\n   00000001 - Voyager 1;\n   00000010 - Proof Test Model data;\n   00000011 - Not Used;\n   00000100 - External Simulation (DSN spacecraft 41);\n   00000101 - External Simulation (DSN spacecraft 42);\n   00000110 - Voyager 2 test data;\n   00000111 - Voyager 1 test data;\n   00001000 - Internal Simulation.',
    'END_OBJECT': 'INPUT_TYPE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'SHUTTERED_PICTURE_ID': {'OBJECT': 'SHUTTERED_PICTURE_ID',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SHUTTERED_PICTURE_ID',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 193,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '193',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Shuttered picture indicator.  Subcom position 1.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Shuttered picture indicator.  Subcom position 1."',
    'CAMERA_NUMBER': {'OBJECT': 'CAMERA_NUMBER',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'CAMERA_NUMBER',
     'BIT': 1,
     'BIT_type': 'integer',
     'BIT_source': '1',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Camera ID number (O=WA, 1=NA).',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Camera ID number (O=WA, 1=NA)."',
     'END_OBJECT': 'CAMERA_NUMBER',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'SHUTTERED_PICTURE_FLAG': {'OBJECT': 'SHUTTERED_PICTURE_FLAG',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'SHUTTERED_PICTURE_FLAG',
     'START_BIT': 2,
     'START_BIT_type': 'integer',
     'START_BIT_source': '2',
     'BITS': 15,
     'BITS_type': 'integer',
     'BITS_source': '15',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Shuttered picture indicator, all ones for\n  shuttered images, all zeroes for unshuttered images.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Shuttered picture indicator, all ones for\n  shuttered images, all zeroes for unshuttered images."',
     'NOTE_unwrap': 'Shuttered picture indicator, all ones for shuttered images, all zeroes for unshuttered images.',
     'END_OBJECT': 'SHUTTERED_PICTURE_FLAG',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SHUTTERED_PICTURE_ID',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['CAMERA_NUMBER', 'SHUTTERED_PICTURE_FLAG']},
   'SCAN_MODE': {'OBJECT': 'SCAN_MODE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'SCAN_MODE',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 195,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '195',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Slow scan status.  Subcom position 2.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Slow scan status.  Subcom position 2."',
    'READ_OUT_LINE_NUMBER': {'OBJECT': 'READ_OUT_LINE_NUMBER',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'READ_OUT_LINE_NUMBER',
     'START_BIT': 1,
     'START_BIT_type': 'integer',
     'START_BIT_source': '1',
     'BITS': 10,
     'BITS_type': 'integer',
     'BITS_source': '10',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Actual picture line number being read out.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Actual picture line number being read out."',
     'END_OBJECT': 'READ_OUT_LINE_NUMBER',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'READ_OUT_SEGMENT_NUMBER': {'OBJECT': 'READ_OUT_SEGMENT_NUMBER',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'READ_OUT_SEGMENT_NUMBER',
     'START_BIT': 11,
     'START_BIT_type': 'integer',
     'START_BIT_source': '11',
     'BITS': 6,
     'BITS_type': 'integer',
     'BITS_source': '6',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'Actual segment number being read out.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Actual segment number being read out."',
     'END_OBJECT': 'READ_OUT_SEGMENT_NUMBER',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'SCAN_MODE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['READ_OUT_LINE_NUMBER', 'READ_OUT_SEGMENT_NUMBER']},
   'CAMERA_MODE': {'OBJECT': 'CAMERA_MODE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'CAMERA_MODE',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 197,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '197',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Exposure time, filter, electronics calibration.\n                        Subcom position 3.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Exposure time, filter, electronics calibration.\n                        Subcom position 3."',
    'NOTE_unwrap': 'Exposure time, filter, electronics calibration. Subcom position 3.',
    'NA_CALIBRATION_FLAG': {'OBJECT': 'NA_CALIBRATION_FLAG',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'NA_CALIBRATION_FLAG',
     'BIT': 6,
     'BIT_type': 'integer',
     'BIT_source': '6',
     'END_OBJECT': 'NA_CALIBRATION_FLAG',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'WA_CALIBRATION_FLAG': {'OBJECT': 'WA_CALIBRATION_FLAG',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'WA_CALIBRATION_FLAG',
     'BIT': 7,
     'BIT_type': 'integer',
     'BIT_source': '7',
     'END_OBJECT': 'WA_CALIBRATION_FLAG',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'EXPOSURE_ID': {'OBJECT': 'EXPOSURE_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'EXPOSURE_ID',
     'START_BIT': 8,
     'START_BIT_type': 'integer',
     'START_BIT_source': '8',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'NOTE': 'To convert to exposure time, see MJS 77-4-2036.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"To convert to exposure time, see MJS 77-4-2036."',
     'END_OBJECT': 'EXPOSURE_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'FILTER_ID': {'OBJECT': 'FILTER_ID',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FILTER_ID',
     'START_BIT': 13,
     'START_BIT_type': 'integer',
     'START_BIT_source': '13',
     'BITS': 3,
     'BITS_type': 'integer',
     'BITS_source': '3',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'FILTER_ID',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'FILTER_PARITY': {'OBJECT': 'FILTER_PARITY',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FILTER_PARITY',
     'BIT': 16,
     'BIT_type': 'integer',
     'BIT_source': '16',
     'NOTE': 'Odd parity bit for filter position.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Odd parity bit for filter position."',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'END_OBJECT': 'FILTER_PARITY',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'CAMERA_MODE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['NA_CALIBRATION_FLAG',
     'WA_CALIBRATION_FLAG',
     'EXPOSURE_ID',
     'FILTER_ID',
     'FILTER_PARITY']},
   'PICTURE_COUNT': {'OBJECT': 'PICTURE_COUNT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PICTURE_COUNT',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 199,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '199',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Picture count.  Subcom position 4.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Picture count.  Subcom position 4."',
    'END_OBJECT': 'PICTURE_COUNT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PRESENT_VALUE_A': {'OBJECT': 'PRESENT_VALUE_A',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PRESENT_VALUE_A',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 201,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '201',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D present value.\n  Subcom position 5.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D present value.\n  Subcom position 5."',
    'NOTE_unwrap': 'Parameter A through D present value. Subcom position 5.',
    'END_OBJECT': 'PRESENT_VALUE_A',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_INDICATOR_A': {'OBJECT': 'WORD_INDICATOR_A',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_INDICATOR_A',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 203,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '203',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word indicator.\n  Subcom position 6.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word indicator.\n  Subcom position 6."',
    'NOTE_unwrap': 'Parameter A through D word indicator. Subcom position 6.',
    'END_OBJECT': 'WORD_INDICATOR_A',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_POINTER_A': {'OBJECT': 'WORD_POINTER_A',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_POINTER_A',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 205,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '205',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word pointer.\n  Subcom position 7.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word pointer.\n  Subcom position 7."',
    'NOTE_unwrap': 'Parameter A through D word pointer. Subcom position 7.',
    'END_OBJECT': 'WORD_POINTER_A',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PRESENT_VALUE_B': {'OBJECT': 'PRESENT_VALUE_B',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PRESENT_VALUE_B',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 207,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '207',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D present value.\n  Subcom position 8.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D present value.\n  Subcom position 8."',
    'NOTE_unwrap': 'Parameter A through D present value. Subcom position 8.',
    'END_OBJECT': 'PRESENT_VALUE_B',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_POINTER_B': {'OBJECT': 'WORD_POINTER_B',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_POINTER_B',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 209,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '209',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word pointer.\n  Subcom position 9.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word pointer.\n  Subcom position 9."',
    'NOTE_unwrap': 'Parameter A through D word pointer. Subcom position 9.',
    'END_OBJECT': 'WORD_POINTER_B',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PRESENT_VALUE_C': {'OBJECT': 'PRESENT_VALUE_C',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PRESENT_VALUE_C',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 211,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '211',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D present value.\n  Subcom position 10.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D present value.\n  Subcom position 10."',
    'NOTE_unwrap': 'Parameter A through D present value. Subcom position 10.',
    'END_OBJECT': 'PRESENT_VALUE_C',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_POINTER_C': {'OBJECT': 'WORD_POINTER_C',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_POINTER_C',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 213,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '213',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word pointer.\n  Subcom position 11.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word pointer.\n  Subcom position 11."',
    'NOTE_unwrap': 'Parameter A through D word pointer. Subcom position 11.',
    'END_OBJECT': 'WORD_POINTER_C',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'PRESENT_VALUE_D': {'OBJECT': 'PRESENT_VALUE_D',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PRESENT_VALUE_D',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 215,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '215',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D present value.\n  Subcom position 12.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D present value.\n  Subcom position 12."',
    'NOTE_unwrap': 'Parameter A through D present value. Subcom position 12.',
    'END_OBJECT': 'PRESENT_VALUE_D',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_INDICATOR_D': {'OBJECT': 'WORD_INDICATOR_D',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_INDICATOR_D',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 217,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '217',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word indicator.\n  Subcom position 13.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word indicator.\n  Subcom position 13."',
    'NOTE_unwrap': 'Parameter A through D word indicator. Subcom position 13.',
    'END_OBJECT': 'WORD_INDICATOR_D',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'WORD_POINTER_D': {'OBJECT': 'WORD_POINTER_D',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'WORD_POINTER_D',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 219,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '219',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Parameter A through D word pointer.\n  Subcom position 14.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Parameter A through D word pointer.\n  Subcom position 14."',
    'NOTE_unwrap': 'Parameter A through D word pointer. Subcom position 14.',
    'END_OBJECT': 'WORD_POINTER_D',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'ANALOG_SAMPLE_TABLE': {'OBJECT': 'ANALOG_SAMPLE_TABLE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'ANALOG_SAMPLE_TABLE',
    'START_BYTE': 221,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '221',
    'ROWS': 5,
    'ROWS_type': 'integer',
    'ROWS_source': '5',
    'ROW_COLUMNS': 2,
    'ROW_COLUMNS_type': 'integer',
    'ROW_COLUMNS_source': '2',
    'ROW_BYTES': 2,
    'ROW_BYTES_type': 'integer',
    'ROW_BYTES_source': '2',
    'NOTE': 'These values represent subcom positions 15, 16,\n 17, 18, 19.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"These values represent subcom positions 15, 16,\n 17, 18, 19."',
    'NOTE_unwrap': 'These values represent subcom positions 15, 16, 17, 18, 19.',
    'NA_ANALOG_SAMPLE': {'OBJECT': 'NA_ANALOG_SAMPLE',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'NA_ANALOG_SAMPLE',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'BYTE': 1,
     'BYTE_type': 'integer',
     'BYTE_source': '1',
     'NOTE': 'Narrow angle analog sample.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Narrow angle analog sample."',
     'END_OBJECT': 'NA_ANALOG_SAMPLE',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'WA_ANALOG_SAMPLE': {'OBJECT': 'WA_ANALOG_SAMPLE',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'WA_ANALOG_SAMPLE',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'BYTE': 2,
     'BYTE_type': 'integer',
     'BYTE_source': '2',
     'NOTE': 'Wide angle analog sample.',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"Wide angle analog sample."',
     'END_OBJECT': 'WA_ANALOG_SAMPLE',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'ANALOG_SAMPLE_TABLE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['NA_ANALOG_SAMPLE', 'WA_ANALOG_SAMPLE']},
   'PIX_STAT': {'OBJECT': 'PIX_STAT',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'PIX_STAT',
    'TYPE': 'VAX_BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_BIT_STRING',
    'START_BYTE': 231,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '231',
    'BITS': 16,
    'BITS_type': 'integer',
    'BITS_source': '16',
    'NOTE': 'Pixel average and command status. Subcom\n  position 20.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Pixel average and command status. Subcom\n  position 20."',
    'NOTE_unwrap': 'Pixel average and command status. Subcom position 20.',
    'PIX_AVERAGE_STATUS': {'OBJECT': 'PIX_AVERAGE_STATUS',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'PIX_AVERAGE_STATUS',
     'BIT': 3,
     'BIT_type': 'integer',
     'BIT_source': '3',
     'END_OBJECT': 'PIX_AVERAGE_STATUS',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'PIX_AVERAGE': {'OBJECT': 'PIX_AVERAGE',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'PIX_AVERAGE',
     'TYPE': 'UNSIGNED_INTEGER',
     'TYPE_type': 'identifier',
     'TYPE_source': 'UNSIGNED_INTEGER',
     'START_BIT': 4,
     'START_BIT_type': 'integer',
     'START_BIT_source': '4',
     'BITS': 5,
     'BITS_type': 'integer',
     'BITS_source': '5',
     'END_OBJECT': 'PIX_AVERAGE',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'COMMAND_BITS': {'OBJECT': 'COMMAND_BITS',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'COMMAND_BITS',
     'START_BIT': 10,
     'START_BIT_type': 'integer',
     'START_BIT_source': '10',
     'BITS': 3,
     'BITS_type': 'integer',
     'BITS_source': '3',
     'END_OBJECT': 'COMMAND_BITS',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'FDS_DESTINATION_CODE': {'OBJECT': 'FDS_DESTINATION_CODE',
     'OBJECT_type': 'identifier',
     'OBJECT_source': 'FDS_DESTINATION_CODE',
     'START_BIT': 13,
     'START_BIT_type': 'integer',
     'START_BIT_source': '13',
     'BITS': 4,
     'BITS_type': 'integer',
     'BITS_source': '4',
     'NOTE': '5 - WA camera, 6 - NA camera',
     'NOTE_type': 'quoted_text',
     'NOTE_source': '"5 - WA camera, 6 - NA camera"',
     'END_OBJECT': 'FDS_DESTINATION_CODE',
     'END_OBJECT_type': 'identifier',
     'END_OBJECT_source': ''},
    'END_OBJECT': 'PIX_STAT',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': '',
    'objects': ['PIX_AVERAGE_STATUS',
     'PIX_AVERAGE',
     'COMMAND_BITS',
     'FDS_DESTINATION_CODE']},
   'ISS_ENG': {'OBJECT': 'ISS_ENG',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'ISS_ENG',
    'ITEMS': 9,
    'ITEMS_type': 'integer',
    'ITEMS_source': '9',
    'ITEM_TYPE': 'UNSIGNED_INTEGER',
    'ITEM_TYPE_type': 'identifier',
    'ITEM_TYPE_source': 'UNSIGNED_INTEGER',
    'START_BYTE': 233,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '233',
    'ITEM_BYTES': 1,
    'ITEM_BYTES_type': 'integer',
    'ITEM_BYTES_source': '1',
    'NOTE': 'Imaging Science Subsystem (ISS) engineering\n  measurements.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Imaging Science Subsystem (ISS) engineering\n  measurements."',
    'NOTE_unwrap': 'Imaging Science Subsystem (ISS) engineering measurements.',
    'END_OBJECT': 'ISS_ENG',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'END_OBJECT': 'ENGINEERING_TABLE',
   'END_OBJECT_type': 'identifier',
   'END_OBJECT_source': 'ENGINEERING_TABLE',
   'objects': ['MTIS_RECORD_ID',
    'MTIS_FILE_NUMBER',
    'PHYSICAL_SEQUENCE_NUMBER',
    'LOGICAL_SEQUENCE_NUMBER',
    'FIRST_ERT',
    'FIRST_ERT_MINUTE',
    'FIRST_ERT_MILLISECOND',
    'LAST_ERT',
    'LAST_ERT_MINUTE',
    'LAST_ERT_MILLISECOND',
    'FIRST_FDS16_COUNT',
    'FIRST_FDS60_COUNT',
    'FIRST_FDS_LINE_COUNT',
    'LAST_FDS16_COUNT',
    'LAST_FDS60_COUNT',
    'LAST_FDS_LINE_COUNT',
    'SCET',
    'SCET_MINUTE',
    'SCET_MILLISECOND',
    'MTIS_RECORDING_ID',
    'GCF_TABLE',
    'IRT_YEAR',
    'IRT_DAY',
    'IRT_MINUTE',
    'IRT_MILLISECOND',
    'FORMAT_2',
    'MIN_BSNR',
    'MAX_BSNR',
    'MIN_SSNR',
    'MAX_SSNR',
    'MIN_AGC',
    'MAX_AGC',
    'SYNC_ERROR_COUNT',
    'FDS_ERROR_COUNT',
    'SYNC_PARAMETER_1',
    'SYNC_PARAMETER_2',
    'SYNC_PARAMETER_3',
    'LINES',
    'FULL_LINES',
    'PARTIAL_LINES',
    'UNREADABLE_RECORDS',
    'SEQUENCE_BREAKS',
    'SORT_PARAMETER',
    'IDR_FRAMES',
    'WBDL_FRAMES',
    'SDR_FRAMES',
    'MISSING_FRAMES',
    'IMAGE_ID',
    'INPUT_SOURCE',
    'INPUT_TYPE',
    'SHUTTERED_PICTURE_ID',
    'SCAN_MODE',
    'CAMERA_MODE',
    'PICTURE_COUNT',
    'PRESENT_VALUE_A',
    'WORD_INDICATOR_A',
    'WORD_POINTER_A',
    'PRESENT_VALUE_B',
    'WORD_POINTER_B',
    'PRESENT_VALUE_C',
    'WORD_POINTER_C',
    'PRESENT_VALUE_D',
    'WORD_INDICATOR_D',
    'WORD_POINTER_D',
    'ANALOG_SAMPLE_TABLE',
    'PIX_STAT',
    'ISS_ENG']},
  'END_OBJECT': 'ENGINEERING_TABLE',
  'END_OBJECT_type': 'identifier',
  'END_OBJECT_source': '',
  'objects': ['ENGINEERING_TABLE']},
 'IMAGE': {'OBJECT': 'IMAGE',
  'OBJECT_type': 'identifier',
  'OBJECT_source': 'IMAGE',
  'ENCODING_TYPE': 'HUFFMAN_FIRST_DIFFERENCE',
  'ENCODING_TYPE_type': 'identifier',
  'ENCODING_TYPE_source': 'HUFFMAN_FIRST_DIFFERENCE',
  'LINES': 800,
  'LINES_type': 'integer',
  'LINES_source': '800',
  'LINE_SAMPLES': 800,
  'LINE_SAMPLES_type': 'integer',
  'LINE_SAMPLES_source': '800',
  'LINE_SUFFIX_BYTES': 36,
  'LINE_SUFFIX_BYTES_type': 'integer',
  'LINE_SUFFIX_BYTES_source': '36',
  'SAMPLE_TYPE': 'UNSIGNED_INTEGER',
  'SAMPLE_TYPE_type': 'identifier',
  'SAMPLE_TYPE_source': 'UNSIGNED_INTEGER',
  'SAMPLE_BITS': 8,
  'SAMPLE_BITS_type': 'integer',
  'SAMPLE_BITS_source': '8',
  'SAMPLE_BIT_MASK': 255,
  'SAMPLE_BIT_MASK_type': 'based_integer',
  'SAMPLE_BIT_MASK_source': '2#11111111#',
  'SAMPLE_BIT_MASK_radix': 2,
  'SAMPLE_BIT_MASK_digits': '11111111',
  'SAMPLE_BIT_MASK_fmt': '2#11111111#',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001': 'SFDU_LABEL',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001_type': 'identifier',
  'CCSD3ZF0000100000001NJPL3IF0PDS200000001_source': 'SFDU_LABEL',
  'LINE_SUFFIX_STRUCTURE': {'OBJECT': 'LINE_SUFFIX_STRUCTURE',
   'OBJECT_type': 'identifier',
   'OBJECT_source': 'LINE_SUFFIX_STRUCTURE',
   'FORMAT': 'BINARY',
   'FORMAT_type': 'identifier',
   'FORMAT_source': 'BINARY',
   'BYTES': 36,
   'BYTES_type': 'integer',
   'BYTES_source': '36',
   'NOTE': 'Voyager Image Line-suffix Structure.   This\n  label describes the structure of the 36-byte suffix at the end of\n  every 800-byte image line in the IMAGE object of every image file\n  on the Voyager CD-ROMs.',
   'NOTE_type': 'quoted_text',
   'NOTE_source': '"Voyager Image Line-suffix Structure.   This\n  label describes the structure of the 36-byte suffix at the end of\n  every 800-byte image line in the IMAGE object of every image file\n  on the Voyager CD-ROMs."',
   'NOTE_unwrap': 'Voyager Image Line-suffix Structure.   This label describes the structure of the 36-byte suffix at the end of every 800-byte image line in the IMAGE object of every image file on the Voyager CD-ROMs.',
   'FDS_MOD16_NUMBER': {'OBJECT': 'FDS_MOD16_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FDS_MOD16_NUMBER',
    'START_BYTE': 1,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '1',
    'TYPE': 'VAX_UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_UNSIGNED_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem (FDS) clock count, modulo\n    16-bit (65536) count, which comprises the first 5 digits (xxxxx)\n    of an image number xxxxx.yy.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem (FDS) clock count, modulo\n    16-bit (65536) count, which comprises the first 5 digits (xxxxx)\n    of an image number xxxxx.yy."',
    'NOTE_unwrap': 'Flight Data Subsystem (FDS) clock count, modulo 16-bit (65536) count, which comprises the first 5 digits (xxxxx) of an image number xxxxx.yy.',
    'END_OBJECT': 'FDS_MOD16_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FDS_MOD60_NUMBER': {'OBJECT': 'FDS_MOD60_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FDS_MOD60_NUMBER',
    'START_BYTE': 3,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '3',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem (FDS) clock count, modulo\n    60 count, which comprises the last two digits (yy) of an image\n    number xxxxx.yy.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem (FDS) clock count, modulo\n    60 count, which comprises the last two digits (yy) of an image\n    number xxxxx.yy."',
    'NOTE_unwrap': 'Flight Data Subsystem (FDS) clock count, modulo 60 count, which comprises the last two digits (yy) of an image number xxxxx.yy.',
    'END_OBJECT': 'FDS_MOD60_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FDS_LINE_NUMBER': {'OBJECT': 'FDS_LINE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FDS_LINE_NUMBER',
    'START_BYTE': 5,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '5',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Flight Data Subsystem line number, extracted\n    from the telemetry record header information.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Flight Data Subsystem line number, extracted\n    from the telemetry record header information."',
    'NOTE_unwrap': 'Flight Data Subsystem line number, extracted from the telemetry record header information.',
    'END_OBJECT': 'FDS_LINE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MTIS_LINE_NUMBER': {'OBJECT': 'MTIS_LINE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MTIS_LINE_NUMBER',
    'START_BYTE': 7,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '7',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Sequential line number calculated by the Mission\n    and Test Imaging Subsystem during production of the Experiment\n    Data Record.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Sequential line number calculated by the Mission\n    and Test Imaging Subsystem during production of the Experiment\n    Data Record."',
    'NOTE_unwrap': 'Sequential line number calculated by the Mission and Test Imaging Subsystem during production of the Experiment Data Record.',
    'END_OBJECT': 'MTIS_LINE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'MISSING_FRAMES': {'OBJECT': 'MISSING_FRAMES',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'MISSING_FRAMES',
    'START_BYTE': 9,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '9',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Number of telemetry frames missing from this\n    line.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Number of telemetry frames missing from this\n    line."',
    'NOTE_unwrap': 'Number of telemetry frames missing from this line.',
    'END_OBJECT': 'MISSING_FRAMES',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'RETAINED_FRAME_BITS': {'OBJECT': 'RETAINED_FRAME_BITS',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'RETAINED_FRAME_BITS',
    'ITEMS': 10,
    'ITEMS_type': 'integer',
    'ITEMS_source': '10',
    'ITEM_TYPE': 'VAX_INTEGER',
    'ITEM_TYPE_type': 'identifier',
    'ITEM_TYPE_source': 'VAX_INTEGER',
    'START_BYTE': 11,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '11',
    'ITEM_BYTES': 2,
    'ITEM_BYTES_type': 'integer',
    'ITEM_BYTES_source': '2',
    'NOTE': 'An array of 10 values representing the number of\n    bits retained in each frame which was used to create the image line.',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"An array of 10 values representing the number of\n    bits retained in each frame which was used to create the image line."',
    'NOTE_unwrap': 'An array of 10 values representing the number of bits retained in each frame which was used to create the image line.',
    'END_OBJECT': 'RETAINED_FRAME_BITS',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'INPUT_TYPE': {'OBJECT': 'INPUT_TYPE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'INPUT_TYPE',
    'TYPE': 'UNSIGNED_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'UNSIGNED_INTEGER',
    'START_BYTE': 31,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '31',
    'BITS': 8,
    'BITS_type': 'integer',
    'BITS_source': '8',
    'NOTE': 'Input data type.  Identify input type\n    as follows:\n\n     00000000 - Voyager 2;                               \\n\n     00000001 - Voyager 1;                               \\n\n     00000010 - Proof Test Model data;                   \\n\n     00000011 - Not Used;                                \\n\n     00000100 - External Simulation (DSN spacecraft 41); \\n\n     00000101 - External Simulation (DSN spacecraft 42); \\n\n     00000110 - Voyager 2 test data;                     \\n\n     00000111 - Voyager 1 test data;                     \\n\n     00001000 - Internal Simulation.                     ',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Input data type.  Identify input type\n    as follows:\n\n     00000000 - Voyager 2;                               \\n\n     00000001 - Voyager 1;                               \\n\n     00000010 - Proof Test Model data;                   \\n\n     00000011 - Not Used;                                \\n\n     00000100 - External Simulation (DSN spacecraft 41); \\n\n     00000101 - External Simulation (DSN spacecraft 42); \\n\n     00000110 - Voyager 2 test data;                     \\n\n     00000111 - Voyager 1 test data;                     \\n\n     00001000 - Internal Simulation.                     "',
    'NOTE_unwrap': 'Input data type.  Identify input type as follows:\n\n 00000000 - Voyager 2;\n 00000001 - Voyager 1;\n 00000010 - Proof Test Model data;\n 00000011 - Not Used;\n 00000100 - External Simulation (DSN spacecraft 41);\n 00000101 - External Simulation (DSN spacecraft 42);\n 00000110 - Voyager 2 test data;\n 00000111 - Voyager 1 test data;\n 00001000 - Internal Simulation.',
    'END_OBJECT': 'INPUT_TYPE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'INPUT_SOURCE': {'OBJECT': 'INPUT_SOURCE',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'INPUT_SOURCE',
    'TYPE': 'BIT_STRING',
    'TYPE_type': 'identifier',
    'TYPE_source': 'BIT_STRING',
    'START_BYTE': 32,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '32',
    'BITS': 8,
    'BITS_type': 'integer',
    'BITS_source': '8',
    'NOTE': 'Input data source.  Bits 1-8 identify input\n    source as follows: (equal to 1 if present)\n\n     Bit 1 - Fill data;                                            \\n\n     Bit 2 - Not Used;                                             \\n\n     Bit 3 - Not Used;                                             \\n\n     Bit 4 - Experiment Data Record (EDR) tape data (reprocessed); \\n\n     Bit 5 - Intermediate Data Record (IDR) tape data;             \\n\n     Bit 6 - System Data Record (SDR) tape data;                   \\n\n     Bit 7 - Real Time data;                                       \\n\n     Bit 8 - Not Used.                                             ',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Input data source.  Bits 1-8 identify input\n    source as follows: (equal to 1 if present)\n\n     Bit 1 - Fill data;                                            \\n\n     Bit 2 - Not Used;                                             \\n\n     Bit 3 - Not Used;                                             \\n\n     Bit 4 - Experiment Data Record (EDR) tape data (reprocessed); \\n\n     Bit 5 - Intermediate Data Record (IDR) tape data;             \\n\n     Bit 6 - System Data Record (SDR) tape data;                   \\n\n     Bit 7 - Real Time data;                                       \\n\n     Bit 8 - Not Used.                                             "',
    'NOTE_unwrap': 'Input data source.  Bits 1-8 identify input source as follows: (equal to 1 if present)\n\n Bit 1 - Fill data;\n Bit 2 - Not Used;\n Bit 3 - Not Used;\n Bit 4 - Experiment Data Record (EDR) tape data (reprocessed);\n Bit 5 - Intermediate Data Record (IDR) tape data;\n Bit 6 - System Data Record (SDR) tape data;\n Bit 7 - Real Time data;\n Bit 8 - Not Used.',
    'END_OBJECT': 'INPUT_SOURCE',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'FIRST_SAMPLE_NUMBER': {'OBJECT': 'FIRST_SAMPLE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'FIRST_SAMPLE_NUMBER',
    'START_BYTE': 33,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '33',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'First sample value (pixel) not artificially\n                      zeroed (1-800).',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"First sample value (pixel) not artificially\n                      zeroed (1-800)."',
    'NOTE_unwrap': 'First sample value (pixel) not artificially zeroed (1-800).',
    'END_OBJECT': 'FIRST_SAMPLE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'LAST_SAMPLE_NUMBER': {'OBJECT': 'LAST_SAMPLE_NUMBER',
    'OBJECT_type': 'identifier',
    'OBJECT_source': 'LAST_SAMPLE_NUMBER',
    'START_BYTE': 35,
    'START_BYTE_type': 'integer',
    'START_BYTE_source': '35',
    'TYPE': 'VAX_INTEGER',
    'TYPE_type': 'identifier',
    'TYPE_source': 'VAX_INTEGER',
    'BYTES': 2,
    'BYTES_type': 'integer',
    'BYTES_source': '2',
    'NOTE': 'Last sample value (pixel) not artificially\n                      zeroed (1-800)',
    'NOTE_type': 'quoted_text',
    'NOTE_source': '"Last sample value (pixel) not artificially\n                      zeroed (1-800)"',
    'NOTE_unwrap': 'Last sample value (pixel) not artificially zeroed (1-800)',
    'END_OBJECT': 'LAST_SAMPLE_NUMBER',
    'END_OBJECT_type': 'identifier',
    'END_OBJECT_source': ''},
   'END_OBJECT': 'LINE_SUFFIX_STRUCTURE',
   'END_OBJECT_type': 'identifier',
   'END_OBJECT_source': 'LINE_SUFFIX_STRUCTURE',
   'objects': ['FDS_MOD16_NUMBER',
    'FDS_MOD60_NUMBER',
    'FDS_LINE_NUMBER',
    'MTIS_LINE_NUMBER',
    'MISSING_FRAMES',
    'RETAINED_FRAME_BITS',
    'INPUT_TYPE',
    'INPUT_SOURCE',
    'FIRST_SAMPLE_NUMBER',
    'LAST_SAMPLE_NUMBER']},
  'END_OBJECT': 'IMAGE',
  'END_OBJECT_type': 'identifier',
  'END_OBJECT_source': '',
  'objects': ['LINE_SUFFIX_STRUCTURE']},
 'END': None,
 'objects': ['IMAGE_HISTOGRAM',
  'ENCODING_HISTOGRAM',
  'ENGINEERING_TABLE',
  'IMAGE']}
