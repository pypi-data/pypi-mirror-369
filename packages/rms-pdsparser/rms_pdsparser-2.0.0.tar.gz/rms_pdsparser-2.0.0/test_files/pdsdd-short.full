/* Planetary Science Data Dictionary database dump */
/* Online Database: pdscat1r83 */
/* Generated: Wed May 25 13:19:06 2011 */
/* Version: OPS */
/* Start of alias definitions */
OBJECT = ALIAS_LIST
  OBJECT_ALIAS_SEQUENCE = (
    ('BITCOLUMN','BIT_COLUMN')
    ('BITELEMENT','BIT_ELEMENT')
    ('CUBE','QUBE')
    ('DATA_SET_MAP_PROJECT_CATALOG','DATA_SET_MAP_PROJECTION')
    ('DATASET','DATA_SET')
    ('DATASETINFO','DATA_SET_INFORMATION')
    ('DATASETTARG','DATA_SET_TARGET')
    ('DISCD','DISCIPLINE_DESCRIPTION')
    ('DS_MAP_PROJ_REF_INFO_CATALOG','DS_MAP_PROJECTION_REF_INFO')
    ('DS_MAP_PROJECT_INFO_CATALOG','DATA_SET_MAP_PROJECTION_INFO')
    ('DSCOLL','DATA_SET_COLLECTION')
    ('DSCOLLDS','DATA_SET_COLL_ASSOC_DATA_SETS')
    ('DSCOLLINFO','DATA_SET_COLLECTION_INFO')
    ('DSCOLLREF','DATA_SET_COLLECTION_REF_INFO')
    ('DSHOST','DATA_SET_HOST')
    ('DSHOUSEKEEP','DATA_SET_HOUSEKEEPING')
    ('DSMAPPREFINF','DS_MAP_PROJECTION_REF_INFO')
    ('DSMAPPROJ','DATA_SET_MAP_PROJECTION')
    ('DSMAPPROJINF','DATA_SET_MAP_PROJECTION_INFO')
    ('DSMISSION','DATA_SET_MISSION')
    ('DSREFINFO','DATA_SET_REFERENCE_INFORMATION')
    ('DSRELEASE','DATA_SET_RELEASE')
    ('EVENTINFO','EVENT_INFORMATION')
    ('EVENTPOS','EVENT_POSITIONAL')
    ('EVENTSPAT','EVENT_SPATIAL')
    ('IMAGE_MAP_PROJECTION_CATALOG','IMAGE_MAP_PROJECTION')
    ('IMAGE_STRUCTURE','IMAGE')
    ('IMAGEMAPPROJ','IMAGE_MAP_PROJECTION')
    ('INDEXTABLE','INDEX_TABLE')
    ('INSTHOST','INSTRUMENT_HOST')
    ('INSTHOSTINFO','INSTRUMENT_HOST_INFORMATION')
    ('INSTHREFINFO','INSTRUMENT_HOST_REFERENCE_INFO')
    ('INSTINFO','INSTRUMENT_INFORMATION')
    ('INSTREFINFO','INSTRUMENT_REFERENCE_INFO')
    ('INVDSINFO','INVENTORY_DATA_SET_INFO')
    ('INVNODEMEDIA','INVENTORY_NODE_MEDIA_INFO')
    ('MSNHOST','MISSION_HOST')
    ('MSNINFO','MISSION_INFORMATION')
    ('MSNREFINFO','MISSION_REFERENCE_INFORMATION')
    ('MSNTARG','MISSION_TARGET')
    ('NODEINFO','NODE_INFORMATION')
    ('NSSDCDSID','NSSDC_DATA_SET_ID')
    ('PARMS','PARAMETERS')
    ('PERSELECMAIL','PERSONNEL_ELECTRONIC_MAIL')
    ('PERSINFO','PERSONNEL_INFORMATION')
    ('PERSON','PERSONNEL')
    ('RESINFORMATI','RESOURCE_INFORMATION')
    ('SAMPLE_SUFFI','SAMPLE_SUFFIX')
    ('SPECQUBE','SPECTRAL_QUBE')
    ('SPICEKERNEL','SPICE_KERNEL')
    ('SWINFO','SOFTWARE_INFORMATION')
    ('SWONLINE','SOFTWARE_ONLINE')
    ('SWPUR','SOFTWARE_PURPOSE')
    ('TABLE_STRUCTURE','TABLE')
    ('TARGETINFO','TARGET_INFORMATION')
    ('TARGREFINFO','TARGET_REFERENCE_INFORMATION'))
  ELEMENT_ALIAS_SEQUENCE = (
    ('ACTIVITY_ID','EVENT','OBSERVATION_ID')
    ('AXIS_INTERVAL','QUBE','SAMPLING_PARAMETER_INTERVAL')
    ('AXIS_NAME','QUBE','SAMPLING_PARAMETER_NAME')
    ('AXIS_UNIT','QUBE','SAMPLING_PARAMETER_UNIT')
    ('BASE','BIT_COLUMN','OFFSET')
    ('BASE','COLUMN','OFFSET')
    ('BASE','IMAGE','OFFSET')
    ('BYTES','TABLE','ROW_BYTES')
    ('CORE_BASE','QUBE','OFFSET')
    ('CORE_MULTIPLIER','QUBE','SCALING_FACTOR')
    ('DATA_TYPE','BIT_COLUMN','BIT_DATA_TYPE')
    ('DIRECTORY_NAME','FILE','PATH_NAME')
    ('EVENT_START_TIME','EVENT','START_TIME')
    ('EVENT_STOP_TIME','EVENT','STOP_TIME')
    ('FORMAT','TABLE','INTERCHANGE_FORMAT')
    ('GENERAL_CATALOG_FLAG','VOLUME','DATA_SET_CATALOG_FLAG')
    ('HEADER_BYTES','HEADER','BYTES')
    ('HEADER_RECORDS','HEADER','RECORDS')
    ('IMAGE_RECORDS','IMAGE','LINES')
    ('INDEX_SOURCE_FILE_NAME','INDEX_TABLE','INDEXED_FILE_NAME')
    ('INVALID','ELEMENT','INVALID_CONSTANT')
    ('ITEM_TYPE','ELEMENT','DATA_TYPE')
    ('ITEM_TYPE','HISTOGRAM','DATA_TYPE')
    ('MAXIMUM_VALUE','BIT_COLUMN','MAXIMUM')
    ('MAXIMUM_VALUE','COLUMN','MAXIMUM')
    ('MEDIA','VOLUME','MEDIUM_TYPE')
    ('MEDIA_FORMAT','VOLUME','VOLUME_FORMAT')
    ('MEDIA_TYPE','VOLUME','MEDIUM_TYPE')
    ('MEDIUM','VOLUME','MEDIUM_TYPE')
    ('MINIMUM_VALUE','BIT_COLUMN','MINIMUM')
    ('MINIMUM_VALUE','COLUMN','MINIMUM')
    ('MISSING','ELEMENT','MISSING_CONSTANT')
    ('MULTIPLIER','BIT_COLUMN','SCALING_FACTOR')
    ('MULTIPLIER','COLUMN','SCALING_FACTOR')
    ('RECORDS','FILE','FILE_RECORDS')
    ('ROW_COLUMNS','TABLE','COLUMNS')
    ('SOURCE_IMAGE_ID','IMAGE','SOURCE_PRODUCT_ID')
    ('SPICE_FILE_NAME','FILE','SOURCE_PRODUCT_ID')
    ('STORAGE_TYPE','TABLE','TABLE_STORAGE_TYPE')
    ('TABLE_ROWS','TABLE','ROWS')
    ('TAPES','VOLUME','VOLUMES')
    ('TYPE','BIT_COLUMN','BIT_DATA_TYPE')
    ('TYPE','COLUMN','DATA_TYPE')
    ('X_AXIS_FIRST_PIXEL','IMAGE_MAP_PROJECTION','LINE_FIRST_PIXEL')
    ('X_AXIS_FRAMELET_OFFSET','IMAGE_MAP_PROJECTION','HORIZONTAL_FRAMELET_OFFSET')
    ('X_AXIS_LAST_PIXEL','IMAGE_MAP_PROJECTION','LINE_LAST_PIXEL')
    ('X_AXIS_PROJECTION_OFFSET','IMAGE_MAP_PROJECTION','LINE_PROJECTION_OFFSET')
    ('Y_AXIS_FIRST_PIXEL','IMAGE_MAP_PROJECTION','SAMPLE_FIRST_PIXEL')
    ('Y_AXIS_FRAMELET_OFFSET','IMAGE_MAP_PROJECTION','VERTICAL_FRAMELET_OFFSET')
    ('Y_AXIS_LAST_PIXEL','IMAGE_MAP_PROJECTION','SAMPLE_LAST_PIXEL')
    ('Y_AXIS_PROJECTION_OFFSET','IMAGE_MAP_PROJECTION','SAMPLE_PROJECTION_OFFSET'))
END_OBJECT = ALIAS_LIST
END 
/* End of alias definitions */
/* Start of unit definitions */
OBJECT = UNIT_LIST
  UNIT_SEQUENCE = (
    ('A','ampere')
    ('A/m','ampere per meter')
    ('A/m**2','ampere per square meter')
    ('B','Bytes')
    ('Bq','becquerel')
    ('C','coulomb')
    ('C/kg','coulomb per kilogram')
    ('C/m**2','coulomb per square meter')
    ('C/m**3','coulomb per cubic meter')
    ('F','farad')
    ('F/m','farad per meter')
    ('Gy','gray')
    ('Gy/s','gray per second')
    ('H','henry')
    ('H/m','henry per meter')
    ('Hz','hertz')
    ('J','joule')
    ('J/(kg.K)','joule per kilogram kelvin')
    ('J/(m**2)/s','joule per sq. meter per second')
    ('J/(mol.K)','joule per mole kelvin')
    ('J/K','joule per kelvin')
    ('J/T','joule per tesla')
    ('J/kg','joule per kilogram')
    ('J/m**3','joule per cubic meter')
    ('J/mol','joule per mole')
    ('K','kelvin')
    ('MB','Mega Bytes')
    ('N','newton')
    ('N.m','newton meter')
    ('N/A','no unit of measurement defined')
    ('N/m','newton per meter')
    ('N/m**2','newton per square meter')
    ('Pa','pascal')
    ('Pa.s','pascal second')
    ('S','siemens')
    ('Sv','sievert')
    ('T','tesla')
    ('V','volt')
    ('V/m','volt per meter')
    ('W','watt')
    ('W.m**-2.sr**-1','watt per square meter steradian')
    ('W/(m.K)','watt per meter kelvin')
    ('W/m**2','watt per square meter')
    ('W/sr','watt per steradian')
    ('Wb','weber')
    ('arcsec/pixel','arcsecond per pixel')
    ('arcsecond','arcsecond')
    ('b/pixel','bits per pixel')
    ('b/s','bits per second')
    ('bar','bar')
    ('cd','candela')
    ('cd/m**2','candela per square meter')
    ('d','day')
    ('dB','decibel')
    ('deg','degree')
    ('deg/day','degree per day')
    ('deg/s','degree per second')
    ('degC','degree Celsius')
    ('g','gram')
    ('g/cm**3','gram per cubic centimeter')
    ('h','hour')
    ('kHz','kilohertz')
    ('kb/s','kilobits per second')
    ('kg','kilogram')
    ('kg/m**3','kilogram per cubic meter')
    ('km','kilometer')
    ('km**-1','reciprocal kilometer')
    ('km**2','kilometers squared')
    ('km/pix','kilometer per pixel')
    ('km/pixel','kilo meters per pixel')
    ('km/s','kilometers per second')
    ('lm','lumen')
    ('local day/24','TBD')
    ('lx','lux')
    ('m','meter')
    ('m**-1','reciprocal meter')
    ('m**2','square meter')
    ('m**2/s','square meter per second')
    ('m**3','cubic meter')
    ('m**3/kg','cubic meter per kilogram')
    ('m/pix','meters per pixel')
    ('m/pixel','meters per pixel')
    ('m/s','meter per second')
    ('m/s**2','meter per second squared')
    ('mA','milliampere')
    ('mag','magnitude')
    ('micron','micrometer')
    ('min','minute')
    ('mm','millimeter')
    ('mm/s','millimeter per second')
    ('mol','mole')
    ('mol/m**3','mole per cubic meter')
    ('mrad','milliradians')
    ('ms','millisecond')
    ('n/a','no unit of measurement defined')
    ('nT','nanotesla')
    ('nm','nanometer')
    ('none','no unit of measurement defined')
    ('ohm','ohm')
    ('p/line','pixels per line')
    ('pix/deg','pixel per degree')
    ('pix/degree','pixel per degree')
    ('pixel','pixel')
    ('pixel/deg','pixel per degree')
    ('pixel/degree','pixel per degree')
    ('rad','radian')
    ('rad/s','radian per second')
    ('rad/s**2','radian per second squared')
    ('s','second')
    ('sr','steradian')
    ('uW','microwatts')
    ('us','microsecond')
    ('us_dollar','united states dollars'))
END_OBJECT = UNIT_LIST
END 
/* End of unit definitions */
/* Start of object definitions */
OBJECT = GENERIC_OBJECT_DEFINITION
  NAME = ALIAS
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The alias object provides a method of identifying alternate
     terms or names for approved data elements or objects within
     a data system."
  REQUIRED_ELEMENT_SET = {
     ALIAS_NAME,
     USAGE_NOTE}
  OPTIONAL_ELEMENT_SET = {
     OBJECT_NAME,
     PSDD}
OBJECT_TYPE = GENERIC
END_OBJECT = GENERIC_OBJECT_DEFINITION
END 
OBJECT = GENERIC_OBJECT_DEFINITION
  NAME = ARRAY
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The ARRAY object is provided to describe dimensioned arrays
     of homogeneous objects. Note that an ARRAY can contain only
     a single object, which can itself be another ARRAY or
     COLLECTION if required.  A maximum of 6 axes is allowed in
     an ARRAY.  The optional _AXIS_ elements can be used to
     describe the variation between successive objects in the
     ARRAY.  Values for AXIS_ITEMS and _AXIS_ elements for
     multidimensional arrays are supplied as sequences in which
     the rightmost or last item varies the fastest as the
     default.  The default may be changed to leftmost or first
     item varying the fastest by including the optional element
     AXIS_ORDER_TYPE with a value of FIRST_INDEX_FASTEST."
  REQUIRED_ELEMENT_SET = {
     AXES,
     AXIS_ITEMS,
     NAME}
  OPTIONAL_ELEMENT_SET = {
     AXIS_INTERVAL,
     AXIS_NAME,
     AXIS_ORDER_TYPE,
     AXIS_START,
     AXIS_STOP,
     AXIS_UNIT,
     CHECKSUM,
     DESCRIPTION,
     INTERCHANGE_FORMAT,
     PSDD,
     START_BYTE}
  OPTIONAL_OBJECT_SET = {
     ARRAY,
     BIT_ELEMENT,
     COLLECTION,
     ELEMENT}
OBJECT_TYPE = GENERIC
END_OBJECT = GENERIC_OBJECT_DEFINITION
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = DATA_SET
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The DATA_SET catalog object is used to submit the
     information about a particular data set to the PDS. It
     contains a detailed description of the data set and
     associated target, host and reference information."
  REQUIRED_ELEMENT_SET = {
     DATA_SET_ID}
  REQUIRED_OBJECT_SET = {
     DATA_SET_HOST,
     DATA_SET_INFORMATION,
     DATA_SET_MISSION,
     DATA_SET_REFERENCE_INFORMATION,
     DATA_SET_TARGET}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = DATA_SET_COLL_ASSOC_DATA_SETS
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     This template shall be repeated for each data set associated
     with the data set collection identifier in the Data Set
     Collection template."
  REQUIRED_ELEMENT_SET = {
     DATA_SET_ID}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = DATA_SET_COLLECTION
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The following templates form part of a standard set for the
     submission of a data set collection to the PDS."
  REQUIRED_ELEMENT_SET = {
     DATA_SET_COLLECTION_ID}
  REQUIRED_OBJECT_SET = {
     DATA_SET_COLL_ASSOC_DATA_SETS,
     DATA_SET_COLLECTION_INFO,
     DATA_SET_COLLECTION_REF_INFO}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = DATA_SET_COLLECTION_INFO
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     This template shall be completed for the data set collection
     identifier entered in the Data Set Collection template."
  REQUIRED_ELEMENT_SET = {
     DATA_SET_COLLECTION_DESC,
     DATA_SET_COLLECTION_NAME,
     DATA_SET_COLLECTION_RELEASE_DT,
     DATA_SET_COLLECTION_USAGE_DESC,
     DATA_SETS,
     PRODUCER_FULL_NAME,
     START_TIME,
     STOP_TIME}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = SOFTWARE_ONLINE
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The SOFTWARE_ONLINE catalog object contains the identifier for
     each node that provides online access to the software in the PDS."
  REQUIRED_ELEMENT_SET = {
     NODE_ID,
     ON_LINE_IDENTIFICATION,
     ON_LINE_NAME,
     PLATFORM,
     PROTOCOL_TYPE}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
OBJECT = SPECIFIC_OBJECT_DEFINITION
  NAME = SOFTWARE_PURPOSE
  STATUS_TYPE = APPROVED
  DESCRIPTION = "
     The SOFTWARE_PURPOSE catalog object contains the identifier for
     the function that the software performs."
  REQUIRED_ELEMENT_SET = {
     SOFTWARE_PURPOSE}
OBJECT_TYPE = SPECIFIC
END_OBJECT = SPECIFIC_OBJECT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:MEASUREMENT_ATM_COMPOSITION"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = CHARACTER
  UNIT_ID = 'N/A'
  STANDARD_VALUE_TYPE = TEXT
  DESCRIPTION = "
     The MRO:MEASUREMENT_ATM_COMPOSITION element identifies the
     atmospheric gases present in the environment during a laboratory
     spectral measurement."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:SPECIMEN_COLLECT_LOCATION_DESC"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = CHARACTER
  UNIT_ID = 'N/A'
  STANDARD_VALUE_TYPE = TEXT
  DESCRIPTION = "
     The MRO:SPECIMEN_COLLECT_LOCATION_DESC describes the location where a
     CRISM Spectral Library sample was collected."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:SPECIMEN_CURRENT_LOCATION_NAME"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = CHARACTER
  UNIT_ID = 'N/A'
  STANDARD_VALUE_TYPE = SUGGESTED
  MINIMUM_LENGTH = 0
  MAXIMUM_LENGTH = 50
  DESCRIPTION = "
     The MRO:SPECIMEN_CURRENT_LOCATION_NAME gives the name of the
     institution or laboratory where a CRISM Spectral Library sample is
     currently stored."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:START_SUB_SPACECRAFT_LONGITUDE"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = DEG
  STANDARD_VALUE_TYPE = RANGE
  MINIMUM = 0
  MAXIMUM = 360
  DESCRIPTION = "
     The MRO:START_SUB_SPACECRAFT_LONGITUDE element gives the
     planetocentric east longitude at the sub spacecraft point at the
     beginning of an MRO orbital swath."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:STOP_SUB_SPACECRAFT_LONGITUDE"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = DEG
  STANDARD_VALUE_TYPE = RANGE
  MINIMUM = 0
  MAXIMUM = 360
  DESCRIPTION = "
     The MRO:STOP_SUB_SPACECRAFT_LONGITUDE element gives the
     planetocentric east longitude at the sub spacecraft point at the
     end of an MRO orbital swath."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:START_SUB_SPACECRAFT_LATITUDE"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = DEG
  STANDARD_VALUE_TYPE = RANGE
  MINIMUM = -90
  MAXIMUM = 90
  DESCRIPTION = "
     The MRO:START_SUB_SPACECRAFT_LATITUDE element gives the
     planetocentric latitude at the sub spacecraft point at the
     beginning of an MRO orbital swath."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:STOP_SUB_SPACECRAFT_LATITUDE"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = DEG
  STANDARD_VALUE_TYPE = RANGE
  MINIMUM = -90
  MAXIMUM = 90
  DESCRIPTION = "
      
     The MRO:STOP_SUB_SPACECRAFT_LATITUDE element gives the
     planetocentric latitude at the sub spacecraft point at the end of
     an MRO orbital swath."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:NOMINAL_ALONG_TRACK_RESOLUTION"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = M
  STANDARD_VALUE_TYPE = SUGGESTED
  MINIMUM = 0
  MAXIMUM = 10000
  DESCRIPTION = "
     The MRO:NOMINAL_ALONG_TRACK_RESOLUTION element gives the horizontal
     resolution of the instrument in the along-track direction achieved
     through azimuth processing, expressed in meters."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:REFERENCE_FUNCTION_FILE_NAME"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = CHARACTER
  UNIT_ID = 'N/A'
  STANDARD_VALUE_TYPE = SUGGESTED
  MAXIMUM_LENGTH = 256
  DESCRIPTION = "
     The MRO:REFERENCE_FUNCTION_FILE_NAME element gives the name of the file
     located in the CALIB directory containing the function used for
     building the numerical filter used in the range compression of the
     signal."
END_OBJECT = ELEMENT_DEFINITION
END 
OBJECT = ELEMENT_DEFINITION
  NAME = "MRO:OPT_BNCH_FLEXURE_TEMPERATURE"
  STATUS_TYPE = APPROVED
  GENERAL_DATA_TYPE = REAL
  UNIT_ID = DEGC
  STANDARD_VALUE_TYPE = RANGE
  DESCRIPTION = "
     The MRO:OPT_BNCH_FLEXURE_TEMPERATURE element provides the temperature
     of the HiRISE instrument's optical bench near the +X MDR flexure in
     degrees Centigrade. See Figure 2.3, MRO HiRISE EDR SIS, REFKEYID
     JPLD-32004."
END_OBJECT = ELEMENT_DEFINITION
END 
/* End of element definitions */
/* End of Data Dictionary database dump */
