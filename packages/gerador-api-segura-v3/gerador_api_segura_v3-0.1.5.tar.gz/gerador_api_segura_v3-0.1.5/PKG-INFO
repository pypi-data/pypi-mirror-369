Metadata-Version: 2.4
Name: gerador-api-segura-v3
Version: 0.1.5
Summary: CLI para gerar projeto API Flask segura (Mongo/MariaDB/PostgreSQL) a partir de um template robusto.
Project-URL: Homepage, https://github.com/WandersonDeveloper/gerador-api-segura-v3_cli_package
Project-URL: Repository, https://github.com/WandersonDeveloper/gerador-api-segura-v3_cli_package
Project-URL: Issues, https://github.com/WandersonDeveloper/gerador-api-segura-v3_cli_package/issues
Author: wanderson.felipe
License: MIT License
        
        Copyright (c) 2025
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
License-File: LICENSE
Keywords: api,flask,generator,jwt,rbac,security
Classifier: Environment :: Console
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Security
Classifier: Topic :: Software Development :: Code Generators
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# gerador-api-segura-v3

CLI para gerar uma **API Flask Segura** (Mongo/MariaDB/PostgreSQL) com JWT, RBAC, Rate Limiting, CORS, Talisman, Swagger protegido, logs, Prometheus e Docker.

> Este pacote empacota seu script `gerador_api_segura_v3.py` e o executa como um comando de terminal.

## Instalação local em modo desenvolvimento

```bash
# dentro da pasta do projeto
python -m pip install -U build
python -m pip install -U hatchling
python -m pip install -e .
```

Execute o gerador:
```bash
gerador-api-segura
```

<!-- ## Publicação no TestPyPI e PyPI

1) **Criar conta e token** (uma vez)
- Crie contas no https://test.pypi.org e https://pypi.org
- Em *Account settings* → *API tokens*, crie um token e **salve** o valor.

2) **Instalar ferramentas**
```bash
python -m pip install -U build twine
```

3) **Gerar artefatos**
```bash
python -m build
# vai criar dist/*.whl e dist/*.tar.gz
```

4) **Subir no TestPyPI (recomendado primeiro)**
```bash
# use o token, formato de usuário: __token__
twine upload --repository testpypi dist/*
# digite o token quando pedir senha ou use TWINE_PASSWORD
```

5) **Instalar do TestPyPI (opcional)**
```bash
python -m pip install --index-url https://test.pypi.org/simple/ --no-deps gerador-api-segura-v3
# ou via pipx para isolar:
pipx install --index-url https://test.pypi.org/simple/ --pip-args='--no-deps' gerador-api-segura-v3
```

6) **Publicar no PyPI**
```bash
twine upload dist/*
```

Depois, qualquer pessoa poderá instalar com:
```bash
pipx install gerador-api-segura-v3
# ou
python -m pip install gerador-api-segura-v3
```

## Personalizações e versão *Pro*
- Refatore o script para uma função `main()` e (opcional) troque `input()` por flags com `argparse` ou `typer`.
- Adicione testes do CLI e CI de publicação automática.
- Use *Semantic Versioning* (ex.: `0.1.0`, `0.2.0`, ...). -->

## Licença
MIT
