"use strict";(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[2859],{69252:(t,e,a)=>{a.d(e,{S:()=>n});var r=a(46077);function n(t,e){if(t.accDescr){e.setAccDescription?.(t.accDescr)}if(t.accTitle){e.setAccTitle?.(t.accTitle)}if(t.title){e.setDiagramTitle?.(t.title)}}(0,r.K2)(n,"populateCommonDb")},42859:(t,e,a)=>{a.d(e,{diagram:()=>B});var r=a(69252);var n=a(34505);var o=a(15248);var i=a(46077);var l=a(24010);var s={packet:[]};var c=structuredClone(s);var d=i.UI.packet;var p=(0,i.K2)((()=>{const t=(0,n.$t)({...d,...(0,i.zj)().packet});if(t.showBits){t.paddingY+=10}return t}),"getConfig");var b=(0,i.K2)((()=>c.packet),"getPacket");var k=(0,i.K2)((t=>{if(t.length>0){c.packet.push(t)}}),"pushWord");var h=(0,i.K2)((()=>{(0,i.IU)();c=structuredClone(s)}),"clear");var f={pushWord:k,getPacket:b,getConfig:p,clear:h,setAccTitle:i.SV,getAccTitle:i.iN,setDiagramTitle:i.ke,getDiagramTitle:i.ab,getAccDescription:i.m7,setAccDescription:i.EI};var g=1e4;var u=(0,i.K2)((t=>{(0,r.S)(t,f);let e=-1;let a=[];let n=1;const{bitsPerRow:o}=f.getConfig();for(let{start:r,end:l,bits:s,label:c}of t.blocks){if(r!==void 0&&l!==void 0&&l<r){throw new Error(`Packet block ${r} - ${l} is invalid. End must be greater than start.`)}r??=e+1;if(r!==e+1){throw new Error(`Packet block ${r} - ${l??r} is not contiguous. It should start from ${e+1}.`)}if(s===0){throw new Error(`Packet block ${r} is invalid. Cannot have a zero bit field.`)}l??=r+(s??1)-1;s??=l-r+1;e=l;i.Rm.debug(`Packet block ${r} - ${e} with label ${c}`);while(a.length<=o+1&&f.getPacket().length<g){const[t,e]=v({start:r,end:l,bits:s,label:c},n,o);a.push(t);if(t.end+1===n*o){f.pushWord(a);a=[];n++}if(!e){break}({start:r,end:l,bits:s,label:c}=e)}}f.pushWord(a)}),"populate");var v=(0,i.K2)(((t,e,a)=>{if(t.start===void 0){throw new Error("start should have been set during first phase")}if(t.end===void 0){throw new Error("end should have been set during first phase")}if(t.start>t.end){throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`)}if(t.end+1<=e*a){return[t,void 0]}const r=e*a-1;const n=e*a;return[{start:t.start,end:r,label:t.label,bits:r-t.start},{start:n,end:t.end,label:t.label,bits:t.end-n}]}),"getNextFittingBlock");var w={parse:(0,i.K2)((async t=>{const e=await(0,l.qg)("packet",t);i.Rm.debug(e);u(e)}),"parse")};var $=(0,i.K2)(((t,e,a,r)=>{const n=r.db;const l=n.getConfig();const{rowHeight:s,paddingY:c,bitWidth:d,bitsPerRow:p}=l;const b=n.getPacket();const k=n.getDiagramTitle();const h=s+c;const f=h*(b.length+1)-(k?0:s);const g=d*p+2;const u=(0,o.D)(e);u.attr("viewbox",`0 0 ${g} ${f}`);(0,i.a$)(u,f,g,l.useMaxWidth);for(const[o,i]of b.entries()){x(u,i,o,l)}u.append("text").text(k).attr("x",g/2).attr("y",f-h/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw");var x=(0,i.K2)(((t,e,a,{rowHeight:r,paddingX:n,paddingY:o,bitWidth:i,bitsPerRow:l,showBits:s})=>{const c=t.append("g");const d=a*(r+o)+o;for(const p of e){const t=p.start%l*i+1;const e=(p.end-p.start+1)*i-n;c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock");c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(p.label);if(!s){continue}const a=p.end===p.start;const o=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",o).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(p.start);if(!a){c.append("text").attr("x",t+e).attr("y",o).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(p.end)}}}),"drawWord");var C={draw:$};var m={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"};var y=(0,i.K2)((({packet:t}={})=>{const e=(0,n.$t)(m,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles");var B={parser:w,db:f,renderer:C,styles:y}}}]);