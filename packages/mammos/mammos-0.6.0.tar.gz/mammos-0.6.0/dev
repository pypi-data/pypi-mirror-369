{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6f55f51b",
   "metadata": {},
   "source": [
    "# Linearisation Workflow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bbf994bf-eb23-417f-b26c-9dfb934ba068",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<astropy.units.core._UnitContext at 0x7fc9e5426d90>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import mammos_analysis\n",
    "import mammos_mumag\n",
    "import mammos_entity as me\n",
    "import mammos_units as u\n",
    "import pandas as pd\n",
    "\n",
    "u.set_enabled_equivalencies(u.magnetic_flux_field())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3e80804",
   "metadata": {},
   "source": [
    "Assuming we already have the result of a hysteresis loop in the file `box.dat`, we can load it with"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "669a55f3-1a8d-4d05-a1b2-253861882dac",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"box.dat\", delimiter=\" \", names=[\"configuration_type\", \"mu0_Hext\", \"polarisation\", \"energy_density\"])\n",
    "\n",
    "loop_results = mammos_mumag.hysteresis.Result(\n",
    "    H=me.Entity(\n",
    "        \"ExternalMagneticField\",\n",
    "        value=(df[\"mu0_Hext\"].to_numpy() * u.T).to(u.A / u.m),\n",
    "        unit=u.A / u.m,\n",
    "    ),\n",
    "    M=me.Ms(\n",
    "        (df[\"polarisation\"].to_numpy() * u.T).to(u.A / u.m),\n",
    "        unit=u.A / u.m,\n",
    "    ),\n",
    "    configuration_type=df[\"configuration_type\"].to_numpy(),\n",
    "    energy_density=me.Entity(\"EnergyDensity\", value=df[\"energy_density\"], unit=u.J / u.m**3),\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4376f31",
   "metadata": {},
   "source": [
    "From this object we can extract `H`, `M`, and `EnergyDensity`. These represents, respectively, the external applied field, the spontaneous magnetisation, and the energy density."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b4527438",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "ExternalMagneticField(value=[ 397887.35751314  397728.20257013  397569.04762713 ... -168226.77475654\n",
       " -168385.92969955 -168545.08464255], unit=A / m)"
      ],
      "text/plain": [
       "ExternalMagneticField(value=[ 397887.35751314  397728.20257013  397569.04762713 ... -168226.77475654\n",
       " -168385.92969955 -168545.08464255], unit=A / m)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loop_results.H"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d6330de1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "SpontaneousMagnetization(value=[ 774726.16085789  782438.32816025  778637.18273716 ... -616355.7133041\n",
       " -626352.76724119 -641827.62543558], unit=A / m)"
      ],
      "text/plain": [
       "SpontaneousMagnetization(value=[ 774726.16085789  782438.32816025  778637.18273716 ... -616355.7133041\n",
       " -626352.76724119 -641827.62543558], unit=A / m)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loop_results.M"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "598e313b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "EnergyDensity(value=[-0.32673491 -0.3278284  -0.32865243 ... -0.04862285 -0.05375878\n",
       " -0.05665882], unit=J / m3)"
      ],
      "text/plain": [
       "EnergyDensity(value=[-0.32673491 -0.3278284  -0.32865243 ... -0.04862285 -0.05375878\n",
       " -0.05665882], unit=J / m3)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loop_results.energy_density"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "90b167a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>configuration_type</th>\n",
       "      <th>H</th>\n",
       "      <th>M</th>\n",
       "      <th>energy_density</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>397887.357513</td>\n",
       "      <td>774726.160858</td>\n",
       "      <td>-0.326735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>397728.202570</td>\n",
       "      <td>782438.328160</td>\n",
       "      <td>-0.327828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>397569.047627</td>\n",
       "      <td>778637.182737</td>\n",
       "      <td>-0.328652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>397409.892684</td>\n",
       "      <td>776802.108717</td>\n",
       "      <td>-0.328566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>397250.737741</td>\n",
       "      <td>777093.810966</td>\n",
       "      <td>-0.328466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3555</th>\n",
       "      <td>162</td>\n",
       "      <td>-167908.464871</td>\n",
       "      <td>-607053.205631</td>\n",
       "      <td>-0.045942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3556</th>\n",
       "      <td>0</td>\n",
       "      <td>-168067.619814</td>\n",
       "      <td>-610742.780173</td>\n",
       "      <td>-0.046991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3557</th>\n",
       "      <td>163</td>\n",
       "      <td>-168226.774757</td>\n",
       "      <td>-616355.713304</td>\n",
       "      <td>-0.048623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3558</th>\n",
       "      <td>164</td>\n",
       "      <td>-168385.929700</td>\n",
       "      <td>-626352.767241</td>\n",
       "      <td>-0.053759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3559</th>\n",
       "      <td>165</td>\n",
       "      <td>-168545.084643</td>\n",
       "      <td>-641827.625436</td>\n",
       "      <td>-0.056659</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3560 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      configuration_type              H              M  energy_density\n",
       "0                      1  397887.357513  774726.160858       -0.326735\n",
       "1                      0  397728.202570  782438.328160       -0.327828\n",
       "2                      0  397569.047627  778637.182737       -0.328652\n",
       "3                      0  397409.892684  776802.108717       -0.328566\n",
       "4                      0  397250.737741  777093.810966       -0.328466\n",
       "...                  ...            ...            ...             ...\n",
       "3555                 162 -167908.464871 -607053.205631       -0.045942\n",
       "3556                   0 -168067.619814 -610742.780173       -0.046991\n",
       "3557                 163 -168226.774757 -616355.713304       -0.048623\n",
       "3558                 164 -168385.929700 -626352.767241       -0.053759\n",
       "3559                 165 -168545.084643 -641827.625436       -0.056659\n",
       "\n",
       "[3560 rows x 4 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loop_results.dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f629ce07",
   "metadata": {},
   "source": [
    "We can plot the hysteresis loop with the `plot` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b9436d2a-1e88-4309-96d1-d9ae1b6c9300",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "loop_results.plot(configuration_marks=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e2b2328",
   "metadata": {},
   "source": [
    "We can extract the extrinsic properties with the `extrinsic_properties` function from the `mammos_analysis` package:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "88e7b8f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "extrinsic_properties = mammos_analysis.hysteresis.extrinsic_properties(loop_results.M, loop_results.H)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7c2ba041",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "Remanence(value=-13209.860269418283, unit=A / m)"
      ],
      "text/plain": [
       "Remanence(value=-13209.860269418283, unit=A / m)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extrinsic_properties.Mr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "88a15c51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "CoercivityHcExternal(value=-63147.24333538003, unit=A / m)"
      ],
      "text/plain": [
       "CoercivityHcExternal(value=-63147.24333538003, unit=A / m)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "extrinsic_properties.Hc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97682fbe",
   "metadata": {},
   "source": [
    "And finally we can evaluate the length of the linearised segment using the `linearised_segment` function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e133eb25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$0.96131837 \\; \\mathrm{\\frac{A}{m}}$"
      ],
      "text/plain": [
       "<Quantity 0.96131837 A / m>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mammos_analysis.hysteresis.linearised_segment(loop_results.M, loop_results.H)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "default",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
