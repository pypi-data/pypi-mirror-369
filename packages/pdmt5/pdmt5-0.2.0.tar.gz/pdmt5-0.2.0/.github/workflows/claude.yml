---
name: Claude Code
on:
  issue_comment:
    types:
      - created
  pull_request_review_comment:
    types:
      - created
  issues:
    types:
      - opened
      - assigned
  pull_request_review:
    types:
      - submitted
jobs:
  claude:
    if: >
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
      || (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
      || (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))
      || (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read  # Required for Claude to read CI results on PRs
    uses: dceoy/gh-actions-for-devops/.github/workflows/claude-code-action.yml@main
    with:
      # This is an optional setting that allows Claude to read CI results on PRs
      additional-permissions: |
        actions: read

      # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
      # model: "claude-opus-4-20250514"

      # Optional: Customize the trigger phrase (default: @claude)
      # trigger-phrase: "/claude"

      # Optional: Trigger when specific user is assigned to an issue
      # assignee-trigger: "claude-bot"

      # Optional: Allow Claude to run specific commands
      # allowed-tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"

      # Optional: Add custom instructions for Claude to customize its behavior for your project
      # custom-instructions: |
      #   Follow our coding standards
      #   Ensure all new code has tests
      #   Use TypeScript for new files

      # Optional: Custom environment variables for Claude
      # claude-env: |
      #   NODE_ENV: test
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
