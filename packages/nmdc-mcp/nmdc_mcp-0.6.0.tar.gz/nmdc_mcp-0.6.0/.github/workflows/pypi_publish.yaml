name: Publish Python Package

on:
  release:
    types: [created]

jobs: 
  pypi_publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch full history and tags for dynamic versioning
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install project dependencies
        run: uv sync --group dev

      - name: Run tests and QC (optional - won't block release)
        run: make test-coverage || true

      - name: Verify version matches release tag
        run: |
          # Get version from setuptools_scm/dynamic versioning
          PACKAGE_VERSION=$(uv run python -c "from importlib.metadata import version; print(version('nmdc-mcp'))" 2>/dev/null || echo "Could not get version")
          echo "Package version: $PACKAGE_VERSION"
          echo "Release tag: ${{ github.ref_name }}"
          # Verify no local version part (no +commit)
          if [[ "$PACKAGE_VERSION" == *"+"* ]]; then
            echo "ERROR: Package version contains local part: $PACKAGE_VERSION"
            exit 1
          fi

      - name: Build source and wheel archives
        run: uv build

      - name: Publish distribution 📦 to PyPI
        # No username or password because we're using trusted publishing
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true