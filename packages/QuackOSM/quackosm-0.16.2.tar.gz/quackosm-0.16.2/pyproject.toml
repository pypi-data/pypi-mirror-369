[project]
name = "QuackOSM"
version = "0.16.2"
description = "An open-source tool for reading OpenStreetMap PBF files using DuckDB"
authors = [
    { name = "Kamil Raczycki", email = "kraczycki@kraina.ai" },
]
dependencies = [
    "geopandas>=0.6",
    "shapely>=2",
    "pyarrow>=16.0.0",
    "duckdb>=1.1.2",
    "geoarrow-pyarrow>=0.1.2",
    "typeguard>=3.0.0",
    "psutil>=5.6.2",
    "pooch>=1.6.0",
    "tqdm>=4.42.0",
    "beautifulsoup4",
    "requests",
    "rich>=12.0.0",
    "geopy>=2.0.0",
    "numpy>=1.26.0",
    "rq_geo_toolkit>=2025.8.3",
]
requires-python = ">=3.9"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

[project.license]
text = "Apache-2.0"

[project.urls]
Homepage = "https://kraina-ai.github.io/quackosm"
Repository = "https://github.com/kraina-ai/quackosm"
Documentation = "https://kraina-ai.github.io/quackosm"
Changelog = "https://github.com/kraina-ai/quackosm/blob/main/CHANGELOG.md"

[project.optional-dependencies]
cli = [
    "typer[all]>=0.9.0",
    "s2sphere>=0.2.5",
]

[project.scripts]
quackosm = "quackosm.__main__:main"
QuackOSM = "quackosm.__main__:main"

[dependency-groups]
dev = [
    "bumpver",
    "types-requests",
    "types-python-dateutil",
    "setuptools>=45.0.0",
]
lint = [
    "pre-commit>=4",
    "mypy>=1",
    "docformatter[tomli]",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.0.0",
    "tox-pdm>=0.7.2",
    "pytest-mock>=3.3.0",
    "requests-mock>=1.12.1",
    "pytest-check>=2.3.1",
    "pytest-parametrization>=2022.2.1",
    "pytest-doctestplus>=1.2.1",
    "osmnx>=1.3.0",
]
docs = [
    "mkdocs",
    "mkdocs-material[imaging]",
    "mkdocs-mermaid2-plugin",
    "mkdocstrings[python]",
    "mkdocs-jupyter",
    "ipykernel",
    "mkdocs-gen-files",
    "mkdocs-awesome-pages-plugin",
    "mike>=2",
    "black",
    "jupyter",
    "nbconvert",
    "nbformat",
    "notebook",
    "matplotlib>=3.2.0",
    "seaborn>=0.10.0",
    "py-cpuinfo",
    "adjustText",
    "contextily",
]
license = [
    "licensecheck==2025.1.0",
    "pipdeptree",
]
cli-dev = [
    "ipywidgets",
    "folium",
    "matplotlib>=3.2.0",
    "mapclassify",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.scripts]
post_install = "pre-commit install"

[tool.pdm.build]
excludes = [
    "quackosm/conftest.py",
]

[tool.black]
line-length = 100
target-version = [
    "py39",
    "py310",
    "py311",
    "py312",
    "py313",
]
preview = true

[tool.ruff]
line-length = 100
target-version = "py39"
extend-exclude = [
    "old",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "UP",
    "D",
    "I",
    "B",
    "NPY",
    "YTT",
    "Q",
    "PLE",
    "PLW",
    "PIE",
    "TID",
    "ISC",
    "TCH",
]
ignore = [
    "D212",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.mypy]
strict = true
show_column_numbers = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true

[tool.docformatter]
syntax = "google"
black = true
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
tab-width = 4
blank = false
pre-summary-newline = true
close-quotes-on-newline = true
wrap-one-line = true

[tool.bumpver]
current_version = "0.16.2"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "chore(CI/CD): bump version {old_version} -> {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    "^current_version = \"{version}\"$",
    "^version = \"{version}\"$",
]
"quackosm/__init__.py" = [
    "^__version__ = \"{version}\"$",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
log_cli = true
doctest_optionflags = [
    "ELLIPSIS",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]

[tool.licensecheck]
using = "requirements"
zero = false
ignore_licenses = [
    "UNKNOWN",
]
ignore_packages = [
    "docformatter",
    "griffe",
    "mkdocs-autorefs",
    "mkdocs-jupyter",
    "mkdocstrings-python",
    "mkdocstrings",
    "pillow",
    "pipdeptree",
    "python-geohash",
    "referencing",
    "typing-extensions",
    "mypy-extensions",
]
