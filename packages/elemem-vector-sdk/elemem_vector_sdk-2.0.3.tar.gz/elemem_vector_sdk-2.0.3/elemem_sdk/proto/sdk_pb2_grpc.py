# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import sdk_pb2 as sdk__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in sdk_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SdkServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_index = channel.unary_unary(
                '/sdk.SdkService/create_index',
                request_serializer=sdk__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=sdk__pb2.CreateIndexResponse.FromString,
                _registered_method=True)
        self.delete_index = channel.unary_unary(
                '/sdk.SdkService/delete_index',
                request_serializer=sdk__pb2.DeleteIndexRequest.SerializeToString,
                response_deserializer=sdk__pb2.DeleteIndexResponse.FromString,
                _registered_method=True)
        self.query_all_index = channel.unary_unary(
                '/sdk.SdkService/query_all_index',
                request_serializer=sdk__pb2.QueryAllIndexRequest.SerializeToString,
                response_deserializer=sdk__pb2.QueryAllIndexResponse.FromString,
                _registered_method=True)
        self.train = channel.unary_unary(
                '/sdk.SdkService/train',
                request_serializer=sdk__pb2.TrainRequest.SerializeToString,
                response_deserializer=sdk__pb2.TrainResponse.FromString,
                _registered_method=True)
        self.add = channel.unary_unary(
                '/sdk.SdkService/add',
                request_serializer=sdk__pb2.AddRequest.SerializeToString,
                response_deserializer=sdk__pb2.AddResponse.FromString,
                _registered_method=True)
        self.search = channel.unary_unary(
                '/sdk.SdkService/search',
                request_serializer=sdk__pb2.SearchRequest.SerializeToString,
                response_deserializer=sdk__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.remove = channel.unary_unary(
                '/sdk.SdkService/remove',
                request_serializer=sdk__pb2.RemoveRequest.SerializeToString,
                response_deserializer=sdk__pb2.RemoveResponse.FromString,
                _registered_method=True)
        self.query = channel.unary_unary(
                '/sdk.SdkService/query',
                request_serializer=sdk__pb2.QueryRequest.SerializeToString,
                response_deserializer=sdk__pb2.QueryResponse.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/sdk.SdkService/update',
                request_serializer=sdk__pb2.UpdateRequest.SerializeToString,
                response_deserializer=sdk__pb2.UpdateResponse.FromString,
                _registered_method=True)


class SdkServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query_all_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def train(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SdkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_index': grpc.unary_unary_rpc_method_handler(
                    servicer.create_index,
                    request_deserializer=sdk__pb2.CreateIndexRequest.FromString,
                    response_serializer=sdk__pb2.CreateIndexResponse.SerializeToString,
            ),
            'delete_index': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_index,
                    request_deserializer=sdk__pb2.DeleteIndexRequest.FromString,
                    response_serializer=sdk__pb2.DeleteIndexResponse.SerializeToString,
            ),
            'query_all_index': grpc.unary_unary_rpc_method_handler(
                    servicer.query_all_index,
                    request_deserializer=sdk__pb2.QueryAllIndexRequest.FromString,
                    response_serializer=sdk__pb2.QueryAllIndexResponse.SerializeToString,
            ),
            'train': grpc.unary_unary_rpc_method_handler(
                    servicer.train,
                    request_deserializer=sdk__pb2.TrainRequest.FromString,
                    response_serializer=sdk__pb2.TrainResponse.SerializeToString,
            ),
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=sdk__pb2.AddRequest.FromString,
                    response_serializer=sdk__pb2.AddResponse.SerializeToString,
            ),
            'search': grpc.unary_unary_rpc_method_handler(
                    servicer.search,
                    request_deserializer=sdk__pb2.SearchRequest.FromString,
                    response_serializer=sdk__pb2.SearchResponse.SerializeToString,
            ),
            'remove': grpc.unary_unary_rpc_method_handler(
                    servicer.remove,
                    request_deserializer=sdk__pb2.RemoveRequest.FromString,
                    response_serializer=sdk__pb2.RemoveResponse.SerializeToString,
            ),
            'query': grpc.unary_unary_rpc_method_handler(
                    servicer.query,
                    request_deserializer=sdk__pb2.QueryRequest.FromString,
                    response_serializer=sdk__pb2.QueryResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=sdk__pb2.UpdateRequest.FromString,
                    response_serializer=sdk__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdk.SdkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sdk.SdkService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SdkService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/create_index',
            sdk__pb2.CreateIndexRequest.SerializeToString,
            sdk__pb2.CreateIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def delete_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/delete_index',
            sdk__pb2.DeleteIndexRequest.SerializeToString,
            sdk__pb2.DeleteIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query_all_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/query_all_index',
            sdk__pb2.QueryAllIndexRequest.SerializeToString,
            sdk__pb2.QueryAllIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def train(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/train',
            sdk__pb2.TrainRequest.SerializeToString,
            sdk__pb2.TrainResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/add',
            sdk__pb2.AddRequest.SerializeToString,
            sdk__pb2.AddResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/search',
            sdk__pb2.SearchRequest.SerializeToString,
            sdk__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/remove',
            sdk__pb2.RemoveRequest.SerializeToString,
            sdk__pb2.RemoveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/query',
            sdk__pb2.QueryRequest.SerializeToString,
            sdk__pb2.QueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkService/update',
            sdk__pb2.UpdateRequest.SerializeToString,
            sdk__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
