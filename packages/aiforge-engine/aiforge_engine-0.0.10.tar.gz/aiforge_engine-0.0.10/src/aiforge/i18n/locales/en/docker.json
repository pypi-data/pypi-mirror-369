{  
  "docker": {  
    "checking_environment": "🔍 Checking Docker environment...",  
    "docker_installed": "✅ Docker is installed",  
    "docker_not_installed": "❌ Docker is not installed",  
    "docker_not_in_path": "❌ Docker is not installed or not in PATH",  
    "docker_running": "✅ Docker service is running",  
    "docker_not_running": "❌ Docker service is not running, please start Docker Desktop",  
    "cannot_connect_docker": "❌ Cannot connect to Docker service",  
    "docker_compose_available": "✅ Docker Compose is available",  
    "docker_compose_not_available": "❌ Docker Compose is not available",  
    "docker_compose_not_installed": "❌ Docker Compose is not installed",  
    "compose_file_exists": "✅ docker-compose.yml exists",  
    "compose_file_not_exists": "❌ docker-compose.yml does not exist",  
    "dev_compose_file_exists": "✅ docker-compose.dev.yml exists",  
    "dev_compose_file_not_exists": "ℹ️ docker-compose.dev.yml does not exist (dev mode unavailable)",  
    "aiforge_image_exists": "✅ AIForge image exists",  
    "aiforge_image_not_exists": "ℹ️ AIForge image does not exist, needs to be built",  
    "cannot_check_image_status": "⚠️ Cannot check AIForge image status",  
    "building_images": "🔨 Checking and building necessary images...",  
    "image_exists_skip_build": "✅ AIForge image exists, skipping build",  
    "start_building": "📦 Starting to build AIForge image...",  
    "build_time_notice": "ℹ️ First build may take 5-10 minutes, please be patient...",  
    "build_progress": "📦 Build progress:",  
    "build_success": "✅ Image build successful",  
    "build_failed": "❌ Image build failed",  
    "build_exception": "❌ Build process exception: {error}",  
    "starting_services": "🚀 AIForge Docker integrated startup...",  
    "docker_not_installed_help": "💡 Download: https://www.docker.com/products/docker-desktop",  
    "docker_not_running_help": "💡 Please start Docker Desktop and wait for it to fully start",  
    "docker_compose_not_available_msg": "❌ Docker Compose is not available",  
    "compose_file_not_exists_msg": "❌ docker-compose.yml file does not exist",  
    "dev_mode_fallback": "💡 Will use production mode startup",  
    "cleaning_old_containers": "🧹 Cleaning old containers...",  
    "dev_mode_start": "🔧 Development mode startup (code hot reload)",  
    "production_mode_start": "🔨 Production mode startup",  
    "searxng_enabled": "🔍 SearXNG search service enabled",  
    "searxng_not_enabled": "⚠️ SearXNG search service not enabled",  
    "service_start_success": "✅ Docker services started successfully",  
    "waiting_services": "⏳ Waiting for services to fully start...",  
    "startup_complete": "🎉 AIForge Docker integrated startup complete!",  
    "ready_to_use": "💡 You can now start using AIForge",  
    "service_start_failed": "❌ Docker service startup failed: {error}",  
    "startup_exception": "❌ Startup process exception: {error}",  
    "stopping_services": "🛑 Stopping AIForge Docker services...",  
    "stop_success": "✅ Docker services stopped successfully",  
    "stop_failed": "❌ Docker service stop failed: {error}",  
    "service_status": "📊 AIForge Docker service status:",  
    "cannot_get_status": "❌ Cannot get service status",  
    "cleaning_resources": "🧹 Cleaning AIForge Docker resources...",  
    "cleanup_success": "✅ Docker resource cleanup complete",  
    "cleanup_failed": "❌ Cleanup failed: {error}",  
    "deep_cleanup_start": "🔥 Executing AIForge deep cleanup...",  
    "deep_cleanup_warning": "⚠️ This will delete AIForge-related Docker resources but preserve Python, SearXNG, Nginx base images",  
    "stopping_all_services": "🛑 Stopping all services...",  
    "cleaning_built_images": "🗑️ Cleaning AIForge built images...",  
    "cleaning_build_cache": "🧹 Cleaning build cache...",  
    "cleaning_dangling_resources": "🌐 Cleaning dangling resources...",  
    "deep_cleanup_success": "✅ Deep cleanup complete, base images preserved",  
    "deep_cleanup_failed": "❌ Deep cleanup failed: {error}",  
    "removed_images": "✅ Removed {count} AIForge built images",  
    "no_images_to_remove": "ℹ️ No AIForge built images found to clean",  
    "cleanup_images_error": "⚠️ Error cleaning built images: {error}",  
    "health_check": "🏥 Service health check:",  
    "service_running": "✅ {service}: Running normally",  
    "service_not_running": "❌ {service}: {status}",  
    "service_status_unknown": "⚠️ {service}: Status unknown",  
    "service_urls": "🌐 Service access URLs:",  
    "aiforge_web_url": "- AIForge Web: http://localhost:8000",  
    "searxng_url": "- SearXNG: http://localhost:55510",  
    "admin_panel_url": "- Admin Panel: http://localhost:8000/admin",  
    "pyyaml_not_installed": "⚠️ PyYAML not installed, skipping SearXNG config update",  
    "searxng_config_not_exists": "ℹ️ SearXNG config file does not exist, skipping format update",  
    "searxng_config_updated": "✅ SearXNG config updated to support multiple output formats",  
    "searxng_config_latest": "✅ SearXNG config is up to date",  
    "searxng_config_update_failed": "⚠️ SearXNG config update failed: {error}",  
    "user_interrupted": "⚠️ User interrupted operation",  
    "execution_exception": "❌ Execution exception: {error}",  
    "cli": {  
      "description": "AIForge Docker Integrated Service Management",  
      "action_help": "Action type",  
      "dev_help": "Development mode startup (code hot reload)",  
      "searxng_help": "Enable SearXNG search service",  
      "epilog": "Integrated Usage Examples:\n    # One-click start production mode (without SearXNG)\n    aiforge-docker start\n\n    # One-click start production mode (with SearXNG)\n    aiforge-docker start --searxng\n\n    # One-click start development mode (code hot reload, with SearXNG)\n    aiforge-docker start --dev --searxng\n\n    # Stop all services\n    aiforge-docker stop\n\n    # View service status\n    aiforge-docker status\n\n    # Clean Docker resources\n    aiforge-docker cleanup\n\n    # Deep clean resources\n    aiforge-docker deep-cleanup\n\nDevelopment Version Usage Examples:\n    # Use startup script (recommended)\n    ./aiforge-docker.sh start --dev\n    ./aiforge-docker.sh deep-cleanup\n\nLanguage Settings:\n    # Dynamically specify language via environment variables\n    AIFORGE_LOCALE=en ./aiforge-docker.sh start\n    AIFORGE_LOCALE=ja ./aiforge-docker.sh status\n    \n    # Windows PowerShell\n    $env:AIFORGE_LOCALE=\"en\"; ./aiforge-docker.bat start\n\nFeatures:\n    ✅ Auto-detect Docker environment\n    ✅ Smart image building (avoid duplicate builds)\n    ✅ Real-time build progress\n    ✅ Optional SearXNG enablement\n    ✅ Service health checks\n    ✅ One-click resource cleanup\n    ✅ Multi-language support (zh|en|ar|de|es|fr|hi|ja|ko|pt|ru|vi)"  
    }  
  }
}