name: mkdocs

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install ttf-mscorefonts-installer
        run: |
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
          sudo apt-get update && sudo apt-get install ttf-mscorefonts-installer

      - name: Install LibreOffice
        run: sudo apt-get update && sudo apt-get install libreoffice --no-install-recommends

      - name: Install dependencies
        run: |
          pip install mkdocs-material mkdocstrings-python markdown-exec[ansi] matplotlib
          pip install pytest pytest-cov
          pip install -e '.[all]'
          pip install --force-reinstall "click<8.2.2" # Workaround for https://github.com/squidfunk/mkdocs-material/issues/8375

      - name: Generate coverage report and deploy mkdocs site
        run: |
          pytest --cov=rtflite --cov-report=html:docs/coverage/
          # Build the site first to generate all artifacts
          mkdocs build
          # Ensure generated artifacts are included
          if [ -d "docs/articles/rtf" ]; then
            cp -r docs/articles/rtf site/articles/
          fi
          if [ -d "docs/articles/pdf" ]; then
            cp -r docs/articles/pdf site/articles/
          fi
          # Deploy the built site
          mkdocs gh-deploy --force
