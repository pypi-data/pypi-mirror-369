[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-anatomical-utils"
description = "Tools to work with anatomically-aware files"
license = "MIT"
requires-python = ">=3.9"
authors = [
  { name = "Allen Institute for Neural Dynamics" },
  { name = "Galen Lynch", email = "galen@galenlynch.com" },
  { name = "Yoni Browning", email = "yoni.browning@alleninstitute.org" },
]
classifiers = ["Programming Language :: Python :: 3"]
readme = "README.md"
version = "0.2.0"


dependencies = ['numpy >= 1.7, < 3', 'SimpleITK >= 2, < 3']

[project.urls]
Repository = "https://github.com/AllenNeuralDynamics/aind-anatomical-utils/"
Issues = "https://github.com/AllenNeuralDynamics/aind-anatomical-utils/issues"
Changelog = "https://github.com/AllenNeuralDynamics/aind-anatomical-utils/blob/main/CHANGELOG.md"


[dependency-groups]
dev = ['codespell', 'pytest', 'pytest-cov', 'ruff', 'interrogate', 'mypy']
vscode = [{include-group = 'dev'}, 'ipykernel', 'pip']
docs = [
  {include-group = 'dev'},
  'mkdocs',
  'mkdocs-material',
  'mkdocstrings[python]',
  'pymdown-extensions',
  'ruff',
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
readme = { file = "README.md", content-type = "text/markdown" }

[tool.ruff]
line-length = 79
target-version = 'py313'

[tool.black]
line-length = 79
target-version = ['py313']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.ruff.lint]
extend-select = ['Q', 'RUF100', 'C90', 'I', 'F', 'E', 'W']
extend-ignore = []
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'numpy' }

[tool.codespell]
skip = '.git,*.pdf,*.svg,./bonsai,*.bonsai,./docs/_build,uv.lock,./doc_template'
ignore-words-list = 'nd'

[tool.pytest.ini_options]
addopts = "--strict-markers --tb=short --cov=src --cov-report=term-missing --cov-fail-under=0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
omit = ["*__init__*"]
source = ["src"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "# pragma: no cover"]
fail_under = 30

[tool.isort]
line_length = 79
profile = "black"

[tool.interrogate]
ignore-init-method = true
ignore-magic = true
ignore_module = true
fail-under = 30
exclude = [
  "__init__.py",
  "tests",
  "docs",
  "build",
  "setup.py",
  "examples",
  "site",
]

[tool.commitizen]
version_provider = "pep621"
version_files = ["pyproject.toml", "src/aind_anatomical_utils/__init__.py:__version__"]
update_changelog_on_bump = true
tag_format = "v$version"
major_version_zero = true

[tool.mypy]
files = ["src/aind_anatomical_utils"]
warn_return_any = true
warn_unused_configs = true
strict_optional = true
ignore_missing_imports = true
disallow_any_unimported = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_unused_ignores = true
