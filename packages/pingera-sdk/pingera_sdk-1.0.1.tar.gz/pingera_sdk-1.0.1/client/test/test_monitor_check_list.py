# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.monitor_check_list import MonitorCheckList

class TestMonitorCheckList(unittest.TestCase):
    """MonitorCheckList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitorCheckList:
        """Test MonitorCheckList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitorCheckList`
        """
        model = MonitorCheckList()
        if include_optional:
            return MonitorCheckList(
                pagination = {"page":1,"page_size":20,"total_pages":5,"total_items":100},
                checks = [
                    pingera.models.monitor_check.MonitorCheck(
                        active = True, 
                        last_checked_at = '2024-01-15T14:30Z', 
                        interval = 300, 
                        id = 'chk123def456', 
                        name = 'Production API Health Check', 
                        port = 443, 
                        type = 'web', 
                        created_at = '2024-01-15T10:00Z', 
                        parameters = {"pw_script":"const { test, expect } = require('@playwright/test');\n\ntest('example', async ({ page }) => {\n  await page.goto('https://example.com');\n  await expect(page).toHaveTitle(/Example/);\n});","regions":["US, East coast","EU, West"]}, 
                        status = 'ok', 
                        timeout = 10, 
                        host = 'example.com', 
                        updated_at = '2024-01-15T14:00Z', 
                        url = 'https://api.example.com/health', )
                    ]
            )
        else:
            return MonitorCheckList(
        )
        """

    def testMonitorCheckList(self):
        """Test MonitorCheckList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
