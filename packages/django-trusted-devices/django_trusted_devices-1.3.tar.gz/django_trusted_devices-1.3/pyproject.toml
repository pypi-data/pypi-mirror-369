[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "django-trusted-devices"
version = "v1.3"
description = "Secure and manage trusted login devices for Django users"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Jakhongir Ganiev", email = "contact@jakhongir.dev" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["django", "trusted devices", "user security", "sessions", "login", "djangorestframework"]

dependencies = [
    "django>=4.2,<5.3",
    "djangorestframework>=3.14.0",
    "djangorestframework-simplejwt>=5.5.0",
    "drf-spectacular>=0.28.0",
    "httpx>=0.28.1",
]


[project.optional-dependencies]
docs = ["mkdocs", "mkdocs-material"]
dev = [
    "black>=25.1.0",
    "build>=1.2.2.post1",
    "flake8>=7.2.0",
    "isort>=6.0.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-django>=4.11.1",
    "twine>=6.1.0",
]

[tool.mkdcos-gh-deploy]
remote = "origin"
branch = "gh-pages"

[tool.setuptools]
packages = { find = { where = ["src"] } }

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.2.0",
]
