[project]
name = "monkeybox"
version = "0.1.0"
description = "A minimal, observable agent framework for building AI agents with OpenAI and Anthropic"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Oliver Chen", email = ""},
]
keywords = [
    "ai",
    "agents",
    "llm",
    "openai",
    "anthropic",
    "claude",
    "gpt",
    "mcp",
    "async",
    "framework",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.39.0",
    "numpydoc>=1.9.0",
    "rich>=14.0.0",
    "pydantic>=2.11.7",
    "mcp>=1.0.0",
    "tenacity>=9.0.0",
    "python-dotenv>=1.1.1",
    "weave>=0.51.59",
]

[project.urls]
Homepage = "https://github.com/Chen-Oliver/monkeybox"
Repository = "https://github.com/Chen-Oliver/monkeybox"
Documentation = "https://github.com/Chen-Oliver/monkeybox/tree/main/docs"
"Bug Tracker" = "https://github.com/Chen-Oliver/monkeybox/issues"

[project.optional-dependencies]
web = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "matplotlib>=3.10.3",
    "mypy>=1.16.1",
    "pandas>=2.3.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.3",
    "ty>=0.0.1a14",
    "types-pyyaml>=6.0.12.20250516",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"**/*docstring*" = ["E501"]  # Ignore line length in docstrings
"**/test_*.py" = ["E501"]    # Ignore line length in test files
"**/tests/*.py" = ["E501"]   # Ignore line length in test files
"examples/*.py" = ["E402"]   # Allow imports after load_dotenv() in examples

[tool.ruff.lint.isort]
known-first-party = ["monkeybox"]
split-on-trailing-comma = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/monkeybox"]
omit = [
    "tests/*",
    "examples/*",
    "src/monkeybox/__pycache__/*",
    "*/__pycache__/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
fail_under = 90

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
