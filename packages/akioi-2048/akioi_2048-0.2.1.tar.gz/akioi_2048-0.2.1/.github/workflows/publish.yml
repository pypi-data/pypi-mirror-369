name: Build wheels & publish (skip 3.13)

on:
 # push:
  #  tags:
     # - "v*"          # 仅版本标签触发
  workflow_dispatch:

permissions:
  contents: read

###############################################################################
# 1) wheel jobs : Linux ×2 | macOS-arm64 ×1 | macOS-x86_64 ×1 | Windows ×1
###############################################################################
jobs:
  # ---------- Linux (x86_64 + aarch64) --------------------------------------
  linux-wheels:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- 缓存 ------------------------------------------------------------
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: linux-cargo-${{ hashFiles('Cargo.lock') }}

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: linux-pip-${{ hashFiles('pyproject.toml') }}

      # ---- Python & Rust ---------------------------------------------------
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install build tools
        run: |
          python -m pip install -U pip
          pip install "cibuildwheel>=2.20" maturin build

      # ---- QEMU：用于交叉到 aarch64 ----------------------------------------
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # ---- 构建 ------------------------------------------------------------
      - name: Build Linux wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp313-*"
          CIBW_BUILD: "*manylinux*"          # 仅 manylinux，避免重复
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_BEFORE_ALL_LINUX: |
            curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: wheelhouse/*.whl

  # ---------- macOS arm64 ----------------------------------------------------
  macos-arm64-wheels:
    runs-on: macos-latest
    env:
      CIBW_ARCHS_MACOS: "arm64"
      CIBW_SKIP: "cp313-*"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: mac-arm-pip-${{ hashFiles('pyproject.toml') }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install -U pip
          pip install "cibuildwheel>=2.20" maturin build

      - name: Build macOS arm64 wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-mac-arm64
          path: wheelhouse/*.whl

  # ---------- macOS x86_64（交叉） ------------------------------------------
  macos-x86-wheels:
    runs-on: macos-latest
    env:
      CIBW_ARCHS_MACOS: "x86_64"
      CIBW_SKIP: "cp313-*"
      CIBW_BEFORE_ALL_MACOS: |
        rustup target add x86_64-apple-darwin
      CIBW_ENVIRONMENT_MACOS: "PATH=$HOME/.cargo/bin:$PATH"
      MACOSX_DEPLOYMENT_TARGET: "10.12"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: mac-x86-pip-${{ hashFiles('pyproject.toml') }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install -U pip
          pip install "cibuildwheel>=2.20" maturin build

      - name: Build macOS x86_64 wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-mac-x86_64
          path: wheelhouse/*.whl


###############################################################################
#  Windows x64  —— 原生                                                     #
###############################################################################
  windows-amd64-wheels:
    runs-on: windows-latest
    env:
      CIBW_ARCHS_WINDOWS: "AMD64"
      CIBW_SKIP: "cp313-*"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: win64-pip-${{ hashFiles('pyproject.toml') }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tools
        run: |
          python -m pip install -U pip
          pip install "cibuildwheel>=2.20" maturin build

      - name: Build Windows x64 wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-win-amd64
          path: wheelhouse\*.whl

###############################################################################
# 2) sdist：只在 Linux 打一次 -------------------------------------------------
###############################################################################
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build sdist
        run: |
          python -m pip install -U build
          python -m build --sdist --outdir dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

###############################################################################
# 3) publish：汇总所有产物 → PyPI --------------------------------------------
###############################################################################
  publish:
    needs:
      - linux-wheels
      - macos-arm64-wheels
      - macos-x86-wheels
      - windows-amd64-wheels
      - sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "*"
          merge-multiple: true   # dist/ 下合并全部轮子 + sdist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: .
          skip-existing: true
