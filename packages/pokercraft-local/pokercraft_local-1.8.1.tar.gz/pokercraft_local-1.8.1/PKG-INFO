Metadata-Version: 2.4
Name: pokercraft-local
Version: 1.8.1
Summary: Local analysis tool for Pokercraft in GGNetwork
Author-email: Minsung Kim <spongbob9876@naver.com>
License: Copyright 2024 McDic
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/McDic/pokercraft-local
Keywords: poker,pokercraft,ggpoker
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Games/Entertainment :: Turn Based Strategy
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Libraries
Classifier: Typing :: Typed
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: plotly
Requires-Dist: statsmodels==0.14.*
Requires-Dist: markdown
Requires-Dist: forex-python==1.8.*
Requires-Dist: requests
Requires-Dist: pokercraft-local-bankroll==0.4.*
Dynamic: license-file

# Pokercraft Local

This is a customized visualization tool using downloaded data from Pokercraft in GGNetwork.

Here is working [demo](https://blog.mcdic.net/assets/raw_html/damavaco_performance.html).

## Dependencies

- Python 3.12 (for libraries, check `requirements.txt`.)

## How to run

### 1. Installation

Clone this git repo and install dependencies with `pip install -r requirements.txt`, optionally on virtual environment.
If you want the library files only, you can download from PyPI. Run `pip install pokercraft-local`.

```bash
pip install -r requirements.txt  # When you cloned the whole repo
pip install pokercraft-local  # When you install library only via pip
```

Or alternatively, you can just download compiled binaries from [Releases page](https://github.com/McDic/pokercraft-local/releases).
This is the best decision when you don't know programming.

### 2. Collect your data files from Pokercraft

Download *"Game summaries"* file by pressing green button on your pokercraft tournament section.
If there are too many tournament records on your account, GGNetwork will prevent you from bulk downloading,
therefore you may have to download separately monthly or weekly records.

![pokercraft_download](./images/pokercraft_download.png)

After you downloaded, just put all `.zip` files in single folder.
The unzipping is not necessary anymore from `v1.7.0`.
The library finds all `GG(blabla).txt` files from both directory and `.zip` files recursively by default.

### 3. Running a program

For GUI, if you successfully run the program, you will be able to view something like following image.

![gui_screen](./images/gui_screen.png)

#### 3A. When you cloned this whole repo

Run `run_cli.py` with some arguments.
Make sure you installed all dependencies before running.

```bash
python run_cli.py --help
```

Or alternatively, you can run `run_gui.py` instead.

```bash
python run_gui.py
```

#### 3B. When you installed libraries via `pip`

Run following Python code to start GUI, and you are good to go.

```python
from pokercraft_local.gui import PokerCraftLocalGUI

if __name__ == "__main__":
    PokerCraftLocalGUI().run_gui()
```

To do something programatic, check `run_cli.py` for example references.

#### 3C. When you directly downloaded releases

Execute `run_gui-(YOUR_OS)/run_gui/run_gui.exe` from downloaded zip file on your local machine.

### 4. Check results

Go to your output folder and open generated `.html` file.
Note that plotly javascripts are included by CDN, so you need working internet connection to properly view it.

## Features

Each plots are now providing documentations in `.html`,
so please read when you generated a file.
There are following sections;

1. Historical Performances
2. RRE Heatmaps
3. Bankroll Analysis with Monte-Carlo simulation
4. Your Prizes
5. RR by Rank Percentiles
