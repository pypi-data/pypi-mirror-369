"use strict";(self.webpackChunkopensarlab_frontend=self.webpackChunkopensarlab_frontend||[]).push([[754],{754:(e,t,n)=>{n.r(t),n.d(t,{default:()=>g});var o=n(296),a=n(697),s=n(386),i=n(263),l=n(973);async function r(e="",t={}){const n=l.ServerConnection.makeSettings(),o=i.URLExt.join(n.baseUrl,"opensarlab-frontend",e);let a;try{a=await l.ServerConnection.makeRequest(o,t,n)}catch(e){throw new l.ServerConnection.NetworkError(e)}let s=await a.text();if(s.length>0)try{s=JSON.parse(s)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new l.ServerConnection.ResponseError(a,s.message||s);return s}var d=n(882);class c extends d.Widget{constructor(){super(),this.hyperlink=document.createElement("a"),this.hyperlink.text="OpenSARlab Docs",this.hyperlink.href="https://opensarlab-docs.asf.alaska.edu",this.hyperlink.target="blank",this.addClass("opensarlab-doc-link-widget"),this.addClass("opensarlab-frontend-object"),this.node.appendChild(this.hyperlink)}}class p extends d.Widget{constructor(){super(),this.span=document.createElement("span"),this.addClass("opensarlab-profile-label-widget"),this.addClass("opensarlab-frontend-object"),this.node.appendChild(this.span)}}var b=n(51),h=n.n(b);class f extends d.Widget{constructor(){super(),this.toastrLink=document.createElement("link"),this.toastrLink.rel="stylesheet",this.toastrLink.href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css",this.node.appendChild(this.toastrLink),document.head.insertAdjacentHTML("beforeend","<style>#toast-container>div{opacity:1;}</style>")}makeToast(e){h().options=e.options,e.data.forEach((e=>{h()[e.type](e.message,e.title)}))}notifications(e){r(`opensarlab-oslnotify?type=${e}`).then((e=>{this.makeToast(e)})).catch((e=>{console.log(`Error on GET /opensarlab-frontend/opensarlab-oslnotify.\n${e}`)}))}}class u extends d.Widget{constructor(e){super(),this.btyes_to_mb=1/1048576,this.outerDiv=document.createElement("div"),this.innerDiv=document.createElement("div"),this.outerDiv.className="diskspace",this.innerDiv.className="diskspace-tooltip-text",this.setIntervalKeeper=0,this.diskSpaceInterval=5e3,this.addClass("opensarlab-frontend-object"),this.node.appendChild(this.outerDiv),this.checkDiskSpaceInterval(e),this.setIntervalKeeper=window.setInterval(this.checkDiskSpaceInterval.bind(this),this.diskSpaceInterval,e)}removeSetInterval(){window.clearInterval(this.setIntervalKeeper)}async checkDiskSpaceInterval(e){const t=e.setCriticalThreshold,n=e.setDangerThreshold,o=e.setWarningThreshold,a=e.diskSpacePath;let s=await r(`opensarlab-diskspace?path=${a}`);if(!s)return void console.warn(`No diskspace data returned by API call for path ${a}.`);s=s.data;const i=s.total||null,l=s.used||null,d=s.free||null,c=l/i*100;let p="",b="";c>=t?(p="red",b="blink-me"):c>=n?p="red":c>=o&&(p="yellow"),this.outerDiv.innerHTML=`\n      <span class="${b} ${p}">\n        Disk space used: ${c.toFixed(2).toString()}%\n      </span>\n    `,this.innerDiv.innerHTML=`\n      <div> Free MB: ${(d/this.btyes_to_mb).toFixed(2)} </div>\n      <div> Used MB: ${(l/this.btyes_to_mb).toFixed(2)} </div>\n      <div> Total MB: ${(i/this.btyes_to_mb).toFixed(2)} </div>\n    `}}const v={id:"opensarlab_frontend:plugin",description:"A JupyterLab extension.",autoStart:!0,optional:[o.ISettingRegistry],activate:(e,t)=>{t?Promise.all([e.restored,t.load(v.id)]).then((([,t])=>{async function n(t){await async function(e,t){var n;const o=null!==(n=t.get("gifcap_btn").composite)&&void 0!==n?n:t.default("gifcap_btn"),i=o.enabled,l=o.rank,r="opensarlab-frontend-gitcap-btn",d=(0,a.find)(e.shell.widgets("top"),(e=>e.id===r));if(d&&d.dispose(),!i)return void console.log("JupyterLab extension opensarlab-frontend:gifcap_btn is not activated!");const c=new s.ToolbarButton({className:"opensarlab-gitcap-btn",label:"GIF Capture",onClick:()=>{window.open("https://gifcap.dev","_blank")},tooltip:"Create and download screen capture GIFs"});c.id=r,c.addClass("opensarlab-frontend-object"),e.shell.add(c,"top",{rank:l}),console.log("JupyterLab extension opensarlab-frontend:gifcap_btn is activated!")}(e,t),await async function(e,t){var n;const o=null!==(n=t.get("profile_label").composite)&&void 0!==n?n:t.default("profile_label"),s=o.enabled,i=o.rank,l="opensarlab-profile-label-widget",d=(0,a.find)(e.shell.widgets("top"),(e=>e.id===l));if(d&&d.dispose(),s)try{const t=await r("opensarlab-profile-label"),n=new p;n.id=l,n.span.innerText=t.data,e.shell.add(n,"top",{rank:i}),console.log("JupyterLab extension opensarlab-frontend:profile_label is activated!")}catch(e){console.error(`Error on GET /opensarlab-frontend/opensarlab-profile-label.\n${e}`)}else console.log("JupyterLab extension opensarlab-frontend:profile_label is not activated!")}(e,t),await async function(e,t){var n;const o=null!==(n=t.get("doc_link").composite)&&void 0!==n?n:t.default("doc_link"),s=o.enabled,i=o.rank,l="opensarlab-doc-link-widget",r=(0,a.find)(e.shell.widgets("top"),(e=>e.id===l));if(r&&r.dispose(),!s)return void console.log("JupyterLab extension opensarlab-frontend:doc_link is not activated!");const d=new c;d.id=l,e.shell.add(d,"top",{rank:i}),console.log("JupyterLab extension opensarlab-frontend:doc_link is activated!")}(e,t),await async function(e,t){var n;const o=null!==(n=t.get("controlbtn").composite)&&void 0!==n?n:t.default("controlbtn"),i=o.enabled,l=o.rank,d="opensarlab-controlbtn",c=(0,a.find)(e.shell.widgets("top"),(e=>e.id===d));if(c&&c.dispose(),i)try{const t=await r("opensarlab-controlbtn"),n=new s.ToolbarButton({className:"opensarlab-controlbtn",label:"Shutdown and Logout Page",onClick:()=>{window.location.href=t.data},tooltip:"Hub Control Panel: A place to stop the server and logout"});n.id=d,n.addClass("opensarlab-frontend-object"),e.shell.add(n,"top",{rank:l}),console.log("JupyterLab extension opensarlab-frontend:controlbtn is activated!")}catch(e){console.error(`Error on GET /opensarlab-frontend/opensarlab-controlbtn.\n${e}`)}else console.log("JupyterLab extension opensarlab-frontend:controlbtn is not activated!")}(e,t),await async function(e,t){var n;const o=null!==(n=t.get("oslnotify").composite)&&void 0!==n?n:t.default("oslnotify"),s=o.enabled,i=o.note_type,l="opensarlab-notify-widget",r=(0,a.find)(e.shell.widgets("top"),(e=>e.id===l));if(r&&r.dispose(),!s)return void console.log("JupyterLab extension opensarlab-frontend:oslnotify is not activated!");const d=new f;d.id=l,d.notifications(i),e.shell.add(d,"top",{rank:1999}),console.log("JupyterLab extension opensarlab-frontend:oslnotify is activated!")}(e,t),await async function(e,t){var n;const o=null!==(n=t.get("diskspace").composite)&&void 0!==n?n:t.default("diskspace"),s=o.enabled,i=o.rank,l="opensarlab-diskspace-widget",r=(0,a.find)(e.shell.widgets("top"),(e=>e.id===l));if(r&&(r.removeSetInterval(),r.dispose()),s)try{const t=new u(o);t.id=l,e.shell.add(t,"top",{rank:i}),console.log("JupyterLab extension opensarlab-frontend:diskspace is activated!")}catch(e){console.error(`Error on GET /opensarlab-frontend/opensarlab-diskspace.\n${e}`)}else console.log("JupyterLab extension opensarlab-frontend:diskspace is not activated!")}(e,t)}n(t),t.changed.connect(n),console.log("JupyterLab extension opensarlab_frontend is fully operational!")})).catch((e=>{console.error(`Something went wrong...${e}`)})):console.log("Settings not found. opensarlab_frontend cannot be established.")}},g=v}}]);