name: release
on:
  workflow_dispatch:
  push:
    branches:
      - "releases/**"
    tags:
      - "v*"
jobs:
  basic-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e '.[dev]'
    - name: Run tests
      run: |
        python -m pytest
    - name: Test if README results are up to date
      run: |
        for dataset in blender mipnerf360; do
          results=$(python -m nerfbaselines render-dataset-results --dataset $dataset --method-links results) python -c "import os;assert os.environ['results'] in open('README.md').read(), 'README.md is out of date. Please run \'python -m nerfbaselines render-dataset-results --dataset $dataset --method-links results\' and add the output to README.md file'"
        done

  build-base-docker-image:
    needs: basic-tests
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Free root space
        uses: almahmoud/free-root-space@main
        with:
          remove-gcc: false
          remove-cplusplus: false
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install nerfbaselines
        run: |
          pip install --upgrade pip
          pip install -e '.[dev]'
      - name: Build image
        run: |
          nerfbaselines build-docker-image --push --skip-if-exists-remotely --tag-latest

  run-tests:
    needs: 
      - basic-tests
      - build-base-docker-image
    uses: ./.github/workflows/run-tests-slow.yml
    with:
      run-all: true
  release:
    needs: 
      - run-tests
      - build-base-docker-image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e '.[dev]'
    - name: Run tests
      run: |
        python -m pytest
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine upload dist/*
