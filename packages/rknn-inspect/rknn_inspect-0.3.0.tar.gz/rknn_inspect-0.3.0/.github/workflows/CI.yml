name: CI

on:
    push:
        branches:
            - main
        tags:
            - "*"
    pull_request:
    workflow_dispatch:

permissions:
    contents: read

jobs:
    linux:
        runs-on: ${{ matrix.platform.runner }}
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: aarch64

        steps:
            - uses: actions/checkout@v4
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: auto
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-linux-${{ matrix.platform.target }}
                  path: dist

    musllinux:
        runs-on: ${{ matrix.platform.runner }}
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: aarch64

        steps:
            - uses: actions/checkout@v4
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: musllinux_1_2
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-musllinux-${{ matrix.platform.target }}
                  path: dist

    sdist:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Build sdist
              uses: PyO3/maturin-action@v1
              with:
                  command: sdist
                  args: --out dist
            - name: Upload sdist
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-sdist
                  path: dist

    release:
        name: Release
        runs-on: ubuntu-latest
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
        needs: [linux, musllinux, sdist]
        permissions:
            # Use to sign the release artifacts
            id-token: write
            # Used to upload release artifacts
            contents: write
            # Used to generate artifact attestation
            attestations: write
        steps:
            - uses: actions/download-artifact@v4
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: "wheels-*/*"
            - name: Publish to PyPI
              if: ${{ startsWith(github.ref, 'refs/tags/') }}
              uses: PyO3/maturin-action@v1
              env:
                  MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              with:
                  command: upload
                  args: --non-interactive --skip-existing wheels-*/*
