[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kicad-circuit-analysis"
version = "0.0.1"
description = "Professional Circuit Quality Assurance and FMEA Analysis for KiCAD"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Circuit-Synth Team", email = "contact@circuit-synth.com" }
]
keywords = [
    "kicad",
    "circuit-analysis", 
    "fmea",
    "quality-assurance",
    "electronics",
    "eda",
    "ai-analysis",
    "risk-assessment"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "kicad-sch-api>=0.0.1",
    "kicad-pcb-api>=0.0.1",
    "loguru>=0.7.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]
mcp = [
    "mcp>=1.0.0",
]
ai = [
    "openai>=1.0.0",
    "anthropic>=0.8.0",
]
reporting = [
    "matplotlib>=3.7.0",
    "reportlab>=4.0.0",
    "openpyxl>=3.1.0",
]

[project.urls]
Homepage = "https://github.com/circuit-synth/kicad-circuit-analysis"
Documentation = "https://kicad-circuit-analysis.readthedocs.io"
Repository = "https://github.com/circuit-synth/kicad-circuit-analysis"
Issues = "https://github.com/circuit-synth/kicad-circuit-analysis/issues"

[project.scripts]
kicad-fmea = "kicad_circuit_analysis.cli:main_fmea"
kicad-qa = "kicad_circuit_analysis.cli:main_qa"
kicad-analysis-mcp = "kicad_circuit_analysis.mcp.server:main"

[tool.hatch.build.targets.wheel]
packages = ["python/kicad_circuit_analysis"]

[tool.hatch.build.targets.sdist]
include = [
    "python/kicad_circuit_analysis",
    "README.md",
    "LICENSE",
]

[tool.pytest.ini_options]
testpaths = ["python/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "W", "B", "I", "N", "UP", "ANN", "S", "BLE", "FBT", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files
"tests/**" = ["S101"]  # Allow assert statements in tests

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ['py310']

[dependency-groups]
dev = [
    "build>=1.3.0",
    "twine>=6.1.0",
]
