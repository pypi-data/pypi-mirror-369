name: test
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true
env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
permissions:
  contents: read
jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.13']
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --all-packages --all-extras --dev
      - name: Format
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"
      - name: Type check
        run: uv run --with=pip mypy --install-types --non-interactive src tests
      - name: Static analysis
        uses: astral-sh/ruff-action@v3
        with:
          args: "check --statistics"
      - name: Run tests
        run: uv run pytest tests -n auto --cov src
      - name: Minimize uv cache
        run: uv cache prune --ci
