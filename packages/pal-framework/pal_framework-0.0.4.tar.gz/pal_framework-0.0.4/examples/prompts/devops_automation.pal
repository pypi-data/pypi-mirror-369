pal_version: "1.0"
id: "devops-automation-engineer"
version: "1.0.0"
description: "DevOps engineer specializing in infrastructure automation and CI/CD"
author: "PAL Team"

imports:
  personas: "../libraries/personas.pal.lib"
  tasks: "../libraries/tasks.pal.lib"
  context: "../libraries/context.pal.lib"
  reasoning: "../libraries/reasoning_strategies.pal.lib"
  formats: "../libraries/output_formats.pal.lib"
  rules: "../libraries/rules.pal.lib"
  notes: "../libraries/notes.pal.lib"

variables:
  - name: "infrastructure_goal"
    type: "string"
    description: "Primary infrastructure or automation objective"
  - name: "current_setup"
    type: "string"
    description: "Current infrastructure and deployment setup"
  - name: "technology_stack"
    type: "list"
    description: "Technologies, languages, and frameworks in use"
  - name: "cloud_platform"
    type: "string"
    description: "Target cloud platform (AWS, GCP, Azure, etc.)"
    required: false
  - name: "compliance_requirements"
    type: "list"
    description: "Security and compliance requirements"
    required: false
    default: []
  - name: "scale_requirements"
    type: "string"
    description: "Expected traffic, users, and scaling needs"
    required: false

composition:
  - "{{ personas.devops_engineer }}"
  - ""
  - "{{ context.enterprise_software }}"
  - ""
  - "## DevOps Automation Project"
  - "Design and implement infrastructure automation for:"
  - ""
  - "**Objective:** {{ infrastructure_goal }}"
  - ""
  - "**Current Setup:** {{ current_setup }}"
  - ""
  - "**Technology Stack:**"
  - "{% for tech in technology_stack %}"
  - "- {{ tech }}"
  - "{% endfor %}"
  - ""
  - "{% if cloud_platform %}"
  - "**Target Platform:** {{ cloud_platform }}"
  - ""
  - "{% endif %}"
  - "{% if compliance_requirements %}"
  - "**Compliance Requirements:**"
  - "{% for req in compliance_requirements %}"
  - "- {{ req }}"
  - "{% endfor %}"
  - ""
  - "{% endif %}"
  - "{% if scale_requirements %}"
  - "**Scale Requirements:** {{ scale_requirements }}"
  - ""
  - "{% endif %}"
  - "## Implementation Strategy"
  - "{{ reasoning.first_principles }}"
  - ""
  - "Break down the automation into fundamental components and build up systematically."
  - ""
  - "## Code Quality Standards"
  - "{{ rules.code_quality_standards }}"
  - ""
  - "Apply these standards to all Infrastructure as Code and automation scripts."
  - ""
  - "## Security Considerations"
  - "{{ notes.security_reminder }}"
  - ""
  - "{{ rules.privacy_protection }}"
  - ""
  - "## Performance & Reliability"
  - "{{ notes.performance_warning }}"
  - ""
  - "{{ notes.scalability_consideration }}"
  - ""
  - "## Deployment Safety"
  - "{{ notes.deployment_caution }}"
  - ""
  - "## Dependency Management"
  - "{{ notes.third_party_dependency_warning }}"
  - ""
  - "## Infrastructure Design Principles"
  - "Follow these DevOps best practices:"
  - ""
  - "### 1. Infrastructure as Code (IaC)"
  - "- Version control all infrastructure definitions"
  - "- Use declarative configuration management"
  - "- Implement proper state management"
  - "- Enable infrastructure drift detection"
  - ""
  - "### 2. CI/CD Pipeline Design"
  - "- Automated testing at every stage"
  - "- Progressive deployment strategies"
  - "- Rollback mechanisms and canary releases"
  - "- Environment parity and promotion"
  - ""
  - "### 3. Monitoring & Observability"
  - "- Comprehensive logging strategy"
  - "- Metrics collection and alerting"
  - "- Distributed tracing capabilities"
  - "- Health checks and uptime monitoring"
  - ""
  - "### 4. Security Integration"
  - "- Secrets management and rotation"
  - "- Container and image scanning"
  - "- Network security and segmentation"
  - "- Compliance automation and auditing"
  - ""
  - "### 5. Disaster Recovery"
  - "- Automated backup and restore procedures"
  - "- Multi-region deployment strategies"
  - "- RTO/RPO requirements planning"
  - "- Chaos engineering and resilience testing"
  - ""
  - "## Output Requirements"
  - "{{ formats.step_by_step }}"
  - ""
  - "Provide a complete implementation plan including:"
  - ""
  - "**1. Architecture Overview**"
  - "- High-level system architecture diagram"
  - "- Component interactions and data flow"
  - "- Security boundaries and access controls"
  - ""
  - "**2. Infrastructure Code**"
  - "- Complete Infrastructure as Code templates"
  - "- Configuration management scripts"
  - "- Environment-specific variable files"
  - ""
  - "**3. CI/CD Pipeline Configuration**"
  - "- Pipeline definition files (GitHub Actions, GitLab CI, etc.)"
  - "- Build, test, and deployment stages"
  - "- Environment promotion workflows"
  - ""
  - "**4. Monitoring Setup**"
  - "- Monitoring and alerting configuration"
  - "- Dashboard definitions and queries"
  - "- Log aggregation and analysis setup"
  - ""
  - "**5. Security Configuration**"
  - "- Security scanning and compliance checks"
  - "- Secrets management integration"
  - "- Access control and identity management"
  - ""
  - "**6. Documentation**"
  - "- Deployment and maintenance procedures"
  - "- Troubleshooting and incident response guides"
  - "- Architecture decision records (ADRs)"
  - ""
  - "**7. Testing Strategy**"
  - "- Infrastructure testing approach"
  - "- Automated validation and smoke tests"
  - "- Disaster recovery testing procedures"