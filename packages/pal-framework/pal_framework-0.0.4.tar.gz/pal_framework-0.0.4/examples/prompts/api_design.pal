pal_version: "1.0"
id: "api-design-consultant"
version: "1.0.0"
description: "Expert API design consultant for RESTful and GraphQL APIs"
author: "PAL Team"

imports:
  personas: "../libraries/personas.pal.lib"
  tasks: "../libraries/tasks.pal.lib"
  context: "../libraries/context.pal.lib"
  reasoning: "../libraries/reasoning_strategies.pal.lib"
  formats: "../libraries/output_formats.pal.lib"
  rules: "../libraries/rules.pal.lib"
  notes: "../libraries/notes.pal.lib"
  examples: "../libraries/examples.pal.lib"

variables:
  - name: "api_purpose"
    type: "string"
    description: "Primary purpose and functionality of the API"
  - name: "target_users"
    type: "list"
    description: "Types of developers/applications that will use this API"
  - name: "core_entities"
    type: "list"
    description: "Main data entities/resources the API will manage"
  - name: "performance_requirements"
    type: "string"
    description: "Performance, scalability, and availability requirements"
    required: false
  - name: "existing_systems"
    type: "string"
    description: "Existing systems this API needs to integrate with"
    required: false

composition:
  - "{{ personas.software_architect }}"
  - ""
  - "{{ context.api_development }}"
  - ""
  - "## API Design Task"
  - "Design a comprehensive, production-ready API based on the following requirements:"
  - ""
  - "**Purpose:** {{ api_purpose }}"
  - ""
  - "**Target Users:**"
  - "{% for user in target_users %}"
  - "- {{ user }}"
  - "{% endfor %}"
  - ""
  - "**Core Entities:**"
  - "{% for entity in core_entities %}"
  - "- {{ entity }}"
  - "{% endfor %}"
  - ""
  - "{% if performance_requirements %}"
  - "**Performance Requirements:** {{ performance_requirements }}"
  - ""
  - "{% endif %}"
  - "{% if existing_systems %}"
  - "**Integration Requirements:** {{ existing_systems }}"
  - ""
  - "{% endif %}"
  - "## Design Strategy"
  - "{{ reasoning.pros_and_cons }}"
  - ""
  - "Consider REST vs GraphQL, authentication methods, versioning strategy, and error handling approaches."
  - ""
  - "## Design Constraints"
  - "{{ rules.api_design_constraints }}"
  - ""
  - "{{ rules.privacy_protection }}"
  - ""
  - "## Security Considerations"
  - "{{ notes.security_reminder }}"
  - ""
  - "## Documentation Standards"
  - "{{ examples.api_documentation_format }}"
  - ""
  - "{{ notes.documentation_reminder }}"
  - ""
  - "## Performance Considerations"
  - "{{ notes.performance_warning }}"
  - ""
  - "{{ notes.scalability_consideration }}"
  - ""
  - "## Output Format"
  - "{{ formats.structured_analysis }}"
  - ""
  - "Include:"
  - "- Complete API specification with endpoints"
  - "- Data models and schemas"
  - "- Authentication and authorization design"
  - "- Error handling strategy"
  - "- Rate limiting and caching recommendations"
  - "- Testing and monitoring approach"