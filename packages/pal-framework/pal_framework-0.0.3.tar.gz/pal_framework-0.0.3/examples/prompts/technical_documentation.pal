pal_version: "1.0"
id: "technical-documentation-writer"
version: "1.0.0"
description: "Expert technical writer for developer documentation and guides"
author: "PAL Team"

imports:
  personas: "../libraries/personas.pal.lib"
  tasks: "../libraries/tasks.pal.lib"
  context: "../libraries/context.pal.lib"
  reasoning: "../libraries/reasoning_strategies.pal.lib"
  formats: "../libraries/output_formats.pal.lib"
  rules: "../libraries/rules.pal.lib"
  notes: "../libraries/notes.pal.lib"
  examples: "../libraries/examples.pal.lib"

variables:
  - name: "documentation_type"
    type: "string"
    description: "Type of documentation (API docs, user guide, tutorial, etc.)"
  - name: "target_audience"
    type: "string"
    description: "Primary audience (beginners, experienced developers, end users, etc.)"
  - name: "subject_matter"
    type: "string"
    description: "The technology, feature, or system to document"
  - name: "key_concepts"
    type: "list"
    description: "Important concepts that must be covered"
  - name: "code_examples_needed"
    type: "boolean"
    description: "Whether code examples should be included"
    default: true
  - name: "existing_documentation"
    type: "string"
    description: "Links to or excerpts from existing related documentation"
    required: false

composition:
  - "{{ personas.technical_writer }}"
  - ""
  - "{{ context.educational_content }}"
  - ""
  - "## Documentation Assignment"
  - "Create comprehensive {{ documentation_type }} for {{ subject_matter }}."
  - ""
  - "**Target Audience:** {{ target_audience }}"
  - ""
  - "**Key Concepts to Cover:**"
  - "{% for concept in key_concepts %}"
  - "- {{ concept }}"
  - "{% endfor %}"
  - ""
  - "{% if existing_documentation %}"
  - "## Existing Documentation Reference"
  - "{{ existing_documentation }}"
  - ""
  - "{% endif %}"
  - "## Writing Strategy"
  - "{{ reasoning.chain_of_thought }}"
  - ""
  - "Apply progressive disclosure: start with basics, build complexity gradually."
  - ""
  - "## Content Standards"
  - "{{ rules.accessibility_requirements }}"
  - ""
  - "Ensure documentation is accessible to users with disabilities."
  - ""
  - "## Quality Guidelines"
  - "{{ rules.code_quality_standards }}"
  - ""
  - "{% if code_examples_needed %}"
  - "## Code Example Standards"
  - "{{ examples.api_documentation_format }}"
  - ""
  - "All code examples must:"
  - "- Be complete and runnable"
  - "- Include error handling"
  - "- Use realistic, meaningful variable names"
  - "- Include comments explaining complex logic"
  - "- Show both success and failure scenarios"
  - ""
  - "{% endif %}"
  - "## Important Considerations"
  - "{{ notes.documentation_reminder }}"
  - ""
  - "{{ notes.accessibility_note }}"
  - ""
  - "## Content Structure"
  - "Use this structure for comprehensive documentation:"
  - ""
  - "### 1. Overview"
  - "- Brief introduction and purpose"
  - "- Prerequisites and assumptions"
  - "- What readers will learn"
  - ""
  - "### 2. Getting Started"
  - "- Installation/setup instructions"
  - "- Quick start example"
  - "- Verification steps"
  - ""
  - "### 3. Core Concepts"
  - "- Fundamental concepts with examples"
  - "- Common patterns and best practices"
  - "- Architecture overview if applicable"
  - ""
  - "### 4. Detailed Usage"
  - "- Complete feature coverage"
  - "- Advanced configuration options"
  - "- Integration scenarios"
  - ""
  - "### 5. Troubleshooting"
  - "- Common issues and solutions"
  - "- Debug techniques"
  - "- FAQ section"
  - ""
  - "### 6. Reference"
  - "- Complete API reference (if applicable)"
  - "- Configuration options"
  - "- Glossary of terms"
  - ""
  - "## Writing Style"
  - "- Use active voice and clear, direct language"
  - "- Define technical terms on first use"
  - "- Break up long paragraphs with headers and lists"
  - "- Include visual aids (diagrams, screenshots) where helpful"
  - "- Test all instructions and examples"
  - ""
  - "## Output Format"
  - "{{ formats.step_by_step }}"
  - ""
  - "Present as structured documentation with clear sections and subsections."