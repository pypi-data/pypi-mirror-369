[project]
name = "shephex"
dynamic = ["version"]  # version comes from Git tags via hatch-vcs
description = "Computational experiment manager. Execute parameterized Python function on Slurm directly from a python script"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "rich>=13.7.1",
    "click>=8.2.0",
    "dill>=0.3.8",
    "rich-click>=1.8.9",
    "shortuuid>=1.0.13",
    "numpy<2",
    "littletable>=3.0.0",
]

[project.scripts]
hex = "shephex.cli.main:cli"

[build-system]
requires = ["hatchling", "hatch-vcs"]  # plugin that reads version from VCS tags
build-backend = "hatchling.build"

# Hatch: read version from Git tags like v0.3.1
[tool.hatch.version]
source = "vcs"
tag-pattern = "^v(?P<version>.+)$"

# Ensure wheels pick up your src/ layout explicitly
[tool.hatch.build.targets.wheel]
packages = ["src/shephex"]
sources = ["src"]

# (Optional but often useful) keep sdists tidy & reproducible
[tool.hatch.build.targets.sdist]
include = [
  "src/shephex",
  "README.md",
  "pyproject.toml",
  "LICENSE*",
]

[tool.ruff]
line-length = 88

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = ["F","E4","E7","E9", # Defaults
            "ANN001","ANN204","ANN201", # Type annotations
            "I001","I002", # Imports
            "N", # Naming
            "ERA001", # Eradicate / Commented out code.
            "A" # Shadowing of builtins.
            ]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.1",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.5",
    "pytest-mock>=3.14.0",
    "mkdocs>=1.6.1",
    "pymdown-extensions>=10.14.3",
    "mkdocstrings-python>=1.15.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-autoapi>=0.4.0",
    "mkdocs-material>=9.6.4",
]

[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = [
  "--cov-report", "term",
  "--cov-report", "html:.coverage-html",
  "--cov-report", "xml:.coverage.xml",
  "--junitxml", ".report.xml",
  "--cov", "src/shephex"
]

[tool.coverage.run]
omit = []
