# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_ansible.models.paginated_collection_response_list import PaginatedCollectionResponseList

class TestPaginatedCollectionResponseList(unittest.TestCase):
    """PaginatedCollectionResponseList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedCollectionResponseList:
        """Test PaginatedCollectionResponseList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedCollectionResponseList`
        """
        model = PaginatedCollectionResponseList()
        if include_optional:
            return PaginatedCollectionResponseList(
                meta = pulpcore.client.pulp_ansible.models.paginated_collection_response_list_meta.PaginatedCollectionResponseList_meta(
                    count = 123, ),
                links = pulpcore.client.pulp_ansible.models.paginated_collection_response_list_links.PaginatedCollectionResponseList_links(
                    first = '', 
                    previous = '', 
                    next = '', 
                    last = '', ),
                data = [
                    pulpcore.client.pulp_ansible.models.collection_response.CollectionResponse(
                        href = '', 
                        namespace = '', 
                        name = '', 
                        deprecated = True, 
                        versions_url = '', 
                        highest_version = pulpcore.client.pulp_ansible.models.highest_version.highest_version(), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        download_count = 56, )
                    ]
            )
        else:
            return PaginatedCollectionResponseList(
        )
        """

    def testPaginatedCollectionResponseList(self):
        """Test PaginatedCollectionResponseList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
