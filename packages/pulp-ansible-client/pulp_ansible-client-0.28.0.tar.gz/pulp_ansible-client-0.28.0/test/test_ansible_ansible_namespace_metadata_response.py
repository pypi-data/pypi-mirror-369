# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_ansible.models.ansible_ansible_namespace_metadata_response import AnsibleAnsibleNamespaceMetadataResponse

class TestAnsibleAnsibleNamespaceMetadataResponse(unittest.TestCase):
    """AnsibleAnsibleNamespaceMetadataResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnsibleAnsibleNamespaceMetadataResponse:
        """Test AnsibleAnsibleNamespaceMetadataResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnsibleAnsibleNamespaceMetadataResponse`
        """
        model = AnsibleAnsibleNamespaceMetadataResponse()
        if include_optional:
            return AnsibleAnsibleNamespaceMetadataResponse(
                pulp_href = '',
                name = 'jUtgswwmejtcmosllnyulewqtzioitixmooyscslvdntrddzxydswqltrttwkqzbunjxbelktnh7nzn3yp7d8tmo8zxed012',
                company = '',
                email = '',
                description = '',
                resources = '',
                links = [
                    pulpcore.client.pulp_ansible.models.namespace_link_response.NamespaceLinkResponse(
                        url = '', 
                        name = '', )
                    ],
                avatar_sha256 = '',
                avatar_url = '',
                metadata_sha256 = ''
            )
        else:
            return AnsibleAnsibleNamespaceMetadataResponse(
                name = 'jUtgswwmejtcmosllnyulewqtzioitixmooyscslvdntrddzxydswqltrttwkqzbunjxbelktnh7nzn3yp7d8tmo8zxed012',
        )
        """

    def testAnsibleAnsibleNamespaceMetadataResponse(self):
        """Test AnsibleAnsibleNamespaceMetadataResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
