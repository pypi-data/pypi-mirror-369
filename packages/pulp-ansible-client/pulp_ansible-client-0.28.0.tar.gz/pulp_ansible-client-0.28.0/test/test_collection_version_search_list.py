# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_ansible.models.collection_version_search_list import CollectionVersionSearchList

class TestCollectionVersionSearchList(unittest.TestCase):
    """CollectionVersionSearchList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionVersionSearchList:
        """Test CollectionVersionSearchList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionVersionSearchList`
        """
        model = CollectionVersionSearchList()
        if include_optional:
            return CollectionVersionSearchList(
                repository = pulpcore.client.pulp_ansible.models.repository.Repository(
                    pulp_labels = {
                        'key' : ''
                        }, 
                    name = '0', 
                    description = '0', 
                    retain_repo_versions = 56, 
                    remote = '', ),
                namespace_metadata = pulpcore.client.pulp_ansible.models.ansible/ansible_namespace_metadata.ansible.AnsibleNamespaceMetadata(
                    name = 'jUtgswwmejtcmosllnyulewqtzioitixmooyscslvdntrddzxydswqltrttwkqzbunjxbelktnh7nzn3yp7d8tmo8zxed012', 
                    company = '', 
                    email = '', 
                    description = '', 
                    resources = '', 
                    links = [
                        pulpcore.client.pulp_ansible.models.namespace_link.NamespaceLink(
                            url = '0', 
                            name = '0', )
                        ], 
                    avatar = bytes(b'blah'), ),
                is_highest = True,
                is_deprecated = True,
                is_signed = True
            )
        else:
            return CollectionVersionSearchList(
                repository = pulpcore.client.pulp_ansible.models.repository.Repository(
                    pulp_labels = {
                        'key' : ''
                        }, 
                    name = '0', 
                    description = '0', 
                    retain_repo_versions = 56, 
                    remote = '', ),
                namespace_metadata = pulpcore.client.pulp_ansible.models.ansible/ansible_namespace_metadata.ansible.AnsibleNamespaceMetadata(
                    name = 'jUtgswwmejtcmosllnyulewqtzioitixmooyscslvdntrddzxydswqltrttwkqzbunjxbelktnh7nzn3yp7d8tmo8zxed012', 
                    company = '', 
                    email = '', 
                    description = '', 
                    resources = '', 
                    links = [
                        pulpcore.client.pulp_ansible.models.namespace_link.NamespaceLink(
                            url = '0', 
                            name = '0', )
                        ], 
                    avatar = bytes(b'blah'), ),
                is_highest = True,
                is_deprecated = True,
                is_signed = True,
        )
        """

    def testCollectionVersionSearchList(self):
        """Test CollectionVersionSearchList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
