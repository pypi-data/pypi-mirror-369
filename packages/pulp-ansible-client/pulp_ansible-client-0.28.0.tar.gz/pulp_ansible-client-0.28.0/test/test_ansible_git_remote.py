# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_ansible.models.ansible_git_remote import AnsibleGitRemote

class TestAnsibleGitRemote(unittest.TestCase):
    """AnsibleGitRemote unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnsibleGitRemote:
        """Test AnsibleGitRemote
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnsibleGitRemote`
        """
        model = AnsibleGitRemote()
        if include_optional:
            return AnsibleGitRemote(
                proxy_password = '0',
                tls_validation = True,
                password = '0',
                total_timeout = 0.0,
                download_concurrency = 56,
                username = '0',
                proxy_url = '0',
                client_cert = '0',
                sock_connect_timeout = 0.0,
                headers = [
                    None
                    ],
                max_retries = 56,
                proxy_username = '0',
                rate_limit = 56,
                pulp_labels = {
                    'key' : ''
                    },
                connect_timeout = 0.0,
                client_key = '0',
                sock_read_timeout = 0.0,
                name = '0',
                url = '0',
                ca_cert = '0',
                metadata_only = True,
                git_ref = '0'
            )
        else:
            return AnsibleGitRemote(
                name = '0',
                url = '0',
        )
        """

    def testAnsibleGitRemote(self):
        """Test AnsibleGitRemote"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
