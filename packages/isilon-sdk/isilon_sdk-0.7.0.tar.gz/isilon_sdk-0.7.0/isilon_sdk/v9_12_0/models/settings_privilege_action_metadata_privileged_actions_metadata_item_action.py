# coding: utf-8

"""
    Isilon SDK

    Isilon SDK - Language bindings for the OneFS API  # noqa: E501

    OpenAPI spec version: 23
    Contact: sdk@isilon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'action_metadata': 'SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionActionMetadata',
        'payload_metadata': 'list[SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionPayloadMetadataItem]',
        'request_metadata': 'SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionRequestMetadata',
        'resource_metadata': 'SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionResourceMetadata'
    }

    attribute_map = {
        'action_metadata': 'action_metadata',
        'payload_metadata': 'payload_metadata',
        'request_metadata': 'request_metadata',
        'resource_metadata': 'resource_metadata'
    }

    def __init__(self, action_metadata=None, payload_metadata=None, request_metadata=None, resource_metadata=None):  # noqa: E501
        """SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction - a model defined in Swagger"""  # noqa: E501

        self._action_metadata = None
        self._payload_metadata = None
        self._request_metadata = None
        self._resource_metadata = None
        self.discriminator = None

        if action_metadata is not None:
            self.action_metadata = action_metadata
        if payload_metadata is not None:
            self.payload_metadata = payload_metadata
        if request_metadata is not None:
            self.request_metadata = request_metadata
        if resource_metadata is not None:
            self.resource_metadata = resource_metadata

    @property
    def action_metadata(self):
        """Gets the action_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501

        Metadata for a specific privileged action.  # noqa: E501

        :return: The action_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :rtype: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionActionMetadata
        """
        return self._action_metadata

    @action_metadata.setter
    def action_metadata(self, action_metadata):
        """Sets the action_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.

        Metadata for a specific privileged action.  # noqa: E501

        :param action_metadata: The action_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :type: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionActionMetadata
        """

        self._action_metadata = action_metadata

    @property
    def payload_metadata(self):
        """Gets the payload_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501

        Metadata for privileged action payload.  # noqa: E501

        :return: The payload_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :rtype: list[SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionPayloadMetadataItem]
        """
        return self._payload_metadata

    @payload_metadata.setter
    def payload_metadata(self, payload_metadata):
        """Sets the payload_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.

        Metadata for privileged action payload.  # noqa: E501

        :param payload_metadata: The payload_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :type: list[SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionPayloadMetadataItem]
        """

        self._payload_metadata = payload_metadata

    @property
    def request_metadata(self):
        """Gets the request_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501

          # noqa: E501

        :return: The request_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :rtype: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionRequestMetadata
        """
        return self._request_metadata

    @request_metadata.setter
    def request_metadata(self, request_metadata):
        """Sets the request_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.

          # noqa: E501

        :param request_metadata: The request_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :type: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionRequestMetadata
        """

        self._request_metadata = request_metadata

    @property
    def resource_metadata(self):
        """Gets the resource_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501

        Metadata for privileged action resource.  # noqa: E501

        :return: The resource_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :rtype: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionResourceMetadata
        """
        return self._resource_metadata

    @resource_metadata.setter
    def resource_metadata(self, resource_metadata):
        """Sets the resource_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.

        Metadata for privileged action resource.  # noqa: E501

        :param resource_metadata: The resource_metadata of this SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction.  # noqa: E501
        :type: SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemActionResourceMetadata
        """

        self._resource_metadata = resource_metadata

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SettingsPrivilegeActionMetadataPrivilegedActionsMetadataItemAction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
