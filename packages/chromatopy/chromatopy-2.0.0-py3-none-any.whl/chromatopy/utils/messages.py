def display_introduction_message():    """    Displays the introductory message for using the chromatopy package.            Parameters    ----------    None        Returns    -------    None    """    print(        "Welcome to chromatopy. When prompted, provide a filepath to your data (.csv output from openchrom). "        "Select the peaks of interest from the first sample. Chromatopy will then automatically select peaks in "        "subsequent samples. After each sample, results and figures are saved to a subfolder created in the user-provided "        "data directory. Chromatopy will export a .csv file containing peak areas. To calculate relative abundances and common "        "indices, run chromatopy.assign_indices(). \nFeel free to end an integration session by terminating the kernel as your "        "resutls will not be deleted. You can revisit samples at any time. To redo a sample, delete the row containing the integration "        "data from the results.csv output.\n1. Left click peaks for integration.\n2. 'd' to delete the last peak selected.\n"        "3. 'r' to clear selected peaks from a subplot (navigate subplots using up and down arrow keys). 't' will remove all selected peaks and update the reference peaks used for time alignment. \n4. 'Enter' once peak selection is satisfied.\n"    )    def window_instructions():    """    Prints instructions for the user to input custom time windows for each GDGT (Glycerol Dialkyl Glycerol Tetraether) group.        This function provides the user with guidance on how to enter custom time windows for GDGT groups during the HPLC integration process. It explains that the number of time windows should match the number of selected GDGT groups and gives a reminder of the default time windows for reference.        Parameters    ----------    None        Returns    -------    None        Notes    -----    - This function is purely for user interaction and does not return any values or modify data.    - It is typically called when the user opts to manually define custom time windows for the GDGT analysis.    """    print("\nYou have chosen to provide custom time windows for each GDGT group.")    print("Please provide the time windows (in minutes) for each GDGT group.")    print("The number of windows should match the number of GDGT groups selected.")    print("For reference, the default windows are:")