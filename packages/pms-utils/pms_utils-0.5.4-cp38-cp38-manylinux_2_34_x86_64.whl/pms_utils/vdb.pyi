import os
import pathlib
from typing import Iterator, List, Union

import pms_utils.atom
import pms_utils.depend
import pms_utils.ebuild


class Obj:
    @property
    def path(self) -> pathlib.Path: ...

    @property
    def md5(self) -> str: ...

    @property
    def size(self) -> int: ...

    def __str__(self) -> str: ...

    def __eq__(self, arg: Obj, /) -> bool: ...

    def __ne__(self, arg: Obj, /) -> bool: ...

    def __hash__(self) -> int: ...

class Dir:
    def __str__(self) -> str: ...

    def __iter__(self) -> Iterator[pathlib.Path]: ...

    def __eq__(self, arg: Dir, /) -> bool: ...

    def __ne__(self, arg: Dir, /) -> bool: ...

    def __hash__(self) -> int: ...

class Sym:
    @property
    def src(self) -> pathlib.Path: ...

    @property
    def dest(self) -> pathlib.Path: ...

    @property
    def size(self) -> int: ...

    def __str__(self) -> str: ...

    def __eq__(self, arg: Sym, /) -> bool: ...

    def __ne__(self, arg: Sym, /) -> bool: ...

    def __hash__(self) -> int: ...

class Content:
    @property
    def data(self) -> Union[Obj, Dir, Sym]: ...

    def __str__(self) -> str: ...

    def __eq__(self, arg: Content, /) -> bool: ...

    def __ne__(self, arg: Content, /) -> bool: ...

    def __hash__(self) -> int: ...

class Vdb:
    def __init__(self, arg: Union[str, os.PathLike], /) -> None: ...

    @property
    def path(self) -> pathlib.Path: ...

    def __iter__(self) -> Iterator[Category]: ...

    def __eq__(self, arg: Vdb, /) -> bool: ...

    def __ne__(self, arg: Vdb, /) -> bool: ...

    def __hash__(self) -> int: ...

class Category:
    @property
    def path(self) -> pathlib.Path: ...

    @property
    def category(self) -> pms_utils.atom.Category: ...

    def __iter__(self) -> Iterator[Entry]: ...

    def __eq__(self, arg: Category, /) -> bool: ...

    def __ne__(self, arg: Category, /) -> bool: ...

    def __hash__(self) -> int: ...

class Package:
    @property
    def name(self) -> pms_utils.atom.Name: ...

    @property
    def version(self) -> pms_utils.atom.Version: ...

    def __str__(self) -> str: ...

    def __eq__(self, arg: Package, /) -> bool: ...

    def __ne__(self, arg: Package, /) -> bool: ...

    def __hash__(self) -> int: ...

class Entry:
    @property
    def path(self) -> pathlib.Path: ...

    @property
    def package(self) -> Package: ...

    @property
    def depend(self) -> pms_utils.depend.DependExpr: ...

    @property
    def bdepend(self) -> pms_utils.depend.DependExpr: ...

    @property
    def rdepend(self) -> pms_utils.depend.DependExpr: ...

    @property
    def keywords(self) -> pms_utils.ebuild.keywords: ...

    @property
    def iuse(self) -> pms_utils.ebuild.iuse: ...

    @property
    def use(self) -> List[pms_utils.atom.Useflag]: ...

    @property
    def repository(self) -> str: ...

    @property
    def size(self) -> int: ...

    @property
    def contents(self) -> List[Content]: ...

    def __eq__(self, arg: Entry, /) -> bool: ...

    def __ne__(self, arg: Entry, /) -> bool: ...

    def __hash__(self) -> int: ...
