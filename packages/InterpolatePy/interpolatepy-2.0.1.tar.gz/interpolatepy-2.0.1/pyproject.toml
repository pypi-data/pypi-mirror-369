[build-system]
requires = ["setuptools>=80.9.0", "setuptools-scm>=8.0.0", "wheel>=0.45.0"]
build-backend = "setuptools.build_meta"

[project]
name = "InterpolatePy"
authors = [{ name = "Giorgio Medico", email = "giorgio.medico11@gmail.com" }]
maintainers = [
    { name = "Giorgio Medico", email = "giorgio.medico11@gmail.com" },
]
description = "A comprehensive Python library for generating smooth trajectories and curves with precise control over position, velocity, acceleration, and jerk profiles"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.11"
keywords = [
    "interpolation",
    "trajectory planning",
    "motion profiles",
    "robotics",
    "b-splines",
    "cubic splines",
    "frenet frames",
    "path generation",
    "motion control",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["numpy>=2.3.0", "matplotlib>=3.10.5", "scipy>=1.16.0"]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/GiorgioMedico/InterpolatePy"
"Bug Tracker" = "https://github.com/GiorgioMedico/InterpolatePy/issues"

[project.optional-dependencies]
test = [
    "pytest>=8.4.0",
    "pytest-cov>=4.1.0",
    "codecov>=2.1.13",
    "pytest-benchmark>=4.0.0",
    "pre-commit>=4.2.0",
]
dev = [
    "ruff>=0.12.8",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pyright>=1.1.400",
    "build>=1.0.3",
    "twine>=4.0.2",
]
all = ["interpolatepy[test,dev]"]

[tool.setuptools]
platforms = ["unix", "linux", "osx", "cygwin", "win32"]
packages = ["interpolatepy"]

[tool.setuptools.dynamic]
version = { attr = "interpolatepy.version.__version__" }

[tool.pytest.ini_options]
minversion = "8.4"
testpaths = "tests"

[tool.ruff]
target-version = "py312"
line-length = 120
extend-exclude = ["docs", "test", "tests"]

[tool.ruff.lint]
select = ["F", "E"]
extend-select = [
    "W",
    "C90",
    "I",     # isort rules
    "N",
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "PD",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "PERF",
    "RUF",
]
ignore = [
    "I001",
    "ANN401",
    "SIM300",
    "PERF203",
    "B905",
    "NPY002",
    "COM812",
    "N999",
    "PTH",
    "INP001",
    "TRY003",
    "PLW1641",
    "PLR0914", # Too many local variables
    "PLR0915", # Too many statements
    "PLR0917", # Too many arguments
    "PLR0904", # Too many public methods
    "C901",
    "PLR0912",
]
fixable = [
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    "ANN",
    "ASYNC",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "INP",
    "PIE",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "PD",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "PERF",
    "RUF",
]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = false
lines-after-imports = 2
known-third-party = [
    "numpy",
    "pandas",
    "keras",
    "tensorflow",
    "sklearn",
    "matplotlib",
    "scipy",
    "h5py",
    "seaborn",
    "numba",
    "gym",
    "PyQt5",
    "PyQt6",
    "pyqtgraph",
    "torch",
    "tqdm",
    "cv2",
    "skimage",
    "tensorcross",
    "tensorflow_datasets",
]
split-on-trailing-comma = true
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.mccabe]
max-complexity = 24

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false

# Ruff formatter (replaces black)
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
# Black-compatible settings
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_optional = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_return_any = false
check_untyped_defs = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = true
disallow_untyped_decorators = false
disallow_subclassing_any = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
show_error_context = false
show_column_numbers = false
show_error_codes = true
exclude = ["docs"]

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "basic"
reportDuplicateImport = true
reportInvalidStubStatement = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
reportUnusedImport = true
reportGeneralTypeIssues = true
reportMissingModuleSource = false
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalMemberAccess = true
reportOptionalOperand = true
reportOptionalSubscript = true
reportPrivateImportUsage = true
reportUnboundVariable = true
