---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/forward_reference_in_exception/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import collections.abc
import json
import types
myrequests = types.SimpleNamespace(__name__='myrequests')
myrequests_compat = types.SimpleNamespace(__name__='myrequests.compat')
myrequests.compat = myrequests_compat
MutableMapping_2 = collections.abc.MutableMapping
JSONDecodeError_2 = json.JSONDecodeError
builtin_str = str
def is_str(value):
    """Check if value is a string"""
    return isinstance(value, str)
"""Main package that mimics requests' pattern"""
"""Compatibility module similar to requests.compat"""
compat = myrequests_compat
myrequests_compat.JSONDecodeError = JSONDecodeError_2
myrequests_compat.MutableMapping = MutableMapping_2
myrequests_compat.builtin_str = builtin_str
myrequests_compat.is_str = is_str
JSONDecodeError_1 = compat.JSONDecodeError
MutableMapping_1 = compat.MutableMapping
"""Test case for forward reference to init function"""
myrequests.JSONDecodeError = JSONDecodeError_1
myrequests.MutableMapping = MutableMapping_1
print(f"MutableMapping: {myrequests.MutableMapping}")
print(f"JSONDecodeError: {myrequests.JSONDecodeError}")
print(f"compat.MutableMapping: {myrequests.compat.MutableMapping}")
print(f"compat.JSONDecodeError: {myrequests.compat.JSONDecodeError}")
try:
    d = myrequests.MutableMapping()
except Exception as e:
    print(f"Expected error creating abstract MutableMapping: {type(e).__name__}")
print(f"compat.builtin_str exists: {hasattr(myrequests.compat, 'builtin_str')}")
print(f"compat.is_str exists: {hasattr(myrequests.compat, 'is_str')}")
if hasattr(myrequests.compat, "builtin_str"):
    print(f"compat.builtin_str is str: {myrequests.compat.builtin_str is str}")
if hasattr(myrequests.compat, "is_str"):
    print(f"is_str('test'): {myrequests.compat.is_str('test')}")
    print(f"is_str(123): {myrequests.compat.is_str(123)}")
