---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/forward_reference_attribute_access/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import json
import types
mymodule = types.SimpleNamespace(__name__='mymodule')
mymodule_compat = types.SimpleNamespace(__name__='mymodule.compat')
mymodule.compat = mymodule_compat
mymodule_exceptions = types.SimpleNamespace(__name__='mymodule.exceptions')
mymodule.exceptions = mymodule_exceptions
MyError = None
JSONDecodeError = json.JSONDecodeError
class MyError(Exception):
    """Base error class"""
    pass
MyError.__module__ = 'mymodule.exceptions'
mymodule_compat.JSONDecodeError = JSONDecodeError
mymodule_exceptions.MyError = MyError
CompatJSONDecodeError = JSONDecodeError
class CustomError(MyError, CompatJSONDecodeError):

    def __init__(self, *args):
        CompatJSONDecodeError.__init__(self, *args)
        MyError.__init__(self, str(self.args[0]) if self.args else "")
try:
    raise CustomError("Test error", "doc", 42)
except CustomError as e:
    print(f"Caught CustomError: {e}")
    print("SUCCESS")
