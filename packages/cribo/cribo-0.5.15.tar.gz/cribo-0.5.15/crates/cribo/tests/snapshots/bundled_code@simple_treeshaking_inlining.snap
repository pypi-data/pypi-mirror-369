---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/simple_treeshaking_inlining/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import enum
import typing
ALICE_NAME = "Alice"
class PersonTitle(enum.Enum):
    MR = "Mr."
    MRS = "Mrs."
    MS = "Ms."
    DR = "Dr."
    PROF = "Prof."
class Person:

    def __init__(self, name: str, title: PersonTitle):
        self.name = name
        self.title = title

    def greet(self) -> str:
        return f"{self.title.value} {self.name}"
class Phrase(typing.TypedDict):
    what: str
    whom: Person
def create_ms(name: str) -> Person:
    return Person(name, PersonTitle.MS)
def say(phrase: Phrase) -> str:
    return f"{phrase['what']} {phrase['whom'].greet()}"
PersonTitle.__module__ = 'speaking'
Person.__module__ = 'speaking'
Phrase.__module__ = 'speaking'
def main() -> None:
    print(say({"what": "Hello", "whom": create_ms(ALICE_NAME)}))
if __name__ == "__main__":
    main()
