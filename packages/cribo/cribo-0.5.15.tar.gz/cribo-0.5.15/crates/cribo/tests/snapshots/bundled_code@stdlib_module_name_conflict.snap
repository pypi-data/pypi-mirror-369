---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/stdlib_module_name_conflict/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import abc
import types
mypackage = types.SimpleNamespace(__name__='mypackage')
mypackage_abc = types.SimpleNamespace(__name__='mypackage.abc')
mypackage.abc = mypackage_abc
ABC = abc.ABC
class MyClass(abc.ABC):
    """A class that uses ABC from the stdlib."""

    def get_name(self):
        return "MyClass instance"

    @classmethod
    def __subclasshook__(cls, other):
        """Check if this class supports a protocol."""
        return hasattr(other, "__special__")
MyClass.__module__ = 'mypackage.abc'
mypackage_abc.ABC = ABC
mypackage_abc.MyClass = MyClass
abc = mypackage_abc
obj = abc.MyClass()
print(obj.get_name())
print(f"Is MyClass a subclass of ABC? {issubclass(abc.MyClass, abc.ABC)}")
