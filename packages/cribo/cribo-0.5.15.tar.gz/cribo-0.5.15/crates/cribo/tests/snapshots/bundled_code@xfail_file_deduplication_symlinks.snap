---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/xfail_file_deduplication_symlinks/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
lib = types.SimpleNamespace(__name__='lib')
shared = types.SimpleNamespace(__name__='shared')
lib_helpers = types.SimpleNamespace(__name__='lib.helpers')
lib.helpers = lib_helpers
shared_common = types.SimpleNamespace(__name__='shared.common')
shared.common = shared_common
counter_1 = 0
counter_2 = 0
def get_location_1():
    return "lib/helpers.py"
def increment_counter_1():
    global counter_1
    counter_1 += 1
    return counter_1
def get_location_2():
    return "lib/helpers.py"
def increment_counter_2():
    global counter_2
    counter_2 += 1
    return counter_2
shared_common.counter = counter_1
shared_common.get_location = get_location_1
shared_common.increment_counter = increment_counter_1
lib_helpers.counter = counter_2
lib_helpers.get_location = get_location_2
lib_helpers.increment_counter = increment_counter_2
helpers = lib_helpers
common = shared_common
print(f"helpers location: {helpers.get_location()}")
print(f"common location: {common.get_location()}")
print(f"helpers counter: {helpers.increment_counter()}")
print(f"common counter: {common.increment_counter()}")
assert helpers.counter == 1
assert common.counter == 1
print("SUCCESS: Symlinked modules are separate in Python!")
