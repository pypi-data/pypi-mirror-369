[build-system]
requires = ["setuptools>=68.0","wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "polyswarm"
version = "3.12.0"
description = "CLI for using the PolySwarm Customer APIs"
readme = "README.md"
authors = [{ name = "PolySwarm Developers", email = "info@polyswarm.io" }]
license = { text = "MIT" }
requires-python = ">=3.10,<4"
urls = { Homepage = "https://github.com/polyswarm/polyswarm-cli" }
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "polyswarm_api>=3.13",
    "click>=7.1",
    "colorama>=0.4.6",
    "click-log>=0.4.0",
    "pygments>=2.17.2",
]

[project.optional-dependencies]
tests = [
    "bump-my-version~=1.2",
    "pytest~=8.4",
    "pytest-cov~=6.2",
    "PyYAML~=6.0",
    'vcrpy~=7.0',
]

[project.scripts]
polyswarm = "polyswarm.__main__:polyswarm_cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]

[tool.bumpversion]
current_version = "3.12.0"
commit = true
tag = false
sign_tags = true
tag_name = "{new_version}"
parse = '^(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(?:\.dev(?P<dev>\d+))?(?:\+(?P<local>[a-z0-9]+(?:\.[a-z0-9]+)*))?$'
serialize = [
  "{major}.{minor}.{patch}.dev{dev}+{short_commit_sha}",
  "{major}.{minor}.{patch}"
]

[tool.bumpversion.parts.dev]
first_value = "0"
optional_value = "0"

[[tool.bumpversion.files]]
filename = "src/polyswarm/__init__.py"
search = "__version__ = '{current_version}'"
replace = "__version__ = '{new_version}'"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_format = "%(asctime)s %(levelname)-2s [%(name)s:%(filename)s:%(lineno)d:%(funcName)1s()] %(message)s"
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]
norecursedirs = [
    ".git",
    ".idea",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
addopts = [
    "--continue-on-collection-errors",
    "-v",
    "-s",
    "-rxXs",
]
