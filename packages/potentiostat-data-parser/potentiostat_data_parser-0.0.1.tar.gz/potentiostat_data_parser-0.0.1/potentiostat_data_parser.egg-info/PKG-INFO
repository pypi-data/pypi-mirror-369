Metadata-Version: 2.4
Name: potentiostat-data-parser
Version: 0.0.1
Summary: Parse data files created by CH Instruments potentiostats and Palmsens potentiostats
Home-page: https://github.com/bxw315-umd/potentiostat-data-parser
Author: Benjamin Wu
Author-email: bxw315@umd.edu
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastcore
Requires-Dist: numpy
Provides-Extra: dev
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# potentiostat-data-parser

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

## Developer Guide

If you are new to using `nbdev` here are some useful pointers to get you
started.

### Install potentiostat_data_parser in Development mode

``` sh
# make sure potentiostat_data_parser package is installed in development mode
$ pip install -e .

# make changes under nbs/ directory
# ...

# compile to have changes apply to potentiostat_data_parser
$ nbdev_prepare
```

## Usage

### Installation

Install latest from the GitHub
[repository](https://github.com/bxw315-umd/potentiostat-data-parser):

``` sh
$ pip install git+https://github.com/bxw315-umd/potentiostat-data-parser.git
```

or from
[conda](https://anaconda.org/bxw315-umd/potentiostat-data-parser)

``` sh
$ conda install -c bxw315-umd potentiostat_data_parser
```

or from [pypi](https://pypi.org/project/potentiostat-data-parser/)

``` sh
$ pip install potentiostat_data_parser
```

### Documentation

Documentation can be found hosted on this GitHub
[repository](https://github.com/bxw315-umd/potentiostat-data-parser)â€™s
[pages](https://bxw315-umd.github.io/potentiostat-data-parser/).
Additionally you can find package manager specific guidelines on
[conda](https://anaconda.org/bxw315-umd/potentiostat-data-parser) and
[pypi](https://pypi.org/project/potentiostat-data-parser/) respectively.

## How to use

### CHI Example

``` python
print(contents)
```

    July 19, 2022   10:35:26
    Differential Pulse Voltammetry
    File: dpv_gce_0.1m_pbbuffer_220719.bin
    Data Source:  Experiment
    Instrument Model:  CHI1040C
    Header: 
    Note: 

    Init E (V) = 0.4
    Final E (V) = 1.4
    Incr E (V) = 0.004
    Amplitude (V) = 0.05
    Pulse Width (sec) = 0.06
    Sample Width (sec) = 0.03
    Pulse Period (sec) = 0.5
    Quiet Time (sec) = 2
    Sensitivity (A/V) = 1e-5

    Ep = 0.584V
    ip = -1.618e-7A
    Ap = -1.423e-8VA

    Potential/V Current/A   Time/s

    0.440   -5.844e-7
    0.480   -6.668e-7
    0.520   -8.177e-7
    0.560   -1.002e-6
    0.600   -1.023e-6
    0.640   -9.839e-7
    0.680   -1.020e-6
    0.720   -1.099e-6
    0.760   -1.200e-6
    0.800   -1.320e-6
    0.840   -1.465e-6
    0.880   -1.638e-6
    0.920   -1.833e-6
    0.960   -2.054e-6
    1.000   -2.309e-6
    1.040   -2.601e-6
    1.080   -2.919e-6
    1.120   -3.252e-6
    1.160   -3.608e-6
    1.200   -4.000e-6
    1.240   -4.455e-6
    1.280   -5.040e-6
    1.320   -5.845e-6
    1.360   -6.902e-6
    1.400   -8.161e-6

``` python
parse_chi_file(contents)
```

    {'memo': {'timestamp': '2022-07-19T10:35:26',
      'technique': 'Differential Pulse Voltammetry',
      'file': 'dpv_gce_0.1m_pbbuffer_220719.bin',
      'instrument_model': 'CHI1040C'},
     'parameters': {'Init E (V)': 0.4,
      'Final E (V)': 1.4,
      'Incr E (V)': 0.004,
      'Amplitude (V)': 0.05,
      'Pulse Width (sec)': 0.06,
      'Sample Width (sec)': 0.03,
      'Pulse Period (sec)': 0.5,
      'Quiet Time (sec)': 2.0,
      'Sensitivity (A/V)': 1e-05},
     'numeric_data': {'Potential/V': array([0.44, 0.48, 0.52, 0.56, 0.6 , 0.64, 0.68, 0.72, 0.76, 0.8 , 0.84,
             0.88, 0.92, 0.96, 1.  , 1.04, 1.08, 1.12, 1.16, 1.2 , 1.24, 1.28,
             1.32, 1.36, 1.4 ]),
      'Current/A': array([-5.844e-07, -6.668e-07, -8.177e-07, -1.002e-06, -1.023e-06,
             -9.839e-07, -1.020e-06, -1.099e-06, -1.200e-06, -1.320e-06,
             -1.465e-06, -1.638e-06, -1.833e-06, -2.054e-06, -2.309e-06,
             -2.601e-06, -2.919e-06, -3.252e-06, -3.608e-06, -4.000e-06,
             -4.455e-06, -5.040e-06, -5.845e-06, -6.902e-06, -8.161e-06])}}
