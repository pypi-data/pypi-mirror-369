[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "ctfsolver"
version = "0.0.13"  
description = "An all in one library for solving CTF challenges"
readme = "app/README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    { name = "Nikolas Filippatos"}
]
dependencies = [
    "build>=0.7.0",
    "pwntools>=4.0.0",
    "scapy>=2.0.0",
    "argcomplete>=2.0.0",
    "setuptools>=67.7.0",
    "wheel>=0.37.0",
    "dash_cytoscape>=1.0.2",
    "dash>=3.2.0",
    "colorama>=0.4.6",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]


[project.optional-dependencies]
dev = [
    "pytest>=6.2.4",
    "twine>=3.4.2",
    "pipdeptree>=2.0.0",
    "pylint>=3.3.7"
]

# ---- Sphinx documentation stacks ----
# Core docs (dark theme included via Furo)
docs = [
    "sphinx>=8.0.0",
    "myst-parser>=3.0.0",
    "furo>=2024.0.0",                   # dark/light theme with toggle
    "sphinx-copybutton>=0.5.2",
    "sphinx-autodoc-typehints>=2.4.4",
    "sphinx-basic-ng>=1.0.0.beta2",
    "sphinx-rtd-theme>=3.0.2",
    "python-call-graph>=2.1.4",
    "sphinx-autoapi>=3.0.0",
    "pdoc3>=0.11.6",
]

# Optional: live-reload while writing docs
docs-live = [
    "sphinx-autobuild>=2024.9.3",
]


[project.urls]
Homepage = "https://github.com/nikolasfil/CTFSolverScript"

[tool.setuptools]
packages = ["ctfsolver"]
package-dir = { "" = "app"}


# [tool.setuptools.package-data]
# # Add package data if needed
# ctfsolver = ["files/*"]

[project.scripts]
folders = "ctfsolver.scripts.run_folders:main"
run =  "ctfsolver.scripts.run_solution:main"
templ =  "ctfsolver.scripts.__main__:run_template"
find_usage =  "ctfsolver.scripts.__main__:run_find_usage"
clean_folders = "ctfsolver.scripts.clean_folders.__main__:main"
ctfsolver =     "ctfsolver.inline.__main__:main"
