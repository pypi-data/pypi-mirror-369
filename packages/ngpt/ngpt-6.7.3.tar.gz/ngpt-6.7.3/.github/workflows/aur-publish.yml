name: Publish AUR Package

on:
  release:
    types: [published]  # Trigger when a release is published
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (leave empty to use current pyproject.toml version)'
        required: false
        default: ''
      pkgrel:
        description: 'Package release number (leave empty to keep current pkgrel)'
        required: false
        default: ''

jobs:
  publish-aur:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for accurate versioning

      - name: Extract version
        id: extract_version
        run: |
          # Check if manually triggered with version input
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.version }}" ]]; then
            # Use manually specified version
            VERSION="${{ github.event.inputs.version }}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Extract version from pyproject.toml when manually triggered without version
            VERSION=$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)
          else
            # Extract version from release (remove 'v' prefix if present)
            VERSION=${{ github.event.release.tag_name }}
            # Remove 'v' prefix if it exists
            VERSION=${VERSION#v}
          fi
          
          echo "Package version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Update version in PKGBUILD
          sed -i "s/^pkgver=.*/pkgver=$VERSION/" PKGBUILD
          
          # Update pkgrel if provided
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.pkgrel }}" ]]; then
            PKGREL="${{ github.event.inputs.pkgrel }}"
            echo "Updating package release to: $PKGREL"
            sed -i "s/^pkgrel=.*/pkgrel=$PKGREL/" PKGBUILD
          fi

      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: ngpt
          pkgbuild: ./PKGBUILD
          assets: |
            LICENSE
            README.md
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "${{ github.event_name == 'workflow_dispatch' && 'Manual update to version' || 'Update from release' }} ${{ steps.extract_version.outputs.version }}${{ github.event.inputs.pkgrel && format(' with pkgrel={0}', github.event.inputs.pkgrel) || '' }}"
          ssh_keyscan_types: rsa,ecdsa,ed25519
          updpkgsums: true  # Let the action update checksums automatically
          test: false  # Disable testing since the environment doesn't have necessary tools
          force_push: false  # Add this to ensure clean updates
          allow_empty_commits: false
          post_process: |
            # Remove any tar.gz files
            rm -f *.tar.gz
            # List files to verify
            ls -la