variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone

image: python:3.11

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_TITLE =~ /^chore: bump version number/'
      when: never
    - if: '$CI_COMMIT_TAG'
      when: never
    - when: always

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - .cache/pip

stages:
  - test
  - test-optional
  - build
  - publish

.tests:
  stage: test
  before_script:
    - pip install --upgrade --upgrade-strategy=eager -e .[test]
  script:
    - pytest -vv --full-trace --color=yes
  rules:
    - exists:
        - tests/**

.tests-optional:
  extends: .tests
  stage: test-optional
  allow_failure: true
  rules:
    - exists:
        - tests/**
      when: manual

test:py39:
  extends: .tests
  image: python:3.9

test:py310:
  extends: .tests
  image: python:3.10

test:py311:
  extends: .tests
  image: python:3.11

test:py312:
  extends: .tests
  image: python:3.12

test:pynext:
  extends: .tests-optional
  image: python:3.13-rc

build:
  stage: build
  allow_failure: true
  before_script:
    - apt update
    - apt install -y zip git
    - pip install --upgrade --upgrade-strategy=eager .[build]
  script:
    - sh ./semver.sh
    - python -m build --outdir=.
    - export FN=$(python -m setup --name)-$(python -m setuptools_scm)
    - echo "${FN}" > FULLNAME
    - cd docs
    - make html
    - cd build/html
    - zip -r ../../../${FN}-docs.zip *
    - echo "Built ${FN}"
  artifacts:
    paths:
      - "FULLNAME"
      - "*.tar.gz"
      - "*.whl"
      - "*-docs.zip"
    expire_in: 1 month
  variables:
    SPHINXOPTS: "-nT -v"

.publish-docs:
  stage: publish
  image: alpine
  allow_failure: true
  before_script:
    - chmod +x ./publish-docs.sh
    - export FN=`cat FULLNAME`
  script:
    - ./publish-docs.sh ${CHANNEL} ${FN}-docs.zip
  needs:
    - build

docs:release:
  extends: .publish-docs
  variables:
    CHANNEL: release
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
    - if: '$CI_COMMIT_REF_PROTECTED != "true"'
      when: never
    - when: manual

docs:dev:
  extends: .publish-docs
  variables:
    CHANNEL: dev
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      when: never
    - when: manual

publish:pypi:
  stage: publish
  allow_failure: true
  before_script:
    - pip install --upgrade --upgrade-strategy=eager twine
  script:
    - python -m twine upload -u __token__ --repository-url https://upload.pypi.org/legacy/ *.whl *.tar.gz
  needs:
    - build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
    - if: '$CI_COMMIT_REF_PROTECTED != "true"'
      when: never
    - when: manual

publish:local:
  stage: publish
  allow_failure: true
  before_script:
    - pip install --upgrade --upgrade-strategy=eager twine
  script:
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --verbose --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi *.whl *.tar.gz
  needs:
    - build
  rules:
    - when: manual
