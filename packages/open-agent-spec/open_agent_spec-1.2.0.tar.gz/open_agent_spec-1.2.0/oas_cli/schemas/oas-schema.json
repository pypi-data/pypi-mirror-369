{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://openagents.org/schemas/oas-schema.json",
    "title": "Open Agent Spec",
    "description": "Schema for Open Agent Spec YAML files",
    "type": "object",
    "required": [
      "open_agent_spec",
      "agent",
      "intelligence",
      "tasks",
      "prompts"
    ],
    "properties": {
      "open_agent_spec": {
        "type": "string",
        "pattern": "^(1\\.(0\\.[4-9]|[1-9]\\.[0-9]+)|[2-9]\\.[0-9]+\\.[0-9]+)$",
        "description": "Version of the Open Agent Spec (minimum 1.0.4)"
      },
      "agent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Free text description of what the agent does"
          },
          "role": {
            "type": "string",
            "enum": [
              "analyst",
              "reviewer",
              "chat",
              "retriever",
              "planner",
              "executor"
            ],
            "description": "Optional role type for the agent"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "intelligence": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "llm"
            ],
            "description": "Type of intelligence (currently only LLM supported)"
          },
          "engine": {
            "type": "string",
            "enum": [
              "openai",
              "anthropic",
              "grok",
              "cortex",
              "local",
              "custom"
            ],
            "description": "LLM engine provider (e.g., openai, anthropic, grok, cortex, local, custom)"
          },
          "model": {
            "type": "string",
            "description": "Model name/identifier"
          },
          "endpoint": {
            "type": "string",
            "pattern": "^(https?://)[^\\s]+$",
            "description": "API endpoint URL for the LLM service (must be HTTP/HTTPS)"
          },
          "config": {
            "type": "object",
            "properties": {
              "temperature": {
                "type": "number",
                "minimum": 0,
                "maximum": 2,
                "description": "Sampling temperature (0-2)"
              },
              "max_tokens": {
                "type": "integer",
                "minimum": 1,
                "description": "Maximum number of tokens to generate"
              },
              "top_p": {
                "type": "number",
                "minimum": 0,
                "maximum": 1,
                "description": "Nucleus sampling parameter (0-1)"
              },
              "frequency_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2,
                "description": "Frequency penalty (-2 to 2)"
              },
              "presence_penalty": {
                "type": "number",
                "minimum": -2,
                "maximum": 2,
                "description": "Presence penalty (-2 to 2)"
              },
              "enable_layer3": {
                "type": "boolean",
                "description": "Enable Layer 3 intelligence capabilities (Cortex-specific)"
              },
              "enable_onnx": {
                "type": "boolean",
                "description": "Enable ONNX runtime optimization (Cortex-specific)"
              },
              "openai_api_key": {
                "type": "string",
                "description": "OpenAI API key for Cortex integration"
              },
              "claude_api_key": {
                "type": "string",
                "description": "Claude API key for Cortex integration"
              }
            },
            "description": "Configuration parameters for the LLM"
          }
        },
        "required": [
          "type",
          "engine",
          "model"
        ]
      },
      "tasks": {
        "type": "object",
        "patternProperties": {
          "^[a-zA-Z0-9_-]+$": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of what this task does"
              },
              "timeout": {
                "type": "integer",
                "minimum": 1,
                "description": "Timeout in seconds for this task"
              },
              "input": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["object"],
                    "default": "object",
                    "description": "Type of input (currently only object supported)"
                  },
                  "properties": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["string", "number", "integer", "boolean", "array", "object"],
                            "description": "JSON Schema type for this property"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of this input property"
                          },
                          "default": {
                            "description": "Default value for this property"
                          },
                          "enum": {
                            "type": "array",
                            "description": "Allowed values for this property"
                          },
                          "minimum": {
                            "type": "number",
                            "description": "Minimum value for numeric properties"
                          },
                          "maximum": {
                            "type": "number",
                            "description": "Maximum value for numeric properties"
                          },
                          "minLength": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Minimum length for string properties"
                          },
                          "maxLength": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Maximum length for string properties"
                          },
                          "pattern": {
                            "type": "string",
                            "description": "Regex pattern for string validation"
                          },
                          "items": {
                            "type": "object",
                            "description": "Schema for array items"
                          },
                          "properties": {
                            "type": "object",
                            "description": "Properties for object type"
                          }
                        },
                        "required": ["type"]
                      }
                    },
                    "additionalProperties": false,
                    "description": "Input properties schema"
                  },
                  "required": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of required input properties"
                  }
                },
                "description": "Input schema for this task"
              },
              "output": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["object"],
                    "default": "object",
                    "description": "Type of output (currently only object supported)"
                  },
                  "properties": {
                    "type": "object",
                    "patternProperties": {
                      "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["string", "number", "integer", "boolean", "array", "object"],
                            "description": "JSON Schema type for this property"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of this output property"
                          },
                          "default": {
                            "description": "Default value for this property"
                          },
                          "enum": {
                            "type": "array",
                            "description": "Allowed values for this property"
                          },
                          "minimum": {
                            "type": "number",
                            "description": "Minimum value for numeric properties"
                          },
                          "maximum": {
                            "type": "number",
                            "description": "Maximum value for numeric properties"
                          },
                          "minLength": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Minimum length for string properties"
                          },
                          "maxLength": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Maximum length for string properties"
                          },
                          "pattern": {
                            "type": "string",
                            "description": "Regex pattern for string validation"
                          },
                          "items": {
                            "type": "object",
                            "description": "Schema for array items"
                          },
                          "properties": {
                            "type": "object",
                            "description": "Properties for object type"
                          }
                        },
                        "required": ["type"]
                      }
                    },
                    "additionalProperties": false,
                    "description": "Output properties schema"
                  },
                  "required": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of required output properties"
                  }
                },
                "description": "Output schema for this task"
              }
            },
            "required": [
              "description",
              "output"
            ]
          }
        },
        "description": "Tasks that this agent can perform"
      },
      "prompts": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        },
        "required": [
          "system",
          "user"
        ]
      },
      "logging": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether to enable DACP logging"
          },
          "level": {
            "type": "string",
            "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"],
            "default": "INFO",
            "description": "Logging level"
          },
          "format_style": {
            "type": "string",
            "enum": ["emoji", "detailed", "simple"],
            "default": "emoji",
            "description": "Logging format style"
          },
          "include_timestamp": {
            "type": "boolean",
            "default": true,
            "description": "Include timestamps in logs"
          },
          "log_file": {
            "type": "string",
            "description": "Optional: log to file (auto-creates directories)"
          },
          "env_overrides": {
            "type": "object",
            "properties": {
              "level": {
                "type": "string",
                "description": "Environment variable that overrides level"
              },
              "format_style": {
                "type": "string",
                "description": "Environment variable that overrides format_style"
              },
              "log_file": {
                "type": "string",
                "description": "Environment variable that overrides log_file"
              }
            },
            "description": "Environment variable overrides for runtime configuration"
          }
        },
        "description": "DACP logging configuration"
      },
      "behavioural_contract": {
        "type": "object"
      },
      "interface": {
        "type": "object"
      }
    }
  }
