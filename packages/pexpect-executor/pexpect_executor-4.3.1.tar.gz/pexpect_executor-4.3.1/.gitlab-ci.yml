include:
  - component: gitlab.com/RadianDevCore/tools/pre-commit-crocodile/commits@6.1.0
    inputs:
      stage: prepare
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/clean.yml
    ref: main
    inputs:
      stage: development
      paths: ./build ./dist ./*.egg-info ./.eggs
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/preview.yml
    ref: main
    inputs:
      stage: development
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:preview
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/changelog.yml
    ref: main
    inputs:
      stage: development
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/gitlab-protections.yml
    ref: main
    inputs:
      stage: development
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/registry.yml
    ref: main
    inputs:
      stage: registry
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-codestyle.yml
    ref: main
    inputs:
      stage: prepare
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:codestyle
      paths: ./docs/*.py ./src/*.py ./src/*/*.py ./setup.py
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-lint.yml
    ref: main
    inputs:
      stage: prepare
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:codestyle
      paths: ./docs/ ./src/ ./setup.py
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-typings.yml
    ref: main
    inputs:
      stage: prepare
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:codestyle
      paths: ./docs/ ./src/ ./setup.py
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-build.yml
    ref: main
    inputs:
      stage: build
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:build
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-install.yml
    ref: main
    inputs:
      stage: build
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-readme.yml
    ref: main
    inputs:
      stage: build
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-test.yml
    ref: main
    inputs:
      stage: test
      package: pexpect-executor
      timeout: 10m
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-coverage.yml
    ref: main
    inputs:
      stage: test
      package: pexpect-executor
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-quality.yml
    ref: main
    inputs:
      stage: quality
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:test-coverage-linux
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/sonarcloud.yml
    ref: main
    inputs:
      stage: quality
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/sonarsource/sonar-scanner-cli:latest
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/python-deploy.yml
    ref: main
    inputs:
      stage: deploy
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:deploy
  - project: RadianDevCore/gitlab-ci/components
    file: /templates/pages.yml
    ref: main
    inputs:
      stage: deploy
      image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:pages
      pdf: pexpect-executor
      watch: ./config/* ./docs/.* ./docs/* ./mkdocs.yml ./README.md

stages:
  - development
  - registry
  - prepare
  - build
  - test
  - quality
  - deploy

variables:
  CI_LOCAL_ENGINE: 'docker,auto'
  CI_LOCAL_REAL_PATHS: 'true'
  CI_LOCAL_SOCKETS: 'true'
  EXECUTOR_HOST: preview
  EXECUTOR_TOOL: pexpect-executor
  REGISTRY_HOST: registry.gitlab.com
  REGISTRY_NAMESPACE: radiandevcore/tools
  REGISTRY_PROJECT: pexpect-executor

.local:
  include:
    'RadianDevCore/gitlab-ci/components': '.gitlab-ci.d'
  no_regex: true
  variables:
    DOCKER_CERT_PATH: ''
    DOCKER_HOST: ''
    DOCKER_TLS_CERTDIR: ''
    DOCKER_TLS_VERIFY: ''
  version: 12.0
  volumes:
    - ${HOME}/.docker/config.json:/root/.docker/config.json:ro

registry:build:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13-alpine
    CONTAINER_FOLDER: build
    CONTAINER_IMAGE_TAG: build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/build/Dockerfile
        - containers/rehost/images.txt
        - requirements/build.txt
        - requirements/runtime.txt

registry:codestyle:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13-alpine
    CONTAINER_FOLDER: codestyle
    CONTAINER_IMAGE_TAG: codestyle
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/codestyle/Dockerfile
        - containers/rehost/images.txt
        - requirements/quality.txt
        - requirements/runtime.txt

registry:deploy:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13-alpine
    CONTAINER_FOLDER: deploy
    CONTAINER_IMAGE_TAG: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/deploy/Dockerfile
        - containers/rehost/images.txt
        - requirements/deploy.txt

registry:pages:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13-slim
    CONTAINER_FOLDER: pages
    CONTAINER_IMAGE_TAG: pages
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/pages/Dockerfile
        - containers/rehost/images.txt
        - requirements/coverage.txt
        - requirements/pages.txt

registry:preview:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13-alpine
    CONTAINER_FOLDER: preview
    CONTAINER_IMAGE_TAG: preview
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/preview/Dockerfile
        - containers/rehost/images.txt
        - requirements/docs.txt
        - requirements/tests.txt

registry:test-coverage-linux:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13
    CONTAINER_FOLDER: test-coverage-linux
    CONTAINER_IMAGE_TAG: test-coverage-linux
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/rehost/images.txt
        - containers/test-coverage-linux/Dockerfile
        - requirements/coverage.txt
        - requirements/runtime.txt
        - requirements/tests.txt

registry:test-coverage-windows:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: tobix/pywine:3.10
    CONTAINER_FOLDER: test-coverage-windows
    CONTAINER_IMAGE_TAG: test-coverage-windows
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/rehost/images.txt
        - containers/test-coverage-windows/Dockerfile
        - requirements/coverage.txt
        - requirements/runtime.txt
        - requirements/tests.txt

registry:test-oldest:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.8
    CONTAINER_FOLDER: test-linux
    CONTAINER_IMAGE_TAG: test-oldest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/rehost/images.txt
        - containers/test-linux/Dockerfile
        - requirements/tests.txt

registry:test-latest:
  extends:
    - .registry:container
  variables:
    BASEIMAGE_NAME: python:3.13
    CONTAINER_FOLDER: test-linux
    CONTAINER_IMAGE_TAG: test-latest
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - containers/rehost/images.txt
        - containers/test-linux/Dockerfile
        - requirements/tests.txt

codestyle:
  needs:
    - job: registry:codestyle
      artifacts: false
      optional: true
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'docs/**/*'
        - 'requirements/**/*'
        - 'setup.py'
        - 'src/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success

lint:
  needs:
    - job: registry:codestyle
      artifacts: false
      optional: true
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'docs/**/*'
        - 'requirements/**/*'
        - 'setup.py'
        - 'src/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success

typings:
  needs:
    - job: registry:codestyle
      artifacts: false
      optional: true
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'docs/**/*'
        - 'requirements/**/*'
        - 'setup.py'
        - 'src/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success

build:
  extends:
    - .build
  needs:
    - job: registry:build
      artifacts: false
      optional: true
    - job: codestyle
      artifacts: false
      optional: true
    - job: commits
      artifacts: false
      optional: true
    - job: lint
      artifacts: false
      optional: true
    - job: typings
      artifacts: false
      optional: true
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'requirements/**/*'
        - 'src/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success

.test:docker:
  variables:
    DOCKER_CERT_PATH: /certs/client
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: /certs
    DOCKER_TLS_VERIFY: 1
  services:
    - name: registry.gitlab.com/radiandevcore/tools/pexpect-executor/docker:dind
      alias: docker

.test:rules:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'requirements/**/*'
        - 'src/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success

.coverage:rules:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'requirements/**/*'
        - 'sonar-project.properties'
        - 'src/**/*'
        - 'tests/**/*'
    - if: $CI_COMMIT_TAG || $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "web" || $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: on_success
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always

coverage:linux:
  extends:
    - .coverage:template
    - .coverage:rules
    - .test:docker
  image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:test-coverage-linux
  needs:
    - job: registry:test-coverage-linux
      artifacts: false
      optional: true
  variables:
    COVERAGE_EXCLUDE_ALSO: 'pragma: macos cover|pragma: windows cover'
    COVERAGE_FILE: ${CI_PROJECT_DIR}/coverage-reports/.coverage-linux
    COVERAGE_XML: ${CI_PROJECT_DIR}/coverage-reports/coverage-linux.xml

coverage:windows:
  extends:
    - .coverage:template
    - .coverage:rules
  image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:test-coverage-windows
  needs:
    - job: registry:test-coverage-windows
      artifacts: false
      optional: true
  variables:
    COVERAGE_FILE: ${CI_PROJECT_DIR}/coverage-reports/.coverage-windows
    COVERAGE_EXCLUDE_ALSO: 'pragma: linux cover|pragma: macos cover'
    COVERAGE_XML: ${CI_PROJECT_DIR}/coverage-reports/coverage-windows.xml
    SUITE: 'versions\|windows'

py3.8:
  extends:
    - .test:template
    - .test:docker
    - .test:rules
  image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:test-oldest
  needs:
    - job: build

py3.13:
  extends:
    - .test:template
    - .test:docker
    - .test:rules
  image: registry.gitlab.com/radiandevcore/tools/pexpect-executor/pexpect-executor:test-latest
  needs:
    - job: build

quality:coverage:
  needs:
    - job: registry:test-coverage-linux
      artifacts: false
      optional: true
    - job: coverage:linux
    - job: coverage:windows
  variables:
    COVERAGE_FILE: !reference ['.coverage:scripts', variables, COVERAGE_COMMON_FILE]
    COVERAGE_RCFILE: !reference ['.coverage:scripts', variables, COVERAGE_RCFILE]
  rules: !reference ['.coverage:rules', rules]

quality:sonarcloud:
  needs:
    - job: registry:rehost
      artifacts: false
      optional: true
    - job: coverage:linux
    - job: coverage:windows
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        - 'CHANGELOG.md'
        - 'requirements/**/*'
        - 'sonar-project.properties'
        - 'src/**/*'
        - 'tests/**/*'
      when: always
    - if: $CI_COMMIT_REF_NAME == "main"
      when: always
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

deploy:release:
  needs:
    - job: registry:deploy
      artifacts: false
      optional: true
    - job: build
    - job: coverage:linux
      artifacts: false
    - job: coverage:windows
      artifacts: false
    - job: py3.8
      artifacts: false
    - job: py3.13
      artifacts: false

deploy:trial:
  needs:
    - job: registry:deploy
      artifacts: false
      optional: true
    - job: build
    - job: coverage:linux
      artifacts: false
    - job: coverage:windows
      artifacts: false
    - job: py3.8
      artifacts: false
    - job: py3.13
      artifacts: false

.pages:rules:
  rules:
    changes:
      - '.gitlab-ci.yml'
      - 'CHANGELOG.md'
      - 'mkdocs.yml'
      - 'LICENSE'
      - 'README.md'
      - 'docs/**/*'
      - 'requirements/**/*'

pages:
  extends:
    - .pages
  needs:
    - job: registry:pages
      artifacts: false
      optional: true
    - job: build
      artifacts: false
      optional: true
    - job: py3.8
      artifacts: false
      optional: true
    - job: py3.13
      artifacts: false
      optional: true
    - job: quality:coverage
      artifacts: true
      optional: true
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - coverage-reports/html
  rules:
    - if: $CI_COMMIT_TAG || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes: !reference ['.pages:rules', rules, changes]
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED
      changes: !reference ['.pages:rules', rules, changes]
      allow_failure: true
      when: manual

pdf:
  extends:
    - pages
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH
      changes: !reference ['.pages:rules', rules, changes]
