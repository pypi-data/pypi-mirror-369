"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from langcache.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SearchEntriesRequestTypedDict(TypedDict):
    r"""Request for searching a cache entry"""

    prompt: str
    r"""The prompt to search for in the cache."""
    similarity_threshold: NotRequired[float]
    r"""The minimum similarity threshold for the cache entry (normalized cosine similarity)."""
    attributes: NotRequired[Dict[str, str]]
    r"""Key-value pairs of attributes that filter the cache entries. If provided, this endpoint only returns entries that contain all given attributes."""


class SearchEntriesRequest(BaseModel):
    r"""Request for searching a cache entry"""

    prompt: str
    r"""The prompt to search for in the cache."""

    similarity_threshold: Annotated[
        Optional[float], pydantic.Field(alias="similarityThreshold")
    ] = None
    r"""The minimum similarity threshold for the cache entry (normalized cosine similarity)."""

    attributes: Optional[Dict[str, str]] = None
    r"""Key-value pairs of attributes that filter the cache entries. If provided, this endpoint only returns entries that contain all given attributes."""
