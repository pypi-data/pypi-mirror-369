"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from typing import TYPE_CHECKING
from importlib import import_module
import builtins

if TYPE_CHECKING:
    from .authenticationerroruri import AuthenticationErrorURI
    from .badrequesterroruri import BadRequestErrorURI
    from .cacheentry import CacheEntry, CacheEntryTypedDict
    from .deletebyidop import (
        DeleteByIDGlobals,
        DeleteByIDGlobalsTypedDict,
        DeleteByIDRequest,
        DeleteByIDRequestTypedDict,
    )
    from .deleteentriesrequest import (
        DeleteEntriesRequest,
        DeleteEntriesRequestTypedDict,
    )
    from .deleteentriesresponse import (
        DeleteEntriesResponse,
        DeleteEntriesResponseTypedDict,
    )
    from .deletequeryop import DeleteQueryGlobals, DeleteQueryGlobalsTypedDict
    from .faileddependencyerroruri import FailedDependencyErrorURI
    from .forbiddenerroruri import ForbiddenErrorURI
    from .internalservererroruri import InternalServerErrorURI
    from .notfounderroruri import NotFoundErrorURI
    from .searchentriesrequest import (
        SearchEntriesRequest,
        SearchEntriesRequestTypedDict,
    )
    from .searchentriesresponse import (
        SearchEntriesResponse,
        SearchEntriesResponseTypedDict,
    )
    from .searchop import SearchGlobals, SearchGlobalsTypedDict
    from .security import Security, SecurityTypedDict
    from .serviceunavailableerroruri import ServiceUnavailableErrorURI
    from .setentryrequest import SetEntryRequest, SetEntryRequestTypedDict
    from .setentryresponse import SetEntryResponse, SetEntryResponseTypedDict
    from .setop import SetGlobals, SetGlobalsTypedDict

__all__ = [
    "AuthenticationErrorURI",
    "BadRequestErrorURI",
    "CacheEntry",
    "CacheEntryTypedDict",
    "DeleteByIDGlobals",
    "DeleteByIDGlobalsTypedDict",
    "DeleteByIDRequest",
    "DeleteByIDRequestTypedDict",
    "DeleteEntriesRequest",
    "DeleteEntriesRequestTypedDict",
    "DeleteEntriesResponse",
    "DeleteEntriesResponseTypedDict",
    "DeleteQueryGlobals",
    "DeleteQueryGlobalsTypedDict",
    "FailedDependencyErrorURI",
    "ForbiddenErrorURI",
    "InternalServerErrorURI",
    "NotFoundErrorURI",
    "SearchEntriesRequest",
    "SearchEntriesRequestTypedDict",
    "SearchEntriesResponse",
    "SearchEntriesResponseTypedDict",
    "SearchGlobals",
    "SearchGlobalsTypedDict",
    "Security",
    "SecurityTypedDict",
    "ServiceUnavailableErrorURI",
    "SetEntryRequest",
    "SetEntryRequestTypedDict",
    "SetEntryResponse",
    "SetEntryResponseTypedDict",
    "SetGlobals",
    "SetGlobalsTypedDict",
]

_dynamic_imports: dict[str, str] = {
    "AuthenticationErrorURI": ".authenticationerroruri",
    "BadRequestErrorURI": ".badrequesterroruri",
    "CacheEntry": ".cacheentry",
    "CacheEntryTypedDict": ".cacheentry",
    "DeleteByIDGlobals": ".deletebyidop",
    "DeleteByIDGlobalsTypedDict": ".deletebyidop",
    "DeleteByIDRequest": ".deletebyidop",
    "DeleteByIDRequestTypedDict": ".deletebyidop",
    "DeleteEntriesRequest": ".deleteentriesrequest",
    "DeleteEntriesRequestTypedDict": ".deleteentriesrequest",
    "DeleteEntriesResponse": ".deleteentriesresponse",
    "DeleteEntriesResponseTypedDict": ".deleteentriesresponse",
    "DeleteQueryGlobals": ".deletequeryop",
    "DeleteQueryGlobalsTypedDict": ".deletequeryop",
    "FailedDependencyErrorURI": ".faileddependencyerroruri",
    "ForbiddenErrorURI": ".forbiddenerroruri",
    "InternalServerErrorURI": ".internalservererroruri",
    "NotFoundErrorURI": ".notfounderroruri",
    "SearchEntriesRequest": ".searchentriesrequest",
    "SearchEntriesRequestTypedDict": ".searchentriesrequest",
    "SearchEntriesResponse": ".searchentriesresponse",
    "SearchEntriesResponseTypedDict": ".searchentriesresponse",
    "SearchGlobals": ".searchop",
    "SearchGlobalsTypedDict": ".searchop",
    "Security": ".security",
    "SecurityTypedDict": ".security",
    "ServiceUnavailableErrorURI": ".serviceunavailableerroruri",
    "SetEntryRequest": ".setentryrequest",
    "SetEntryRequestTypedDict": ".setentryrequest",
    "SetEntryResponse": ".setentryresponse",
    "SetEntryResponseTypedDict": ".setentryresponse",
    "SetGlobals": ".setop",
    "SetGlobalsTypedDict": ".setop",
}


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = builtins.list(_dynamic_imports.keys())
    return builtins.sorted(lazy_attrs)
