initialize()
{
    setSeed(23);
    if (!exists("TREES_FILE")) defineGlobal("TREES_FILE", "out.trees"); 
    // as well as any bespoke TREES_FILE for output, you need to define:
    //  TREES_IN = path to trees to initialise
    //  L = sequence length
    //  SEX = A, X, Y or not defined
    //  WF = T or F
    if (WF) {
      initializeSLiMModelType("WF");
    } else {
      initializeSLiMModelType("nonWF");
    }
    initializeTreeSeq(timeUnit=WF ? "generations" else "ticks");
    initializeMutationRate(1/L);
    initializeMutationType("m0", 0.5, "f", 0.0);
    initializeMutationType("m1", 0.5, "f", -0.1);
    initializeMutationType("m2", 0.5, "f", 0.0);
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, L-1);
    initializeRecombinationRate(1/L);
    if (exists("SEX")) {
        catn("SEX: " + SEX);
        initializeSex(SEX);
    }
    if (!exists("SUBPOP_MAP")) defineConstant("SUBPOP_MAP", NULL);
}

// output immediately! Nothing should have changed.
1 early() { 
  if (STAGE == "early") {
    sim.readFromPopulationFile(TREES_IN, subpopMap=SUBPOP_MAP);
    sim.treeSeqOutput(TREES_FILE, simplify=F);
  }
}
1 late() { 
  if (STAGE == "late") {
    sim.readFromPopulationFile(TREES_IN, subpopMap=SUBPOP_MAP);
    sim.treeSeqOutput(TREES_FILE, simplify=F);
  }
}

20 early() {
    catn("Done.");
    sim.simulationFinished();
}
