initialize() {
    setSeed(23);
    if (!exists("TREES_FILE")) defineGlobal("TREES_FILE", "out.trees"); 
    if (!exists("PEDIGREE_FILE")) defineGlobal("PEDIGREE_FILE", "out.pedigree"); 
    defineConstant("chromosome_length", 249250);
    initializeSLiMOptions(keepPedigrees=T);
    initializeTreeSeq();
    initializeMutationRate(0);
    initializeMutationType("m1", 0.5, "f", 0);
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, chromosome_length-1);
    initializeRecombinationRate(1e-8);
}

1 early() {
    sim.addSubpop('p1', 1000);
}

100 late() {
    sim.treeSeqOutput(TREES_FILE);
    catn("Done.");
    sim.simulationFinished();
}

// PEDIGREE OUTPUT
1 first() {
    writeFile(PEDIGREE_FILE,
       paste(c("generation", "stage", "individual", "age", "parent1", "parent2"),
             sep="\t"));
}

1: first() {
    for (pop in sim.subpopulations) {
        for (ind in pop.individuals) {
            age = community.modelType == "nonWF" ? ind.age else -1;
            writeFile(PEDIGREE_FILE,
             paste(c(sim.cycle, community.cycleStage, ind.pedigreeID, age, ind.pedigreeParentIDs),
                   sep='\t'),
             append=T);
        }
    }
}

1: early() {
    for (pop in sim.subpopulations) {
        for (ind in pop.individuals) {
            age = community.modelType == "nonWF" ? ind.age else -1;
            writeFile(PEDIGREE_FILE,
             paste(c(sim.cycle, community.cycleStage, ind.pedigreeID, age, ind.pedigreeParentIDs),
                   sep='\t'),
             append=T);
        }
    }
}

1: late() {
    for (pop in sim.subpopulations) {
        for (ind in pop.individuals) {
            age = community.modelType == "nonWF" ? ind.age else -1;
            writeFile(PEDIGREE_FILE,
             paste(c(sim.cycle, community.cycleStage, ind.pedigreeID, age, ind.pedigreeParentIDs),
                   sep='\t'),
             append=T);
        }
    }
}

