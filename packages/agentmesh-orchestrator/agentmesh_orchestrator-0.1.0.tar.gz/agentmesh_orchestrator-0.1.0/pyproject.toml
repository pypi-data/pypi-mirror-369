[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "agentmesh-orchestrator"
version = "0.1.0"
description = "AgentMesh - Multi-Agent Orchestration Platform"
authors = ["Development Team <dev@agentmesh.ai>"]
readme = "README.md"
homepage = "https://github.com/akhilthomas236/agentmesh"
repository = "https://github.com/akhilthomas236/agentmesh"
documentation = "https://github.com/akhilthomas236/agentmesh/blob/main/README.md"
keywords = ["multi-agent", "orchestration", "autogen", "ai", "workflow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "agentmesh", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
fastapi = "^0.108.0"
uvicorn = {extras = ["standard"], version = "^0.25.0"}
httpx = "^0.26.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
aiosqlite = "^0.20.0"
redis = {extras = ["hiredis"], version = "^6.4.0"}
autogen-core = "^0.4.0"
autogen-agentchat = "^0.2.0"
autogen-ext = "^0.4.0"
typer = "^0.9.0"
rich = "^13.7.0"
pyyaml = "^6.0"
websockets = "^12.0"
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.21.0"
deprecated = "^1.2.14"
opentelemetry-sdk = "^1.21.0"
opentelemetry-exporter-jaeger = "^1.21.0"
cryptography = "^41.0.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
boto3 = "^1.34.149"  # For AWS Bedrock support
python-multipart = "^0.0.20"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
black = "^23.12.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
isort = "^5.13.0"
pre-commit = "^3.6.0"
locust = "^2.18.0"

[tool.poetry.scripts]
agentmesh = "agentmesh.cli.__main__:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
pythonpath = [
    "src"
]
