Metadata-Version: 2.4
Name: unboil-sqlalchemy-utils
Version: 0.1.0
Summary: A library providing reusable utilities for SQLAlchemy.
Project-URL: homepage, https://github.com/eyueldk/unboil-sqlalchemy-utils
Project-URL: repository, https://github.com/eyueldk/unboil-sqlalchemy-utils
Author: eyueldk
License: MIT
License-File: LICENSE
Keywords: database,orm,python,reusable,sqlalchemy,unboil,utils
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.9
Requires-Dist: sqlalchemy>=2.0.0
Description-Content-Type: text/markdown

# unboil-sqlalchemy-mixins

Reusable mixins for SQLAlchemy models, designed to save you time and reduce boilerplate in your Python ORM code.

## Features

- **IdentifiableMixin**: Adds a string primary key with optional prefix to your models.
- **TimestampedMixin**: Adds `created_at` and `updated_at` fields with automatic timestamping.

## Installation

```bash
pip install unboil-sqlalchemy-mixins
```

## Usage

### IdentifiableMixin

Add a string `id` primary key to your models. You can also use a prefix for the ID:

```python
from sqlalchemy.orm import DeclarativeBase
from unboil_sqlalchemy_mixins import IdentifiableMixin

class Base(DeclarativeBase):
    pass

class User(IdentifiableMixin, Base):
    __tablename__ = "users"
    # ... your fields ...

# Or with a prefix:
class PrefixedUser(IdentifiableMixin.with_prefix("user_"), Base):
    __tablename__ = "prefixed_users"
    # ... your fields ...
```

### TimestampedMixin

Add `created_at` and `updated_at` fields that are automatically managed:

```python
from sqlalchemy.orm import DeclarativeBase
from unboil_sqlalchemy_mixins import TimestampedMixin

class Base(DeclarativeBase):
    pass

class Post(TimestampedMixin, Base):
    __tablename__ = "posts"
    # ... your fields ...
```

## Mixins API

### IdentifiableMixin
- Adds a string `id` primary key (32 hex chars by default).
- Use `IdentifiableMixin.with_prefix(prefix)` to add a custom prefix to the ID.

### TimestampedMixin
- Adds `created_at` and `updated_at` fields (timezone-aware, auto-managed).

## License

MIT