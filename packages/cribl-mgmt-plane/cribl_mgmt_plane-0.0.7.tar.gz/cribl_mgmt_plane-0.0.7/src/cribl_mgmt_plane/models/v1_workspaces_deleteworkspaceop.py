"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .schemeoauth2 import SchemeOauth2, SchemeOauth2TypedDict
from cribl_mgmt_plane.types import BaseModel
from cribl_mgmt_plane.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1WorkspacesDeleteWorkspaceSecurityTypedDict(TypedDict):
    oauth2: NotRequired[SchemeOauth2TypedDict]
    bearer: NotRequired[str]


class V1WorkspacesDeleteWorkspaceSecurity(BaseModel):
    oauth2: Annotated[
        Optional[SchemeOauth2],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True, scheme_type="oauth2", sub_type="client_credentials"
            )
        ),
    ] = None

    bearer: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None


class V1WorkspacesDeleteWorkspaceRequestTypedDict(TypedDict):
    organization_id: str
    r"""Organization identifier"""
    workspace_id: str
    r"""Workspace identifier"""


class V1WorkspacesDeleteWorkspaceRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Organization identifier"""

    workspace_id: Annotated[
        str,
        pydantic.Field(alias="workspaceId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Workspace identifier"""
