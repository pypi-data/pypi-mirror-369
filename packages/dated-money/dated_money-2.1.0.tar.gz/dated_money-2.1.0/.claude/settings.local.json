{
  "permissions": {
    "allow": [
      "Bash(uv add:*)",
      "Bash(python -m pytest test/ -v)",
      "Bash(uv run pytest:*)",
      "Bash(uv run black:*)",
      "Bash(uv run ruff:*)",
      "Bash(uv run mypy:*)",
      "Bash(git add:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(sqlite3:*)",
      "Bash(python3:*)",
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(../uv run python analyze_transactions.py)",
      "Bash(uv run:*)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(grep:*)",
      "Bash(DMON_RATES_CACHE=res uv run python -c \"\nfrom dated_money import Money, Currency\nPD = Money(''£'', ''2022-07-14'', output_currency=''$'')\nm = PD(20)\nprint(f''20 GBP = {m}'')\")",
      "Bash(DMON_RATES_CACHE=res uv run python -c \"\nfrom dated_money import Money, Currency\nPD = Money(''£'', ''2022-07-14'', output_currency=''$'')\nprint(f''20 GBP (£) = {PD(20, \"\"£\"\")}'')\nprint(f''20 GBP (gbp) = {PD(20, \"\"gbp\"\")}'')\nprint(f''20 GBP (Currency.GBP) = {PD(20, Currency.GBP)}'')\nprint(f''20 USD = {PD(20, Currency.USD)}'')\")",
      "Bash(DMON_RATES_CACHE=test/res uv run python -c \"\nfrom dated_money import Money, Currency\nPD = Money(''£'', ''2022-07-14'', output_currency=''$'')\nprint(f''20 GBP (£) = {PD(20, \"\"£\"\")}'')\nprint(f''20 GBP (gbp) = {PD(20, \"\"gbp\"\")}'') \nprint(f''20 GBP (Currency.GBP) = {PD(20, Currency.GBP)}'')\nprint(f''20 USD = {PD(20, Currency.USD)}'')\")",
      "Bash(python test_readme_examples.py:*)",
      "Bash(python -m pytest test/ -v --tb=short)",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(python test_readonly_mode.py:*)",
      "Bash(DMON_RATES_READONLY=1 python -m pytest test/test_money.py -v)",
      "Bash(DMON_RATES_READONLY=1 python utils/test_readme_examples.py)",
      "Bash(DMON_RATES_READONLY=1 python utils/try_readme_examples.py)",
      "Bash(python -m pytest test/test_money.py -v)",
      "Bash(python -m pytest test/test_rates.py::TestCacheOperations::test_cache_day_rates -xvs)",
      "Bash(python utils/try_readme_examples.py:*)",
      "Bash(python test_db_serialization.py:*)",
      "Bash(python -m pytest test/test_db_serialization.py -v)",
      "Bash(python -m pytest test/test_db_serialization.py::TestPostgreSQLSerialization::test_postgres_roundtrip -xvs)",
      "Bash(python -m pytest test/test_db_serialization.py::TestEdgeCases::test_parse_invalid_format -xvs)",
      "Bash(python:*)"
    ],
    "deny": []
  }
}