name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run pre-commit hooks
      run: pre-commit run --all-files

    - name: Run type checking
      run: mypy src/anovable/

    - name: Run tests
      run: pytest --cov=src/anovable --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: release
    permissions:
      id-token: write  # For PyPI trusted publishing
      contents: write  # For creating releases and tags

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install semantic-release
      run: |
        python -m pip install --upgrade pip
        pip install python-semantic-release build

    - name: Semantic Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        semantic-release version

    - name: Check if release was created
      id: check_release
      run: |
        if [ -d "dist" ] && [ "$(ls -A dist)" ]; then
          echo "release_created=true" >> $GITHUB_OUTPUT
          echo "Release artifacts found in dist/"
          ls -la dist/
        else
          echo "release_created=false" >> $GITHUB_OUTPUT
          echo "No release artifacts found"
        fi

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: steps.check_release.outputs.release_created == 'true'
