[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "excloud"
version = "0.1.1"
description = "Python SDK for creating and managing cloud sandboxes with Excloud"
readme = "README.md"
license = "MIT"
authors = [{ name = "Excloud", email = "support@excloud.in" }]
maintainers = [{ name = "Excloud", email = "support@excloud.in" }]
keywords = ["cloud", "sandbox", "containers", "development", "testing", "api"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Distributed Computing",
  "Topic :: Internet :: WWW/HTTP :: HTTP Servers",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
]
requires-python = ">=3.7"
dependencies = ["requests>=2.25.0", "websockets>=11.0"]

[project.optional-dependencies]
dev = [
  "pytest>=6.0",
  "pytest-cov",
  "black",
  "flake8",
  "mypy",
  "pre-commit",
  "twine",
  "build",
]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser"]
test = ["pytest>=6.0", "pytest-cov", "pytest-mock", "requests-mock"]

[project.urls]
Homepage = "https://excloud.in"
Documentation = "https://excloud.in/docs"
Repository = "https://github.com/excloud-in/python-sdk"
"Bug Tracker" = "https://github.com/excloud-in/pythons-sdk/issues"

[tool.setuptools]
package-dir = { "" = "." }

[tool.setuptools.packages.find]
include = ["excloud*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
excloud = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", ".eggs"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--cov=excloud",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["excloud"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
