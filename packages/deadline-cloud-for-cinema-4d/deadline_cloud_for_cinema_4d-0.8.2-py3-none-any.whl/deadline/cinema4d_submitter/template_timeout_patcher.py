# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

from deadline.client.ui.dataclasses.timeouts import TimeoutTableEntries

from typing import Any


def add_timeouts_to_job_template(template: dict[str, Any], timeouts: TimeoutTableEntries) -> None:
    """
    Currently the default job template generated by the submitter has 1 step with 1 task run and 1 environment.
    These are 3 actions:
    - Task run
    - Cinema 4D launch (EnvEnter)
    - Cinema 4D shutdown (EnvExit)
    We would apply the timeouts accordingly.
    """

    timeouts.validate_entries()

    if timeouts.entries["Task Run"].is_activated:
        template["steps"][0]["script"]["actions"]["onRun"]["timeout"] = timeouts.entries[
            "Task Run"
        ].seconds

    if timeouts.entries["Cinema 4D launch"].is_activated:
        template["steps"][0]["stepEnvironments"][0]["script"]["actions"]["onEnter"]["timeout"] = (
            timeouts.entries["Cinema 4D launch"].seconds
        )

    if timeouts.entries["Cinema 4D shutdown"].is_activated:
        template["steps"][0]["stepEnvironments"][0]["script"]["actions"]["onExit"]["timeout"] = (
            timeouts.entries["Cinema 4D shutdown"].seconds
        )
