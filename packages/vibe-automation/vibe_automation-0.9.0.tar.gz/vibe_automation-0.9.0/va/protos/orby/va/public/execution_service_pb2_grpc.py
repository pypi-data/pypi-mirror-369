# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from va.protos.orby.va.public import execution_messages_pb2 as orby_dot_va_dot_public_dot_execution__messages__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in orby/va/public/execution_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ExecutionServiceStub(object):
    """ExecutionService manages the lifecycle of workflow executions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartExecution = channel.unary_unary(
                '/orby.va.public.ExecutionService/StartExecution',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionResponse.FromString,
                _registered_method=True)
        self.CancelExecution = channel.unary_unary(
                '/orby.va.public.ExecutionService/CancelExecution',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionResponse.FromString,
                _registered_method=True)
        self.GetExecutionEvents = channel.unary_stream(
                '/orby.va.public.ExecutionService/GetExecutionEvents',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionEventsRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ExecutionEvent.FromString,
                _registered_method=True)
        self.RequestReview = channel.unary_unary(
                '/orby.va.public.ExecutionService/RequestReview',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewResponse.FromString,
                _registered_method=True)
        self.MarkReviewCompleted = channel.unary_unary(
                '/orby.va.public.ExecutionService/MarkReviewCompleted',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedResponse.FromString,
                _registered_method=True)
        self.GetReviewStatus = channel.unary_unary(
                '/orby.va.public.ExecutionService/GetReviewStatus',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusResponse.FromString,
                _registered_method=True)
        self.UpdateExecution = channel.unary_unary(
                '/orby.va.public.ExecutionService/UpdateExecution',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.UpdateExecutionRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.Execution.FromString,
                _registered_method=True)
        self.GetExecutionLogs = channel.unary_unary(
                '/orby.va.public.ExecutionService/GetExecutionLogs',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsResponse.FromString,
                _registered_method=True)
        self.AppendExecutionLog = channel.unary_unary(
                '/orby.va.public.ExecutionService/AppendExecutionLog',
                request_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogRequest.SerializeToString,
                response_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogResponse.FromString,
                _registered_method=True)


class ExecutionServiceServicer(object):
    """ExecutionService manages the lifecycle of workflow executions.
    """

    def StartExecution(self, request, context):
        """Starts a new workflow execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelExecution(self, request, context):
        """Cancels a running workflow execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExecutionEvents(self, request, context):
        """Streams real-time events for a given execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestReview(self, request, context):
        """Submit review request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkReviewCompleted(self, request, context):
        """Mark review as completed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReviewStatus(self, request, context):
        """Get review status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExecution(self, request, context):
        """Update execution
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExecutionLogs(self, request, context):
        """Get paginated Execution logs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppendExecutionLog(self, request, context):
        """Append execution log
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExecutionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.StartExecution,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionResponse.SerializeToString,
            ),
            'CancelExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelExecution,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionResponse.SerializeToString,
            ),
            'GetExecutionEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.GetExecutionEvents,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionEventsRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ExecutionEvent.SerializeToString,
            ),
            'RequestReview': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestReview,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewResponse.SerializeToString,
            ),
            'MarkReviewCompleted': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkReviewCompleted,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedResponse.SerializeToString,
            ),
            'GetReviewStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReviewStatus,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusResponse.SerializeToString,
            ),
            'UpdateExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExecution,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.UpdateExecutionRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.Execution.SerializeToString,
            ),
            'GetExecutionLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExecutionLogs,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsResponse.SerializeToString,
            ),
            'AppendExecutionLog': grpc.unary_unary_rpc_method_handler(
                    servicer.AppendExecutionLog,
                    request_deserializer=orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogRequest.FromString,
                    response_serializer=orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'orby.va.public.ExecutionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('orby.va.public.ExecutionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ExecutionService(object):
    """ExecutionService manages the lifecycle of workflow executions.
    """

    @staticmethod
    def StartExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/StartExecution',
            orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.StartExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/CancelExecution',
            orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.CancelExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExecutionEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/orby.va.public.ExecutionService/GetExecutionEvents',
            orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionEventsRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.ExecutionEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/RequestReview',
            orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.RequestReviewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkReviewCompleted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/MarkReviewCompleted',
            orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.ReviewCompletedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetReviewStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/GetReviewStatus',
            orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.GetReviewStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/UpdateExecution',
            orby_dot_va_dot_public_dot_execution__messages__pb2.UpdateExecutionRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.Execution.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExecutionLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/GetExecutionLogs',
            orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.GetExecutionLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AppendExecutionLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/orby.va.public.ExecutionService/AppendExecutionLog',
            orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogRequest.SerializeToString,
            orby_dot_va_dot_public_dot_execution__messages__pb2.AppendExecutionLogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
