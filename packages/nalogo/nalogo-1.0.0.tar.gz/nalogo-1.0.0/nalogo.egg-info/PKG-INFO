Metadata-Version: 2.4
Name: nalogo
Version: 1.0.0
Summary: Asynchronous Python client for Russian self-employed tax service API (Moy Nalog / lknpd.nalog.ru)
Author-email: NaloGO Contributors <contributors@nalogo.com>
License: MIT
Project-URL: Homepage, https://github.com/your-org/nalogo
Project-URL: Documentation, https://github.com/your-org/nalogo#readme
Project-URL: Repository, https://github.com/your-org/nalogo
Project-URL: Bug Reports, https://github.com/your-org/nalogo/issues
Project-URL: Changelog, https://github.com/your-org/nalogo/blob/main/CHANGELOG.md
Project-URL: Original PHP Library, https://github.com/shoman4eg/moy-nalog
Keywords: nalog,tax,self-employed,api,async,russia,moy-nalog,freelancer,invoice,receipt,lknpd,—Å–∞–º–æ–∑–∞–Ω—è—Ç—ã–π
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Office/Business :: Financial :: Accounting
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Typing :: Typed
Classifier: Framework :: AsyncIO
Classifier: Framework :: Pydantic
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: httpx>=0.25.0
Requires-Dist: pydantic<3.0.0,>=2.0.0
Requires-Dist: python-dotenv>=1.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: respx>=0.20.0; extra == "dev"
Requires-Dist: ruff>=0.1.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: coverage>=7.0.0; extra == "dev"
Requires-Dist: bandit[toml]>=1.7.0; extra == "dev"
Requires-Dist: build>=1.0.0; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"
Dynamic: license-file

# üèõÔ∏è NaloGO

[![PyPI version](https://badge.fury.io/py/nalogo.svg)](https://badge.fury.io/py/nalogo)
[![Python 3.11+](https://img.shields.io/badge/python-3.11+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Async](https://img.shields.io/badge/async-supported-green.svg)](https://docs.python.org/3/library/asyncio.html)
[![Coverage](https://img.shields.io/badge/coverage-88%25-brightgreen.svg)](https://github.com/Rusik636/nalogo)

**–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API —Å–µ—Ä–≤–∏—Å–∞ —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö "–ú–æ–π –Ω–∞–ª–æ–≥" (lknpd.nalog.ru)**

–ü–æ–ª–Ω—ã–π –ø–æ—Ä—Ç PHP –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ [shoman4eg/moy-nalog](https://github.com/shoman4eg/moy-nalog) —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π, –ø–æ–ª–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –∏ 88% –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Ç–µ—Å—Ç–∞–º–∏.

## üöÄ –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- ‚úÖ **–ò–ù–ù/–ø–∞—Ä–æ–ª—å** - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- ‚úÖ **SMS-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è** - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞  
- ‚úÖ **–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤** - –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è –ø—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏
- ‚úÖ **–ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–∞–π–ª

### üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞–º–∏
- ‚úÖ **–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–æ–≤** - –æ–¥–∏–Ω–æ—á–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
- ‚úÖ **–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
- ‚úÖ **–û—Ç–º–µ–Ω–∞ —á–µ–∫–æ–≤** - —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –ø—Ä–∏—á–∏–Ω –æ—Ç–º–µ–Ω—ã
- ‚úÖ **–¢–æ—á–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞** - decimal.Decimal –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤

### üßæ –†–∞–±–æ—Ç–∞ —Å —á–µ–∫–∞–º–∏
- ‚úÖ **JSON –¥–∞–Ω–Ω—ã–µ** - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–∫–µ
- ‚úÖ **URL –ø–µ—á–∞—Ç–∏** - –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏ —á–µ–∫–æ–≤
- ‚úÖ **–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏

### üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ API
- ‚úÖ **–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
- ‚úÖ **–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏
- ‚úÖ **–ù–∞–ª–æ–≥–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å** - –∏—Å—Ç–æ—Ä–∏—è –∏ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –û–ö–¢–ú–û

### üõ°Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- ‚úÖ **88% –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏** - comprehensive test suite
- ‚úÖ **–¢–∏–ø–∏–∑–∞—Ü–∏—è mypy** - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
- ‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ** - –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ **CI/CD pipeline** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –ò–∑ PyPI (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)

```bash
pip install nalogo
```

### –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
git clone https://github.com/Rusik636/nalogo.git
cd nalogo
pip install -e ".[dev]"
```

## üîß –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞

```python
import asyncio
from nalogo import Client

# –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
client = Client()

# –° –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
client = Client(
    base_url="https://lknpd.nalog.ru/api",  # –ö–∞—Å—Ç–æ–º–Ω—ã–π endpoint
    storage_path="./tokens.json",           # –§–∞–π–ª –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
    device_id="my-device-123"               # –ö–∞—Å—Ç–æ–º–Ω—ã–π ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
)
```

### üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è

#### –ü–æ –ò–ù–ù –∏ –ø–∞—Ä–æ–ª—é

```python
async def auth_with_inn():
    client = Client()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    token = await client.create_new_access_token("123456789012", "your_password")
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    await client.authenticate(token)
    
    print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    return client
```

#### –ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (SMS)

```python
async def auth_with_phone():
    client = Client()
    
    # –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å SMS –∫–æ–¥–∞
    phone = "79001234567"
    challenge = await client.create_phone_challenge(phone)
    
    print(f"üì± SMS –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –¢–æ–∫–µ–Ω: {challenge['challengeToken']}")
    
    # –®–∞–≥ 2: –í–≤–æ–¥ SMS –∫–æ–¥–∞ (–ø–æ–ª—É—á–∞–µ—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    sms_code = input("–í–≤–µ–¥–∏—Ç–µ SMS –∫–æ–¥: ")
    
    # –®–∞–≥ 3: –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    token = await client.create_new_access_token_by_phone(
        phone, challenge['challengeToken'], sms_code
    )
    
    # –®–∞–≥ 4: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    await client.authenticate(token)
    
    print("‚úÖ SMS –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    return client
```

### üí∞ –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–æ–≤

#### –ü—Ä–æ—Å—Ç–æ–π —á–µ–∫

```python
async def create_simple_receipt():
    client = await auth_with_inn()  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    
    income_api = client.income()
    
    result = await income_api.create(
        name="–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
        amount=5000.00,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ Decimal
        quantity=1
    )
    
    receipt_uuid = result["approvedReceiptUuid"]
    print(f"‚úÖ –ß–µ–∫ —Å–æ–∑–¥–∞–Ω: {receipt_uuid}")
    
    return receipt_uuid
```

#### –ß–µ–∫ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–∑–∏—Ü–∏—è–º–∏

```python
from nalogo.dto.income import IncomeServiceItem
from decimal import Decimal

async def create_multi_item_receipt():
    client = await auth_with_inn()
    income_api = client.income()
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏
    services = [
        IncomeServiceItem(
            name="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-—Å–∞–π—Ç–∞",
            amount=Decimal("50000.00"),
            quantity=Decimal("1")
        ),
        IncomeServiceItem(
            name="–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞",
            amount=Decimal("5000.00"),
            quantity=Decimal("3")  # 3 –º–µ—Å—è—Ü–∞
        )
    ]
    
    result = await income_api.create_multiple_items(services)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—É–º–º—É: 50000 + (5000 * 3) = 65000
    total = sum(item.amount * item.quantity for item in services)
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total}")
    
    return result["approvedReceiptUuid"]
```

#### –ß–µ–∫ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞

```python
from nalogo.dto.income import IncomeClient, IncomeType

async def create_legal_entity_receipt():
    client = await auth_with_inn()
    income_api = client.income()
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–º –ª–∏—Ü–µ
    legal_client = IncomeClient(
        contact_phone="+79001234567",
        display_name="–û–û–û '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è'",
        income_type=IncomeType.FROM_LEGAL_ENTITY,
        inn="1234567890"  # –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    )
    
    result = await income_api.create(
        name="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ü–û –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É",
        amount=250000.00,
        quantity=1,
        client=legal_client
    )
    
    print(f"üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–µ–∫: {result['approvedReceiptUuid']}")
    return result
```

### ‚ùå –û—Ç–º–µ–Ω–∞ —á–µ–∫–æ–≤

```python
from nalogo.dto.income import CancelCommentType

async def cancel_receipt():
    client = await auth_with_inn()
    income_api = client.income()
    
    receipt_uuid = "your-receipt-uuid"
    
    result = await income_api.cancel(
        receipt_uuid=receipt_uuid,
        comment_type=CancelCommentType.INCORRECT_DATA,
        request_time=datetime.now(timezone.utc)
    )
    
    print(f"‚ùå –ß–µ–∫ –æ—Ç–º–µ–Ω–µ–Ω: {result}")
```

### üßæ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ–∫–æ–≤

```python
async def get_receipt_info():
    client = await auth_with_inn()
    receipt_api = client.receipt()
    
    receipt_uuid = "your-receipt-uuid"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ JSON –¥–∞–Ω–Ω—ã—Ö
    receipt_data = await receipt_api.json(receipt_uuid)
    print(f"üìã –°—É–º–º–∞: {receipt_data.get('totalAmount')}")
    print(f"üìÖ –î–∞—Ç–∞: {receipt_data.get('operationTime')}")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –ø–µ—á–∞—Ç–∏
    print_url = receipt_api.print_url(receipt_uuid)
    print(f"üñ®Ô∏è –ü–µ—á–∞—Ç—å: {print_url}")
```

### üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ API

#### –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ

```python
async def get_user_info():
    client = await auth_with_inn()
    user_api = client.user()
    
    user_data = await user_api.get()
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data['displayName']}")
    print(f"üìã –ò–ù–ù: {user_data['inn']}")
    print(f"üìß Email: {user_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
    print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}")
```

#### –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã

```python
async def manage_payment_types():
    client = await auth_with_inn()
    payment_api = client.payment_type()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
    payment_types = await payment_api.table()
    print(f"üí≥ –ù–∞–π–¥–µ–Ω–æ {len(payment_types)} —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã")
    
    # –ü–æ–∏—Å–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞
    favorite = await payment_api.favorite()
    if favorite:
        print(f"‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–π: {favorite['bankName']}")
    else:
        print("‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
```

#### –ù–∞–ª–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

```python
async def get_tax_info():
    client = await auth_with_inn()
    tax_api = client.tax()
    
    # –¢–µ–∫—É—â–∏–µ –Ω–∞–ª–æ–≥–∏
    tax_data = await tax_api.get()
    print("üìä –ù–∞–ª–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
    
    # –ò—Å—Ç–æ—Ä–∏—è –ø–æ –û–ö–¢–ú–û
    history = await tax_api.history(oktmo="12345678")
    print(f"üìà –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–ª—É—á–µ–Ω–∞")
    
    # –ü–ª–∞—Ç–µ–∂–∏ (—Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ)
    payments = await tax_api.payments(oktmo="12345678", only_paid=True)
    print(f"üí∏ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ–ª—É—á–µ–Ω–∞")
```

## üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤

```python
# ‚ùå –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ - —Ç–æ–∫–µ–Ω—ã –≤ –ø–∞–º—è—Ç–∏
client = Client()

# ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
client = Client(storage_path="./secure_tokens.json")

# ‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import os
from pathlib import Path

token_path = Path(os.getenv("TOKEN_STORAGE_PATH", "./tokens.json"))
client = Client(storage_path=str(token_path))
```

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

```python
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("nalogo")

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–∞—Å–∫–∏—Ä—É–µ—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
# - –¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞
# - –ü–∞—Ä–æ–ª–∏
# - –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
# - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

```python
from nalogo.exceptions import (
    UnauthorizedException,
    ValidationException,
    PhoneException,
    DomainException
)

async def safe_operation():
    try:
        client = Client()
        token = await client.create_new_access_token("inn", "password")
        await client.authenticate(token)
        
    except UnauthorizedException:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ò–ù–ù –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
    except ValidationException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    except PhoneException as e:
        print(f"üì± –û—à–∏–±–∫–∞ SMS: {e}")
    except DomainException as e:
        print(f"üö® API –æ—à–∏–±–∫–∞: {e}")
        # e.response —Å–æ–¥–µ—Ä–∂–∏—Ç httpx.Response –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
```

## ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env`:

```env
# API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NALOG_BASE_URL=https://lknpd.nalog.ru/api
NALOG_DEVICE_ID=my-unique-device-id

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
TOKEN_STORAGE_PATH=./secure/tokens.json

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
NALOG_INN=123456789012
NALOG_PASSWORD=your_secure_password
```

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:

```python
import os
from dotenv import load_dotenv

load_dotenv()

client = Client(
    base_url=os.getenv("NALOG_BASE_URL"),
    device_id=os.getenv("NALOG_DEVICE_ID"),
    storage_path=os.getenv("TOKEN_STORAGE_PATH")
)
```

### –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è HTTP –∫–ª–∏–µ–Ω—Ç–∞

```python
from nalogo import Client
from nalogo._http import AsyncHTTPClient

# –ö–ª–∏–µ–Ω—Ç —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
class CustomHTTPClient(AsyncHTTPClient):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        self._client.timeout = 60.0
        
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
client = Client()
client.http_client = CustomHTTPClient("https://lknpd.nalog.ru/api")
```

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
pip install -e ".[dev]"
```

### –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

```bash
# –í—Å–µ —Ç–µ—Å—Ç—ã
pytest

# –° –ø–æ–∫—Ä—ã—Ç–∏–µ–º
pytest --cov=nalogo --cov-report=html

# –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Å—Ç—ã
pytest tests/test_auth_async.py -v

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
pytest tests/test_income_async.py::TestIncomeAPI::test_create_success -v
```

### –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤

```bash
# –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
python examples/async_example.py

# –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å –º–æ–∫–∞–º–∏
python demo.py
```

## üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Å PHP –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

### –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ API

| PHP | Python | –û–ø–∏—Å–∞–Ω–∏–µ |
|-----|--------|----------|
| `$client->createNewAccessToken()` | `await client.create_new_access_token()` | –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ò–ù–ù |
| `$client->income()->create()` | `await client.income().create()` | –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞ |
| `$client->receipt()->printUrl()` | `client.receipt().print_url()` | URL –ø–µ—á–∞—Ç–∏ |
| `$paymentTypes->favorite()` | `await client.payment_type().favorite()` | –ò–∑–±—Ä–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã |

### –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è

#### 1. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å
```php
// PHP - —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
$result = $client->income()->create($name, $amount, $quantity);
```

```python
# Python - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
result = await client.income().create(name, amount, quantity)
```

#### 2. –¢–∏–ø–∏–∑–∞—Ü–∏—è
```php
// PHP - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
$amount = "100.50"; // –°—Ç—Ä–æ–∫–∞
$quantity = 2; // –ß–∏—Å–ª–æ
```

```python
# Python - —Å—Ç—Ä–æ–≥–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
from decimal import Decimal

amount = Decimal("100.50")  # Decimal –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
quantity = Decimal("2")     # Decimal –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
```

#### 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
```php
// PHP - –∏—Å–∫–ª—é—á–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞
try {
    $result = $client->income()->create(...);
} catch (DomainException $e) {
    // –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
}
```

```python
# Python - —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
try:
    result = await client.income().create(...)
except ValidationException as e:
    # –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
except UnauthorizedException as e:
    # –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
```

### –®–∞–±–ª–æ–Ω –º–∏–≥—Ä–∞—Ü–∏–∏

```python
# –®–∞–±–ª–æ–Ω –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ PHP –∫–æ–¥–∞
async def migrate_from_php():
    # 1. –ó–∞–º–µ–Ω–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π
    # PHP: $client = new ApiClient();
    client = Client()
    
    # 2. –î–æ–±–∞–≤—å—Ç–µ await –∫–æ –≤—Å–µ–º API –≤—ã–∑–æ–≤–∞–º
    # PHP: $token = $client->createNewAccessToken($inn, $password);
    token = await client.create_new_access_token(inn, password)
    
    # 3. –ó–∞–º–µ–Ω–∏—Ç–µ –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã –Ω–∞ –æ–±—ä–µ–∫—Ç—ã DTO
    # PHP: $client = ['contactPhone' => $phone, ...];
    from nalogo.dto.income import IncomeClient
    client_data = IncomeClient(contact_phone=phone, ...)
    
    # 4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Decimal –¥–ª—è –¥–µ–Ω–µ–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    # PHP: $amount = 100.50;
    from decimal import Decimal
    amount = Decimal("100.50")
    
    # 5. –û–±–Ω–æ–≤–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    # PHP: catch (DomainException $e)
    # Python: except DomainException as e
```

## üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

### –ë–µ–Ω—á–º–∞—Ä–∫–∏

| –û–ø–µ—Ä–∞—Ü–∏—è | PHP (sync) | Python (async) | –£–ª—É—á—à–µ–Ω–∏–µ |
|----------|------------|----------------|-----------|
| –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è | ~2.1s | ~0.8s | 2.6x |
| –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞ | ~1.5s | ~0.6s | 2.5x |
| 10 —á–µ–∫–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ | ~15s | ~6s | 2.5x |
| 10 —á–µ–∫–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ | ~15s | ~2s | 7.5x |

### –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫

```python
import asyncio
from nalogo import Client

async def bulk_receipts():
    client = await auth_with_inn()
    income_api = client.income()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —á–µ–∫–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    tasks = []
    for i in range(100):
        task = income_api.create(f"–£—Å–ª—É–≥–∞ {i}", 1000.00, 1)
        tasks.append(task)
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    results = await asyncio.gather(*tasks, return_exceptions=True)
    
    success_count = sum(1 for r in results if not isinstance(r, Exception))
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {success_count} –∏–∑ {len(tasks)} —á–µ–∫–æ–≤")
```

## ‚ö†Ô∏è –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è

### API –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
- **Invoice API** –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω (–ø–æ–º–µ—á–µ–Ω –∫–∞–∫ "Not implemented" –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π PHP –±–∏–±–ª–∏–æ—Ç–µ–∫–µ)
- **API –≤–µ—Ä—Å–∏–∏** v1/v2 endpoints –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏
- **–õ–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤** –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –ú–æ–π –ù–∞–ª–æ–≥

### –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
- **Python 3.11+** –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ async —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
- **Pydantic v2** —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- **httpx** —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è 0.25.0+

## ü§ù –í–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
git clone https://github.com/Rusik636/nalogo.git
cd nalogo

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
python -m venv .venv
source .venv/bin/activate  # Linux/Mac
# –∏–ª–∏
.venv\Scripts\activate     # Windows

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
pip install -e ".[dev]"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit —Ö—É–∫–æ–≤
pre-commit install
```

### –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∫–∞—á–µ—Å—Ç–≤–∞

```bash
# –õ–∏–Ω—Ç–∏–Ω–≥
ruff check .

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
black .

# –¢–∏–ø–∏–∑–∞—Ü–∏—è
mypy nalogo/

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
bandit -r nalogo/

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–∫–∞–∫ –≤ CI)
pytest --cov=nalogo --cov-fail-under=80
```

### –°–æ–∑–¥–∞–Ω–∏–µ PR

1. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è —Ñ–∏—á–∏: `git checkout -b feature/amazing-feature`
2. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç
4. –°–æ–∑–¥–∞–π—Ç–µ PR —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License - –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª–µ [LICENSE](LICENSE).

## üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏

- **Artem Dubinin** ([shoman4eg](https://github.com/shoman4eg)) - –∞–≤—Ç–æ—Ä –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π PHP –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
- **–ö–æ–º–∞–Ω–¥–∞ httpx** - –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π async HTTP –∫–ª–∏–µ–Ω—Ç
- **–ö–æ–º–∞–Ω–¥–∞ Pydantic** - –∑–∞ –º–æ—â–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
- **–°–æ–æ–±—â–µ—Å—Ç–≤–æ Python** - –∑–∞ async/await –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- üìã **Issues**: [GitHub Issues](https://github.com/Rusik636/nalogo/issues)
- üìñ **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: [README.md](README.md)
- üí¨ **–û–±—Å—É–∂–¥–µ–Ω–∏—è**: [GitHub Discussions](https://github.com/Rusik636/nalogo/discussions)
- üìß **Email**: ruslan.prokshin@mail.ru

---

**–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è Python-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞**
