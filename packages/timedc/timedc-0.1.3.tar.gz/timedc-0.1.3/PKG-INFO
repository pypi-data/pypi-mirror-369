Metadata-Version: 2.4
Name: timedc
Version: 0.1.3
Summary: Утилита для генерации Discord timestamp
Author: Prostoron
License: MIT License
        
        Copyright (c) 2025 ProstoRon
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# dctime

Утилита для генерации Discord timestamp с удобным синтаксисом для указания времени и формата отображения.

## Установка

```bash
pip install timedc
```

## Использование

```python
from timedc import getTime

# Примеры:
print(getTime("10m"))      # через 10 минут
print(getTime("2h", "R")) # через 2 часа, формат "относительно"
print(getTime("3d", "f")) # через 3 дня, полная дата
```

## Функции

### `getTime(duration: str, fmt: str = '') -> str`

Генерация Discord timestamp.

**Параметры:**

* `duration`: строка с временем (например "10m", "2h", "3d").

  * **s** — секунды
  * **m** — минуты
  * **h** — часы
  * **d** — дни
  * **w** — недели

* `fmt`: формат отображения в Discord. Возможные значения:

  * `t` — короткое время
  * `T` — длинное время
  * `d` — короткая дата
  * `D` — длинная дата
  * `f` — короткая дата + время
  * `F` — полная дата + время
  * `R` — относительное время (например "через 5 минут")
  * Пустая строка — стандартное отображение

**Возвращает:**

Строку вида `<t:UNIX:fmt>` для вставки в Discord.

**Примеры:**

```python
getTime("10m")      # <t:UNIX>
getTime("2h", "R") # <t:UNIX:R>
getTime("3d", "f") # <t:UNIX:f>
```

## Ошибки

* Если передан неверный формат времени (например "10x" или "5"), выбрасывается `ValueError`.
* Если указан неверный формат отображения, выбрасывается `ValueError`.

## Примечание

Этот пакет полезен для быстрого формирования timestamp'ов для сообщений Discord, поддерживающих динамическое отображение времени.
