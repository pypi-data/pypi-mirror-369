{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(mv:*)",
      "Bash(./.claude/scripts/framework-state-update.sh:*)",
      "Bash(./.claude/scripts/enforce-quality-gates.sh:*)",
      "Bash(bash:*)",
      "Bash(./.claude/scripts/auto-archive.sh:*)",
      "Bash(tree:*)",
      "Bash(/workspace/.claude/scripts/framework-state-update.sh:*)",
      "Bash(uv run:*)",
      "Bash(uv sync:*)",
      "Bash(uv venv:*)",
      "Bash(uv add:*)",
      "Bash(uvx:*)",
      "Bash(uv build)",
      "Bash(unzip:*)",
      "Bash(python:*)",
      "Bash(cc archive:*)",
      "Bash(claudecraftsman registry:*)",
      "Bash(claudecraftsman validate framework)",
      "Bash(git rm:*)",
      "Bash(true)",
      "Bash(git restore:*)",
      "Bash(claudecraftsman state document-created \"PLAN-mlp-completion-2025-08-08.md\" \"Plan\" \"docs/current/plans/\" \"MLP completion implementation plan\")",
      "Bash(cc state:*)",
      "Bash(FRAMEWORK_TEST_BYPASS=1 uv run cc test quick --source=/workspace)",
      "Bash(CC_TEST_BYPASS=1 uv run cc test:*)",
      "Bash(uv init:*)",
      "Bash(test:*)",
      "Bash(source:*)",
      "Bash(cc:*)",
      "Bash(deactivate)",
      "Bash(pre-commit:*)",
      "mcp__github__get_me",
      "Bash(git remote get-url:*)",
      "mcp__github__list_workflows",
      "mcp__github__list_workflow_runs",
      "mcp__github__list_workflow_jobs",
      "mcp__github__get_job_logs",
      "Bash(ruff check:*)",
      "mcp__github__get_workflow_run",
      "Bash(sed:*)",
      "Bash(uv pip:*)",
      "Bash(git fetch:*)",
      "Bash(git tag:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(uv tool run twine check:*)",
      "Bash(uv:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "time",
    "git",
    "serena",
    "sequential-thinking",
    "context7",
    "magic",
    "playwright",
    "filesystem",
    "fetch",
    "searxng",
    "memgraph",
    "crawl4ai",
    "docker"
  ]
}
