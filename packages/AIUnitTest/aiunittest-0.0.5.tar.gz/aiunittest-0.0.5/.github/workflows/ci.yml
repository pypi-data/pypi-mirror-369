name: CI Pipelines

on:
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup & Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Setup Python 3.13 (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip # ativa cache de dependencies pip :contentReference[oaicite:1]{index=1}

      - name: Cache pre-commit environment
        uses: actions/cache@v4
        id: precommit-cache
        with:
          path: ~/.cache/pre-commit/
          key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            precommit-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install project
        run: pip install -e .

      - name: Run pre-commit hooks
        run: pre-commit run --show-diff-on-failure --all-files

  test:
    name: Tests & Coverage
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install project
        run: pip install -e .

      - name: Run pytest with coverage
        run: |
          pytest --cov=src --cov-report=xml --cov-fail-under=80

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Get Cover
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}

  dependabot:
    name: Dependabot PR Validation
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install project
        run: pip install -e .

      - name: Run tests
        run: pytest

      - name: Add label for dependencies
        id: fetch-metadata
        uses: dependabot/fetch-metadata@v2

      - name: Label dependabot PR
        if: steps.fetch-metadata.outputs.dependency-type == 'direct:production'
        run: gh pr edit ${{ github.event.pull_request.html_url }} --add-label "dependencies"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
