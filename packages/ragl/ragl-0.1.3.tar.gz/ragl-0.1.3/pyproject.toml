[tool.mypy]
files = ["ragl/"]
show_error_codes = true

#[tool.pylint]
#output-format = "json"

[tool.ruff]
#include = ["ragl"]
extend-exclude = ["tests/"]
#output-format = "json"
line-length = 80

[tool.ruff.lint]
preview = true
ignore = ["D102", "D203", "D212", "D413", "E272"]
extend-select = ["W", "E", "D"]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["py.typed"]

[project]
name = "ragl"
version = "0.1.3"
dependencies = [
    "bleach",
    "numpy",
    "tiktoken",
]
requires-python = ">=3.11"
authors = [
    {name = "Andrew Schenck", email = "aschenck@gmail.com"},
]
description= "ragl: retrieval-augmented generation (RAG) for text."
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = [
    "rag",
    "retrieval-augmented-generation",
    "vector-search",
    "embeddings",
    "text-chunking",
    "semantic-search",
    "llm",
    "nlp",
    "information-retrieval",
    "redis",
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
test = [
    "coverage",
    "mypy",
    "pycodestyle",
    "pydocstyle",
    "pylint",
    "pytest",
    "pytest-cov",
    "ruff",
]
redis = [
    "redis",
    "redisvl",
]
transformers = [
    "psutil",
    "sentence-transformers",
]
all = [
    "ragl[redis]",
    "ragl[transformers]",
]
