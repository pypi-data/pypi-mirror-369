# Cursor Project Rule: Using Ty for Type Checking
---
description: |
  All Python type checking in the zenodotos project must use the `ty` tool. Ty provides fast, incremental, and user-friendly type checking for Python code, making it easy to enforce and maintain type safety across the codebase.

rules:
  - Use `ty check` to perform type checking on all Python code.
  - Run type checks before committing changes.
  - Fix all type errors before proceeding.
  - Configure ty settings in pyproject.toml if needed.

configuration:
  type_check:
    command: ty check .

rationale: |
  Ty is a modern, fast, and incremental type checker for Python. It offers:
  - Rapid feedback and incremental checking for large codebases
  - User-friendly error messages
  - Compatibility with type annotations and gradual typing
  - Easy integration with modern Python workflows

  Using Ty ensures type safety, reduces bugs, and improves code maintainability throughout the project.
