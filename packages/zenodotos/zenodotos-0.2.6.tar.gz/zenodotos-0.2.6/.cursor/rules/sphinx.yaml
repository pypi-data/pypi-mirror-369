# Cursor Project Rule: Using Sphinx for Documentation
---
description: |
  All project documentation must be generated using Sphinx. Sphinx provides comprehensive documentation generation capabilities, supporting multiple output formats (HTML, PDF, etc.) and extensive customization options. Documentation should be primarily sourced from code docstrings, comments, and supporting Markdown files.

rules:
  - Write all docstrings in Google style format
  - Include type hints in docstrings
  - Document all public APIs, classes, and functions
  - Keep documentation up to date with code changes
  - Use Markdown for additional documentation files
  - Run documentation build before committing changes
  - Fix all documentation warnings before proceeding

configuration:
  build:
    command: sphinx-build
    options:
      - -b html
      - docs/source
      - docs/build/html
  check:
    command: sphinx-build
    options:
      - -b linkcheck
      - docs/source
      - docs/build/linkcheck

rationale: |
  Sphinx is the de facto standard for Python documentation. It offers:
  - Automatic API documentation from docstrings
  - Support for multiple output formats (HTML, PDF, etc.)
  - Cross-referencing between documentation sections
  - Integration with version control
  - Extensive customization options
  - Support for multiple languages and formats
  - Built-in search functionality
  - Link checking and validation

  Using Sphinx ensures consistent, maintainable, and professional documentation that can be easily kept in sync with the codebase.
