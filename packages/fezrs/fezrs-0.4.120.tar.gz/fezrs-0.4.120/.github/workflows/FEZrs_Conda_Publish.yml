name: Conda Publish

on:
  workflow_run:
    workflows: ["PyPI Publish"]
    types:
      - completed

jobs:
  build-conda:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Miniconda with Mamba
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"
          miniforge-variant: Miniforge3
          mamba: true

      - name: Install conda-build and anaconda-client
        shell: bash -l {0}
        run: |
          mamba install -y conda-build anaconda-client

      - name: Extract version from .bumpversion.cfg
        shell: bash -l {0}
        run: |
          VERSION=$(python -c "from configparser import ConfigParser; cfg=ConfigParser(); cfg.read('.bumpversion.cfg'); print(cfg['bumpversion']['current_version'])")
          echo "FEZRS_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Wait for PyPI source package availability
        shell: bash -l {0}
        run: |
          URL="https://files.pythonhosted.org/packages/source/f/fezrs/fezrs-${{ env.FEZRS_VERSION }}.tar.gz"
          for i in {1..10}; do
            if curl --head --silent --fail "$URL"; then
              echo "Source package is available!"
              break
            else
              echo "Source package not found, waiting 30 seconds..."
              sleep 30
            fi
          done

      - name: Download sha256 hash of source package
        shell: bash -l {0}
        run: |
          SHA256=$(curl -sL https://files.pythonhosted.org/packages/source/f/fezrs/fezrs-${{ env.FEZRS_VERSION }}.tar.gz | sha256sum | awk '{print $1}')
          echo "SHA256_HASH=${SHA256}" >> $GITHUB_ENV

      - name: Build Conda package
        shell: bash -l {0}
        env:
          FEZRS_VERSION: ${{ env.FEZRS_VERSION }}
          SHA256_HASH: ${{ env.SHA256_HASH }}
        run: |
          conda-build recip/

      - name: Upload to Anaconda Cloud
        shell: bash -l {0}
        env:
          ANACONDA_API_KEY: ${{ secrets.ANACONDA_API_KEY }}
        run: |
          anaconda -t $ANACONDA_API_KEY upload $(conda-build recip/ --output) --force
