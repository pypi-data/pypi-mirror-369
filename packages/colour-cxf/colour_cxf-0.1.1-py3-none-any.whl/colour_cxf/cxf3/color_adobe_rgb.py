"""This file was generated by xsdata, v25.4, on 2025-05-21 12:08:38

Generator: DataclassGenerator
See: https://xsdata.readthedocs.io/
"""

from __future__ import annotations

from dataclasses import dataclass, field

__NAMESPACE__ = "http://colorexchangeformat.com/CxF3-core"


@dataclass
class ColorAdobeRgb:
    """
    ColorSpace type that holds Adobe RGB values.

    Parameters
    ----------
    max_range
        Optional parameter which defines the maximum range of values
        represented if based on values other than normal. For instance, RGB
        values for monitor display are typically between 0-255 inclusive (8
        bit resolution per channel), but lower or higher resolutions are
        possible.
    r
    g
    b
    alpha
        Optional Alpha channel is expressed as a real number and must be
        within 0.0 (inclusive) and 1.0 (inclusive).
    profile_specification
    name
    color_specification
    """

    class Meta:
        name = "ColorAdobeRGB"
        namespace = "http://colorexchangeformat.com/CxF3-core"

    max_range: None | int = field(
        default=None,
        metadata={
            "name": "MaxRange",
            "type": "Element",
        },
    )
    r: None | int = field(
        default=None,
        metadata={
            "name": "R",
            "type": "Element",
            "required": True,
        },
    )
    g: None | int = field(
        default=None,
        metadata={
            "name": "G",
            "type": "Element",
            "required": True,
        },
    )
    b: None | int = field(
        default=None,
        metadata={
            "name": "B",
            "type": "Element",
            "required": True,
        },
    )
    alpha: None | float = field(
        default=None,
        metadata={
            "name": "Alpha",
            "type": "Element",
            "min_inclusive": 0.0,
            "max_inclusive": 1.0,
        },
    )
    profile_specification: None | str = field(
        default=None,
        metadata={
            "name": "ProfileSpecification",
            "type": "Attribute",
        },
    )
    name: None | str = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Attribute",
        },
    )
    color_specification: None | str = field(
        default=None,
        metadata={
            "name": "ColorSpecification",
            "type": "Attribute",
            "required": True,
        },
    )
