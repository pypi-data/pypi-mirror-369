"""This file was generated by xsdata, v25.4, on 2025-05-21 12:08:38

Generator: DataclassGenerator
See: https://xsdata.readthedocs.io/
"""

from __future__ import annotations

from dataclasses import dataclass, field

from colour_cxf.cxf3.device import Device
from colour_cxf.cxf3.geometry_choice import GeometryChoice
from colour_cxf.cxf3.luminance_units_type import LuminanceUnitsType
from colour_cxf.cxf3.measurement_type import MeasurementType
from colour_cxf.cxf3.wavelength_range import WavelengthRange

__NAMESPACE__ = "http://colorexchangeformat.com/CxF3-core"


@dataclass
class MeasurementSpec:
    """
    Portion of the colorspecification which contains information related to how
    color data was measured (geometry, device, etc.).

    Parameters
    ----------
    measurement_type
    geometry_choice
    wavelength_range
    luminance_units_type
        Optional units that measurement derived data is given in (typically
        normalized for Reflectance data and cd/m2 for emissive data values)
    calibration_standard
        Optional string noting what calibration standard this data is
        referenced to (ex: NIST or XRGA)
    aperture
        Optional string noting size of aperture either as a descriptive
        string such as LAV,MAV,SAV or as a physical dimension in mm.
    backing
        Optional string noting what backing or background was used.
    bandpass_corrected
        TRUE if spectral data (or data derived from it) has been corrected
        for Bandpass.
    device
    """

    class Meta:
        namespace = "http://colorexchangeformat.com/CxF3-core"

    measurement_type: None | MeasurementType = field(
        default=None,
        metadata={
            "name": "MeasurementType",
            "type": "Element",
            "required": True,
        },
    )
    geometry_choice: None | GeometryChoice = field(
        default=None,
        metadata={
            "name": "GeometryChoice",
            "type": "Element",
            "required": True,
        },
    )
    wavelength_range: None | WavelengthRange = field(
        default=None,
        metadata={
            "name": "WavelengthRange",
            "type": "Element",
        },
    )
    luminance_units_type: None | LuminanceUnitsType = field(
        default=None,
        metadata={
            "name": "LuminanceUnitsType",
            "type": "Element",
        },
    )
    calibration_standard: None | str = field(
        default=None,
        metadata={
            "name": "CalibrationStandard",
            "type": "Element",
        },
    )
    aperture: None | str = field(
        default=None,
        metadata={
            "name": "Aperture",
            "type": "Element",
        },
    )
    backing: None | str = field(
        default=None,
        metadata={
            "name": "Backing",
            "type": "Element",
        },
    )
    bandpass_corrected: None | bool = field(
        default=None,
        metadata={
            "name": "BandpassCorrected",
            "type": "Element",
        },
    )
    device: None | Device = field(
        default=None,
        metadata={
            "name": "Device",
            "type": "Element",
        },
    )
