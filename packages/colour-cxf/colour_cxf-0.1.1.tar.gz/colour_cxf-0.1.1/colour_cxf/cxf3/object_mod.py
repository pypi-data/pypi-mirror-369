"""This file was generated by xsdata, v25.4, on 2025-05-21 12:08:38

Generator: DataclassGenerator
See: https://xsdata.readthedocs.io/
"""

from __future__ import annotations

from dataclasses import dataclass, field

from colour_cxf.cxf3.color_difference_values import ColorDifferenceValues
from colour_cxf.cxf3.color_values import ColorValues
from colour_cxf.cxf3.creation_date import CreationDate
from colour_cxf.cxf3.device_color_values import DeviceColorValues
from colour_cxf.cxf3.physical_attributes import PhysicalAttributes
from colour_cxf.cxf3.tag_collection import TagCollection

__NAMESPACE__ = "http://colorexchangeformat.com/CxF3-core"


@dataclass
class Object:
    """
    The CxF representation for the physical (or conceptual) object which has color
    attributes, physical attributes, and/or other properties.

    Parameters
    ----------
    creation_date
        The creation date/time of the object (and default for measurement
        date/time).
    comment
    color_values
        The collection of all color value elements used to describe one or
        more color measurement instances of this object. Includes Spectral
        data, CIELab data, sRGB data, and other non device specifc color
        space types.
    color_difference_values
        The collection of all color difference value elements used to
        describe one or more color difference values compared to a
        referenced Object (as the standard).
    device_color_values
        The collection of all color value elements used to describe one or
        more device dependent color space descriptions of this object.
        Includes RGB, HTML, CMYK, Recipes and other device specifc color
        space types.
    tag_collection
        Named Collection(s) of Tags (name/value pairs) which allow
        customization or inclusion of additional information regarding this
        object and its properties.
    physical_attributes
        Optional physical attributes that describe certain physical
        characteristics of this object (gloss, target type, substrate type,
        size, weight, quantity, image, etc.)
    object_type
        Type of object represented (Standard, Trial, Target, Substrate,
        Colorant, etc.)
    name
        Non-unique Name of this object (may be empty).
    id
        Unique REFERENCE to this object used for the purpose of referencing
        this item within the CXF file by CustomResources.
    guid
        GUID is a globally unique identifier used to identify and
        distinguish this object instance from other objects which may have
        the same name and other characteristics, and be present in other
        files. The GUID can be useful in identifying when two objects from
        different files had the same origin.
    """

    class Meta:
        namespace = "http://colorexchangeformat.com/CxF3-core"

    creation_date: None | CreationDate = field(
        default=None,
        metadata={
            "name": "CreationDate",
            "type": "Element",
            "required": True,
        },
    )
    comment: None | str = field(
        default=None,
        metadata={
            "name": "Comment",
            "type": "Element",
        },
    )
    color_values: None | ColorValues = field(
        default=None,
        metadata={
            "name": "ColorValues",
            "type": "Element",
        },
    )
    color_difference_values: None | ColorDifferenceValues = field(
        default=None,
        metadata={
            "name": "ColorDifferenceValues",
            "type": "Element",
        },
    )
    device_color_values: None | DeviceColorValues = field(
        default=None,
        metadata={
            "name": "DeviceColorValues",
            "type": "Element",
        },
    )
    tag_collection: list[TagCollection] = field(
        default_factory=list,
        metadata={
            "name": "TagCollection",
            "type": "Element",
        },
    )
    physical_attributes: None | PhysicalAttributes = field(
        default=None,
        metadata={
            "name": "PhysicalAttributes",
            "type": "Element",
        },
    )
    object_type: None | str = field(
        default=None,
        metadata={
            "name": "ObjectType",
            "type": "Attribute",
            "required": True,
        },
    )
    name: None | str = field(
        default=None,
        metadata={
            "name": "Name",
            "type": "Attribute",
            "required": True,
        },
    )
    id: None | str = field(
        default=None,
        metadata={
            "name": "Id",
            "type": "Attribute",
            "required": True,
        },
    )
    guid: None | str = field(
        default=None,
        metadata={
            "name": "GUID",
            "type": "Attribute",
        },
    )
