Metadata-Version: 2.4
Name: raptor-stats
Version: 0.0.3
Summary: Raptor Zonal Statistics
Author-email: Simon Pedro Gonzalez <simon.pedro.g@gmail.com>
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: affine>=2.4.0
Requires-Dist: geopandas>=1.0.1
Requires-Dist: rasterio>=1.4.3
Requires-Dist: rtree>=1.4.0
Provides-Extra: dev
Requires-Dist: tqdm>=4.67.1; extra == "dev"
Requires-Dist: rasterstats>=0.20.0; extra == "dev"
Requires-Dist: xarray>=2025.1.1; extra == "dev"
Requires-Dist: line-profiler>=4.2.0; extra == "dev"
Requires-Dist: memory-profiler>=0.61.0; extra == "dev"
Requires-Dist: ruff>=0.11.2; extra == "dev"
Requires-Dist: seaborn>=0.13.2; extra == "dev"
Requires-Dist: pyqt6>=6.8.0; extra == "dev"
Requires-Dist: rasterstats>=0.20.0; extra == "dev"
Requires-Dist: psutil>=7.0.0; extra == "dev"
Requires-Dist: matplotlib>=3.7.1; extra == "dev"
Requires-Dist: pytest>=8.4.1; extra == "dev"
Requires-Dist: isort>=6.0.1; extra == "dev"
Requires-Dist: black>=25.1.0; extra == "dev"
Requires-Dist: docformatter>=1.7.7; extra == "dev"
Requires-Dist: pydocstyle>=6.3.0; extra == "dev"
Requires-Dist: m2r>=0.3.1; extra == "dev"
Requires-Dist: sphinx>=8.2.3; extra == "dev"
Requires-Dist: sphinx_rtd_theme>=3.0.2; extra == "dev"
Requires-Dist: build>=1.3.0; extra == "dev"
Dynamic: license-file

# raptor-stats

[Raptor (Raster-Vector) Zonal Statistics](https://simonpedrogonzalez.github.io/raptor-stats-docs/index.html)

This package provides a simple interface to calculate zonal statistics using Raptor Methods with a `rasterstats`-like api.

## Installation

You can install the package using pip:

```bash
pip install raptor-stats
```

## Usage

```python
from raptorstats import zonal_stats

# Example usage
stats = zonal_stats("path/to/vector.shp", "path/to/raster.tif", method="scanline")
```
Note: see the [zonal_stats API docs](https://simonpedrogonzalez.github.io/raptor-stats-docs/raptorstats.api.html#raptorstats.api.zonal_stats) for more details on input types and additional parameters.

## Methods

- `scanline`: Uses a scanline algorithm for efficient zonal statistics. Suitable for large datasets in a single pass (large raster, many features).
- `agqt`: Uses the aggregated quadtree method. Suitable for several and repeated queries over a large dataset (large raster, many features).

## Credits

- Author: [Simon Pedro Gonzalez](https://simonpedrogonzalez.github.io/)
- This package is based on the following <a href="_static/mdml_final_report.pdf" download>project</a>, where you can read more about the zonal stats problem, methods and performance comparison.
- This package API and tests are heavily inspired in the [rasterstats](https://github.com/perrygeo/python-rasterstats) package by [Matthew Perry](https://github.com/perrygeo).
