name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install maturin
        run: pip install --upgrade maturin==1.6.0
      - name: Build wheels and sdist
        run: |
          maturin build --release -m pyproject.toml -o dist
          maturin sdist -m pyproject.toml -o dist
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: dist/*

  publish:
    name: Publish to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Flatten artifacts
        run: |
          mkdir -p upload
          find dist -type f -name "*.whl" -exec cp {} upload/ \;
          find dist -type f -name "*.tar.gz" -exec cp {} upload/ \;
      - name: Verify distributions
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade twine
          python -m twine check upload/*
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: upload
