apiVersion: v1
kind: List
metadata:
  name: foo
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      helm.sh/chart: nginx-10.0.1
    name: nginx
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/name: nginx
    strategy:
      rollingUpdate: {}
      type: RollingUpdate
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          helm.sh/chart: nginx-10.0.1
      spec:
        affinity:
          nodeAffinity: null
          podAffinity: null
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/instance: nginx
                      app.kubernetes.io/name: nginx
                  namespaces:
                    - crossplane
                  topologyKey: kubernetes.io/hostname
                weight: 1
        automountServiceAccountToken: false
        containers:
          - env:
              - name: BITNAMI_DEBUG
                value: "false"
            image: docker.io/bitnami/nginx:1.21.6-debian-10-r69
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 6
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: http
              timeoutSeconds: 5
            name: nginx
            ports:
              - containerPort: 8080
                name: http
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 5
              successThreshold: 1
              tcpSocket:
                port: http
              timeoutSeconds: 3
            resources:
              limits: {}
              requests: {}
            volumeMounts: null
        hostIPC: false
        hostNetwork: false
        serviceAccountName: default
        shareProcessNamespace: false