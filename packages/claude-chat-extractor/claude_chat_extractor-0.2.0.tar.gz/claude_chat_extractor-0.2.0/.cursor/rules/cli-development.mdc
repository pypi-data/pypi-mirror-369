
---
globs: "src/claude_conversation_extractor/cli.py"
description: Click framework usage, user experience, and CLI design patterns
---

# CLI Development with Click Framework

## Click Framework Usage
- **Command structure**: Use Click's command decorators for clean CLI organization
- **Option handling**: Use `@click.option` for command-line arguments with proper types
- **Help text**: Provide comprehensive help text for all commands and options
- **Command aliases**: Support multiple command names for user convenience

## CLI Design Principles
- **User experience first**: Design for clarity and ease of use
- **Consistent interface**: Follow established patterns across all commands
- **Progressive disclosure**: Show essential info by default, details on request
- **Error prevention**: Validate inputs early and provide helpful error messages

## Rich Terminal Output
- **Visual enhancement**: Use Rich library for colors, emojis, and formatting
- **Progress indicators**: Show progress for long-running operations
- **Status messages**: Provide clear feedback on operation status
- **Error formatting**: Use colors and formatting to highlight errors and warnings

## Command Structure
- **Main group**: Use `@click.group()` for the main command
- **Subcommands**: Use `@cli.command()` decorator for subcommands
- **Shared options**: Use Click contexts for options shared across commands
- **Command aliases**: Support multiple names: `claude-extract`, `cce`, `claude-conversation-extractor`

## Input Validation
- **File existence**: Check if input files exist before processing
- **File format**: Validate JSON format and structure
- **UUID format**: Validate UUID format for conversation extraction
- **Path validation**: Ensure output paths are writable and valid

## Error Handling
- **User-friendly messages**: Provide clear, actionable error descriptions
- **Context information**: Include relevant details for debugging
- **Recovery suggestions**: Suggest solutions for common problems
- **Verbose mode**: Use `-v` flag for detailed error information

## CLI Commands Reference
- **`extract`**: Extract conversation by UUID and convert to markdown
- **`list-conversations`**: List available conversations in export file
- **Global options**: `--help`, `--version`, `--verbose`
- **Command options**: See help text for each command's specific options

## Rich Library Components
- **Console**: Use `rich.console.Console` for output management
- **Panel**: Use `rich.panel.Panel` for structured information display
- **Text**: Use `rich.text.Text` for formatted text with styles and emojis

## Click Decorator Pattern
- **Main group**: `@click.group()` for the root command
- **Subcommands**: `@cli.command()` for individual commands
- **Options**: `@click.option()` for command-line arguments
- **Version**: `@click.version_option()` for automatic version display
