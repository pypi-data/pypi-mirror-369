# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
deltaI = Symbol('deltaI')
CoefA = Symbol('CoefA')
thetapi = Symbol('thetapi')
thetaprpi = Symbol('thetaprpi')
CoefC = Symbol('CoefC')
CoefD = Symbol('CoefD')
thetas = Symbol('thetas')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
CoefB = Symbol('CoefB')
cG = Symbol('cG')
kappad = Symbol('kappad')
kappau = Symbol('kappau')
thpiALP = Symbol('thpiALP')
m12 = Symbol('m12')
m23 = Symbol('m23')
ma = Symbol('ma')
mpi0 = Symbol('mpi0')
meta = Symbol('meta')
Gammaf0 = Symbol('Gammaf0')
mf0 = Symbol('mf0')
e = deltaI*((-8*CoefA*thetapi + 2*sqrt(2)*CoefA*thetaprpi + 4*CoefC*thetapi + 5*sqrt(2)*CoefC*thetaprpi + 4*CoefD*thetapi + 8*sqrt(2)*CoefD*thetaprpi)*cos(thetas) + 2*(5*sqrt(2)*CoefA*thetapi + 2*CoefA*thetaprpi - sqrt(2)*CoefC*thetapi - CoefC*thetaprpi + sqrt(2)*CoefD*thetapi + 4*CoefD*thetaprpi)*sin(thetas))*((-8*CoefA*deltaI*thetaALP*thetapi + 2*sqrt(2)*CoefA*deltaI*thetaALP*thetaprpi + 2*sqrt(2)*CoefA*deltaI*thetapi*thetaprALP + 8*CoefA*deltaI*thetaprALP*thetaprpi + 4*CoefB*cG*(-sqrt(6)*deltaI*thetapi + 2*sqrt(3)*deltaI*thetaprpi + kappad*(2*sqrt(6)*deltaI*thetapi - sqrt(3)*deltaI*thetaprpi + 3) + kappau*(2*sqrt(6)*deltaI*thetapi - sqrt(3)*deltaI*thetaprpi - 3)) + 12*CoefB*deltaI*thetaALP*thetapi + 12*CoefB*deltaI*thetaprALP*thetaprpi - 12*CoefB*thpiALP + 4*CoefC*deltaI*thetaALP*thetapi + 5*sqrt(2)*CoefC*deltaI*thetaALP*thetaprpi + 5*sqrt(2)*CoefC*deltaI*thetapi*thetaprALP + 8*CoefC*deltaI*thetaprALP*thetaprpi + 4*CoefD*deltaI*thetaALP*thetapi + 8*sqrt(2)*CoefD*deltaI*thetaALP*thetaprpi + 8*sqrt(2)*CoefD*deltaI*thetapi*thetaprALP + 32*CoefD*deltaI*thetaprALP*thetaprpi + sqrt(3)*cG*deltaI*(-2*sqrt(2)*CoefA*thetapi*(3*kappad + 3*kappau - 2) + 4*CoefA*thetaprpi + sqrt(2)*CoefC*thetapi*(kappad + kappau + 2) + 2*CoefC*thetaprpi*(2*kappad + 2*kappau + 1) + 4*CoefD*(sqrt(2)*thetapi + 4*thetaprpi)))*cos(thetas) + 2*(2*sqrt(2)*CoefA*deltaI*thetaALP*thetapi + 2*CoefA*deltaI*thetaALP*thetaprpi + 2*CoefA*deltaI*thetapi*thetaprALP + sqrt(2)*CoefA*deltaI*thetaprALP*thetaprpi + 3*sqrt(2)*CoefA*thpiALP + 3*sqrt(2)*CoefB*deltaI*thetaALP*thetapi + 3*sqrt(2)*CoefB*deltaI*thetaprALP*thetaprpi - 3*sqrt(2)*CoefB*thpiALP - sqrt(2)*CoefC*deltaI*thetaALP*thetapi - CoefC*deltaI*thetaALP*thetaprpi - CoefC*deltaI*thetapi*thetaprALP + 4*sqrt(2)*CoefC*deltaI*thetaprALP*thetaprpi + sqrt(2)*CoefD*deltaI*thetaALP*thetapi + 4*CoefD*deltaI*thetaALP*thetaprpi + 4*CoefD*deltaI*thetapi*thetaprALP + 8*sqrt(2)*CoefD*deltaI*thetaprALP*thetaprpi + cG*(CoefA*(kappad*(2*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi - 3*sqrt(2)) + kappau*(2*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi + 3*sqrt(2))) - CoefB*(-4*sqrt(3)*deltaI*kappau*thetapi + sqrt(6)*deltaI*kappau*thetaprpi + 2*sqrt(3)*deltaI*thetapi - 2*sqrt(6)*deltaI*thetaprpi + kappad*(-4*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi - 3*sqrt(2)) + 3*sqrt(2)*kappau) + sqrt(3)*deltaI*(-CoefC*(kappad*thetapi + 2*sqrt(2)*kappad*thetaprpi + kappau*thetapi + 2*sqrt(2)*kappau*thetaprpi - 3*sqrt(2)*thetaprpi) + 2*CoefD*(thetapi + 2*sqrt(2)*thetaprpi))))*sin(thetas))*(m12 + m23 - ma**2 - mpi0**2)*(m12 + m23 - meta**2 - mpi0**2)/(-144*I*Gammaf0*mf0 + 144*m12 + 144*m23 - 144*ma**2 - 144*meta**2 + 144*mf0**2 - 288*mpi0**2) - deltaI*((-8*CoefA*thetapi + 2*sqrt(2)*CoefA*thetaprpi + 4*CoefC*thetapi + 5*sqrt(2)*CoefC*thetaprpi + 4*CoefD*thetapi + 8*sqrt(2)*CoefD*thetaprpi)*cos(thetas) + 2*(5*sqrt(2)*CoefA*thetapi + 2*CoefA*thetaprpi - sqrt(2)*CoefC*thetapi - CoefC*thetaprpi + sqrt(2)*CoefD*thetapi + 4*CoefD*thetaprpi)*sin(thetas))*((-8*CoefA*deltaI*thetaALP*thetapi + 2*sqrt(2)*CoefA*deltaI*thetaALP*thetaprpi + 2*sqrt(2)*CoefA*deltaI*thetapi*thetaprALP + 8*CoefA*deltaI*thetaprALP*thetaprpi + 4*CoefB*cG*(-sqrt(6)*deltaI*thetapi + 2*sqrt(3)*deltaI*thetaprpi + kappad*(2*sqrt(6)*deltaI*thetapi - sqrt(3)*deltaI*thetaprpi + 3) + kappau*(2*sqrt(6)*deltaI*thetapi - sqrt(3)*deltaI*thetaprpi - 3)) + 12*CoefB*deltaI*thetaALP*thetapi + 12*CoefB*deltaI*thetaprALP*thetaprpi - 12*CoefB*thpiALP + 4*CoefC*deltaI*thetaALP*thetapi + 5*sqrt(2)*CoefC*deltaI*thetaALP*thetaprpi + 5*sqrt(2)*CoefC*deltaI*thetapi*thetaprALP + 8*CoefC*deltaI*thetaprALP*thetaprpi + 4*CoefD*deltaI*thetaALP*thetapi + 8*sqrt(2)*CoefD*deltaI*thetaALP*thetaprpi + 8*sqrt(2)*CoefD*deltaI*thetapi*thetaprALP + 32*CoefD*deltaI*thetaprALP*thetaprpi + sqrt(3)*cG*deltaI*(-2*sqrt(2)*CoefA*thetapi*(3*kappad + 3*kappau - 2) + 4*CoefA*thetaprpi + sqrt(2)*CoefC*thetapi*(kappad + kappau + 2) + 2*CoefC*thetaprpi*(2*kappad + 2*kappau + 1) + 4*CoefD*(sqrt(2)*thetapi + 4*thetaprpi)))*cos(thetas) + 2*(2*sqrt(2)*CoefA*deltaI*thetaALP*thetapi + 2*CoefA*deltaI*thetaALP*thetaprpi + 2*CoefA*deltaI*thetapi*thetaprALP + sqrt(2)*CoefA*deltaI*thetaprALP*thetaprpi + 3*sqrt(2)*CoefA*thpiALP + 3*sqrt(2)*CoefB*deltaI*thetaALP*thetapi + 3*sqrt(2)*CoefB*deltaI*thetaprALP*thetaprpi - 3*sqrt(2)*CoefB*thpiALP - sqrt(2)*CoefC*deltaI*thetaALP*thetapi - CoefC*deltaI*thetaALP*thetaprpi - CoefC*deltaI*thetapi*thetaprALP + 4*sqrt(2)*CoefC*deltaI*thetaprALP*thetaprpi + sqrt(2)*CoefD*deltaI*thetaALP*thetapi + 4*CoefD*deltaI*thetaALP*thetaprpi + 4*CoefD*deltaI*thetapi*thetaprALP + 8*sqrt(2)*CoefD*deltaI*thetaprALP*thetaprpi + cG*(CoefA*(kappad*(2*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi - 3*sqrt(2)) + kappau*(2*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi + 3*sqrt(2))) - CoefB*(-4*sqrt(3)*deltaI*kappau*thetapi + sqrt(6)*deltaI*kappau*thetaprpi + 2*sqrt(3)*deltaI*thetapi - 2*sqrt(6)*deltaI*thetaprpi + kappad*(-4*sqrt(3)*deltaI*thetapi + sqrt(6)*deltaI*thetaprpi - 3*sqrt(2)) + 3*sqrt(2)*kappau) + sqrt(3)*deltaI*(-CoefC*(kappad*thetapi + 2*sqrt(2)*kappad*thetaprpi + kappau*thetapi + 2*sqrt(2)*kappau*thetaprpi - 3*sqrt(2)*thetaprpi) + 2*CoefD*(thetapi + 2*sqrt(2)*thetaprpi))))*sin(thetas))*(m12 - ma**2 - mpi0**2)*(m12 - meta**2 - mpi0**2)/(144*(m12 + I*mf0*(Gammaf0 + I*mf0))) - (m23 - 2*mpi0**2)*(2*CoefB*cos(thetas) + sqrt(2)*(-CoefA + CoefB)*sin(thetas))*(2*(CoefA*(-3*sqrt(2)*deltaI*thetapi*thpiALP + 2*sqrt(2)*thetaALP + 2*thetaprALP) + 3*sqrt(2)*CoefB*deltaI*thetapi*thpiALP + 3*sqrt(2)*CoefB*thetaALP - sqrt(2)*CoefC*thetaALP - CoefC*thetaprALP + sqrt(2)*CoefD*thetaALP + 4*CoefD*thetaprALP + cG*(3*sqrt(2)*CoefA*deltaI*kappad*thetapi - 3*sqrt(2)*CoefA*deltaI*kappau*thetapi + 2*sqrt(3)*CoefA*kappad + 2*sqrt(3)*CoefA*kappau + CoefB*(-3*sqrt(2)*deltaI*kappad*thetapi + 3*sqrt(2)*deltaI*kappau*thetapi + 4*sqrt(3)*kappad + 4*sqrt(3)*kappau - 2*sqrt(3)) - sqrt(3)*CoefC*kappad - sqrt(3)*CoefC*kappau + 2*sqrt(3)*CoefD))*sin(thetas) + (-8*CoefA*thetaALP + 2*sqrt(2)*CoefA*thetaprALP + 12*CoefB*deltaI*thetapi*thpiALP + 12*CoefB*thetaALP + 4*CoefC*thetaALP + 5*sqrt(2)*CoefC*thetaprALP + 4*CoefD*thetaALP + 8*sqrt(2)*CoefD*thetaprALP + cG*(-2*sqrt(6)*CoefA*(3*kappad + 3*kappau - 2) + 4*CoefB*(-3*deltaI*kappad*thetapi + 3*deltaI*kappau*thetapi + 2*sqrt(6)*kappad + 2*sqrt(6)*kappau - sqrt(6)) + sqrt(6)*(CoefC*(kappad + kappau + 2) + 4*CoefD)))*cos(thetas))*(m23 - ma**2 - meta**2)/(24*(m23 + I*mf0*(Gammaf0 + I*mf0)))