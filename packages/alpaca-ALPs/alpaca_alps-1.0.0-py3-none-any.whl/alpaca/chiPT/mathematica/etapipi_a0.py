# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
CoefA = Symbol('CoefA')
CoefC = Symbol('CoefC')
cG = Symbol('cG')
kappad = Symbol('kappad')
kappau = Symbol('kappau')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
m12 = Symbol('m12')
m23 = Symbol('m23')
ma = Symbol('ma')
mpiplus = Symbol('mpiplus')
meta = Symbol('meta')
Gammaa0plus = Symbol('Gammaa0plus')
ma0plus = Symbol('ma0plus')
e = sqrt(6)*(2*CoefA + CoefC)*(6*cG*(2*CoefA*(kappad + kappau - 1) + CoefC) + sqrt(3)*(2*sqrt(2)*CoefA*thetaALP - 4*CoefA*thetaprALP + sqrt(2)*CoefC*thetaALP + 4*CoefC*thetaprALP))*((m12 + m23 - ma**2 - mpiplus**2)*(m12 + m23 - meta**2 - mpiplus**2)/(-I*Gammaa0plus*ma0plus + m12 + m23 - ma**2 + ma0plus**2 - meta**2 - 2*mpiplus**2) - (m12 - ma**2 - mpiplus**2)*(m12 - meta**2 - mpiplus**2)/(m12 + I*ma0plus*(Gammaa0plus + I*ma0plus)))/144