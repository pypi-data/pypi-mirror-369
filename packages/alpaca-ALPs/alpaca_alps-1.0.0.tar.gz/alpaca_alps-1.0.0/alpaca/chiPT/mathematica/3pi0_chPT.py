# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
kfact = Symbol('kfact')
mpi0 = Symbol('mpi0')
cG = Symbol('cG')
kappad = Symbol('kappad')
deltaI = Symbol('deltaI')
thetapi = Symbol('thetapi')
thetaprpi = Symbol('thetaprpi')
kappau = Symbol('kappau')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
thpiALP = Symbol('thpiALP')
ma = Symbol('ma')
metap = Symbol('metap')
F0 = Symbol('F0')
UnitStep = Function('UnitStep')
e = -sqrt(kfact)*mpi0**2*(3*cG*(kappad*(sqrt(6)*deltaI*thetapi + sqrt(3)*deltaI*thetaprpi + deltaI + 1) + kappau*(sqrt(6)*deltaI*thetapi + sqrt(3)*deltaI*thetaprpi + deltaI - 1)) + deltaI*thetaALP*(6*thetapi + 3*sqrt(2)*thetaprpi + sqrt(6)) + deltaI*thetaprALP*(3*sqrt(2)*thetapi + 3*thetaprpi + sqrt(3)) - 3*thpiALP)*UnitStep(-ma + metap)/(3*F0**2)