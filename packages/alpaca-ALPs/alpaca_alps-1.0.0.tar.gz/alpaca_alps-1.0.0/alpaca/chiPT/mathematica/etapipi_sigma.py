# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
m23 = Symbol('m23')
mpiplus = Symbol('mpiplus')
CoefB = Symbol('CoefB')
thetas = Symbol('thetas')
CoefA = Symbol('CoefA')
deltaI = Symbol('deltaI')
thetapi = Symbol('thetapi')
thpiALP = Symbol('thpiALP')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
CoefC = Symbol('CoefC')
CoefD = Symbol('CoefD')
cG = Symbol('cG')
kappad = Symbol('kappad')
kappau = Symbol('kappau')
ma = Symbol('ma')
meta = Symbol('meta')
mKplus = Symbol('mKplus')
msigma = Symbol('msigma')
Gammasigma = Symbol('Gammasigma')
UnitStep = Function('UnitStep')
e = (m23 - 2*mpiplus**2)*(2*CoefB*sin(thetas) + sqrt(2)*(CoefA - CoefB)*cos(thetas))*(2*(CoefA*(-3*sqrt(2)*deltaI*thetapi*thpiALP + 2*sqrt(2)*thetaALP + 2*thetaprALP) + 3*sqrt(2)*CoefB*deltaI*thetapi*thpiALP + 3*sqrt(2)*CoefB*thetaALP - sqrt(2)*CoefC*thetaALP - CoefC*thetaprALP + sqrt(2)*CoefD*thetaALP + 4*CoefD*thetaprALP + cG*(3*sqrt(2)*CoefA*deltaI*kappad*thetapi - 3*sqrt(2)*CoefA*deltaI*kappau*thetapi + 2*sqrt(3)*CoefA*kappad + 2*sqrt(3)*CoefA*kappau + CoefB*(-3*sqrt(2)*deltaI*kappad*thetapi + 3*sqrt(2)*deltaI*kappau*thetapi + 4*sqrt(3)*kappad + 4*sqrt(3)*kappau - 2*sqrt(3)) - sqrt(3)*CoefC*kappad - sqrt(3)*CoefC*kappau + 2*sqrt(3)*CoefD))*cos(thetas) + (8*CoefA*thetaALP - 2*sqrt(2)*CoefA*thetaprALP - 12*CoefB*deltaI*thetapi*thpiALP - 12*CoefB*thetaALP - 4*CoefC*thetaALP - 5*sqrt(2)*CoefC*thetaprALP - 4*CoefD*thetaALP - 8*sqrt(2)*CoefD*thetaprALP + cG*(2*sqrt(6)*CoefA*(3*kappad + 3*kappau - 2) - 4*CoefB*(-3*deltaI*kappad*thetapi + 3*deltaI*kappau*thetapi + 2*sqrt(6)*kappad + 2*sqrt(6)*kappau - sqrt(6)) - sqrt(6)*(CoefC*(kappad + kappau + 2) + 4*CoefD)))*sin(thetas))*(m23 - ma**2 - meta**2)*UnitStep(-m23 + 4*mKplus**2)/(24*m23 + 24*I*msigma*(Gammasigma + I*msigma))