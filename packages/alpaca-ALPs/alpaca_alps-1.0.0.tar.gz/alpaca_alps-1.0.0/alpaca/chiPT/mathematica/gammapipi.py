# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
alphaEM = Symbol('alphaEM')
mrhoplus = Symbol('mrhoplus')
m12 = Symbol('m12')
m23 = Symbol('m23')
ma = Symbol('ma')
mpiplus = Symbol('mpiplus')
cG = Symbol('cG')
kappad = Symbol('kappad')
kappau = Symbol('kappau')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
thpiALP = Symbol('thpiALP')
F0 = Symbol('F0')
Gammarho = Symbol('Gammarho')
mrho = Symbol('mrho')
e = -alphaEM*mrhoplus**4*(m12**2*m23 + m12*(m23**2 - m23*(ma**2 + 2*mpiplus**2) - ma**2*mpiplus**2 + mpiplus**4) + ma**4*mpiplus**2)*(4*cG**2*(kappad + 2*kappau)**2 + 4*cG*(kappad + 2*kappau)*(sqrt(6)*thetaALP + sqrt(3)*thetaprALP + thpiALP) + 6*thetaALP**2 + 6*sqrt(2)*thetaALP*thetaprALP + 2*sqrt(6)*thetaALP*thpiALP + 3*thetaprALP**2 + 2*sqrt(3)*thetaprALP*thpiALP + thpiALP**2)/(64*pi**3*F0**6*(Gammarho**2*mrho**2 + m12**2 - 2*m12*mrho**2 + mrho**4))