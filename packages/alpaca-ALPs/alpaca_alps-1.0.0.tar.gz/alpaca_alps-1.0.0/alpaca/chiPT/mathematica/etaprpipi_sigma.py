# This file is generated by translate_mathematica.py
# Do not edit this file directly
# Instead, edit amps_mathematica.m and run translate_mathematica.py
# to regenerate this file
#
# This file contains the translation of Mathematica code to Python
# using the sympy library
#
m23 = Symbol('m23')
mpiplus = Symbol('mpiplus')
CoefB = Symbol('CoefB')
thetas = Symbol('thetas')
CoefA = Symbol('CoefA')
thetaALP = Symbol('thetaALP')
thetaprALP = Symbol('thetaprALP')
deltaI = Symbol('deltaI')
thetaprpi = Symbol('thetaprpi')
thpiALP = Symbol('thpiALP')
CoefC = Symbol('CoefC')
CoefD = Symbol('CoefD')
cG = Symbol('cG')
kappad = Symbol('kappad')
kappau = Symbol('kappau')
ma = Symbol('ma')
metap = Symbol('metap')
mK = Symbol('mK')
msigma = Symbol('msigma')
Gammasigma = Symbol('Gammasigma')
UnitStep = Function('UnitStep')
e = (m23 - 2*mpiplus**2)*(2*CoefB*sin(thetas) + sqrt(2)*(CoefA - CoefB)*cos(thetas))*(-(2*sqrt(2)*CoefA*thetaALP + 8*CoefA*thetaprALP + 12*CoefB*deltaI*thetaprpi*thpiALP + 12*CoefB*thetaprALP + 5*sqrt(2)*CoefC*thetaALP + 8*CoefC*thetaprALP + 8*sqrt(2)*CoefD*thetaALP + 32*CoefD*thetaprALP + 2*cG*(2*sqrt(3)*CoefA - 2*CoefB*(3*deltaI*kappad*thetaprpi - 3*deltaI*kappau*thetaprpi + sqrt(3)*kappad + sqrt(3)*kappau - 2*sqrt(3)) + sqrt(3)*(2*CoefC*kappad + 2*CoefC*kappau + CoefC + 8*CoefD)))*sin(thetas) + 2*(-3*sqrt(2)*CoefA*deltaI*thetaprpi*thpiALP + 2*CoefA*thetaALP + sqrt(2)*CoefA*thetaprALP + 3*sqrt(2)*CoefB*deltaI*thetaprpi*thpiALP + 3*sqrt(2)*CoefB*thetaprALP - CoefC*thetaALP + 4*sqrt(2)*CoefC*thetaprALP + 4*CoefD*thetaALP + 8*sqrt(2)*CoefD*thetaprALP + sqrt(2)*cG*(3*CoefA*deltaI*kappad*thetaprpi - 3*CoefA*deltaI*kappau*thetaprpi + sqrt(3)*CoefA*kappad + sqrt(3)*CoefA*kappau - CoefB*(-3*deltaI*kappau*thetaprpi + kappad*(3*deltaI*thetaprpi + sqrt(3)) + sqrt(3)*kappau - 2*sqrt(3)) + sqrt(3)*CoefC*(-2*kappad - 2*kappau + 3) + 4*sqrt(3)*CoefD))*cos(thetas))*(m23 - ma**2 - metap**2)*UnitStep(-m23 + 4*mK**2)/(24*m23 + 24*I*msigma*(Gammasigma + I*msigma))