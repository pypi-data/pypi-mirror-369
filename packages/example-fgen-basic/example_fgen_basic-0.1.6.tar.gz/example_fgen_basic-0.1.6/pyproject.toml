[project]
name = "example-fgen-basic"
version = "0.1.6"
description = "Basic example of using fgen"
authors = [
    { name = "Zebedee Nicholls", email = "zebedee.nicholls@climate-energy-college.org" },
]
license = { text = "3-Clause BSD License" }
requires-python = ">=3.9"
dependencies = [
    "attrs>=24.3.0",
    "numpy>=1.26.0; python_version < '3.13'",
    "numpy>=2.1.0; python_version >= '3.13'",
    "typing-extensions>=4.12.2",
]
readme = "README.md"
classifiers = [
    # Full list: https://pypi.org/classifiers/
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://example-fgen-basic.readthedocs.io"
Documentation = "https://example-fgen-basic.readthedocs.io"
Changelog = "https://example-fgen-basic.readthedocs.io/en/stable/changelog"
Repository = "https://github.com/openscm/example-fgen-basic"
Issues = "https://github.com/openscm/example-fgen-basic/issues"


[project.optional-dependencies]
plots = [
    "matplotlib>=3.7.1",
]
full = [
    "example-fgen-basic[plots]",
]

[dependency-groups]
# The development dependencies are pinned
# to give a consistent starting point when using this template.
# They should be removed/updated/changed/loosened as suits your project.
# (As soon as you have a lock file, you can remove all of the implied dependencies.)
# (This is a workaround for the fact
# that we can't easily include the lock file in the copier template
# because of how locking works and the order of operations).
dev = [
    # Key dependencies
    # ----------------
    "fprettify>=0.3.7",
    "liccheck>=0.9.2",
    "mypy>=1.14.0",
    "pint>=0.24.4",
    # Required for liccheck, see https://github.com/dhatim/python-license-check/pull/113
    "pip>=24.3.1",
    "pre-commit>=4.0.1",
    # Required for liccheck, see https://github.com/dhatim/python-license-check/pull/113
    "setuptools>=75.6.0",
    "towncrier>=24.8.0",
    "tomli-w>=1.2.0",
    "tomli>=2.2.1",
    "typer>=0.15.2",
]
docs = [
    # Key dependencies
    # ----------------
    "attrs>=25.3.0",
    "mkdocs-autorefs>=1.4.2",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.16",
    "mkdocs-section-index>=0.3.10",
    "mkdocs>=1.6.1",
    "mkdocstrings-python-xref>=1.16.3",
    "mkdocstrings-python>=1.16.12",
    "pymdown-extensions>=10.16.1",
    "ruff>=0.12.8",
    # Key dependencies for notebook_based_docs
    # ----------------------------------------
    "jupyterlab>=4.4.5",
    "jupytext>=1.17.2",
    "mkdocs-jupyter>=0.25.1",
]
# For minimum test dependencies.
# These are used when running our minimum PyPI install tests.
tests-min = [
    # Key dependencies
    # ----------------
    "pytest>=8.3.4",
]
# Full test dependencies.
tests-full = [
    # Key dependencies
    # ----------------
    "pytest-cov>=6.0.0",
]
# Test dependencies
# (partly split because liccheck uses toml,
# which doesn't support inhomogeneous arrays).
tests = [
    {include-group = "tests-min"},
    {include-group = "tests-full"},
]
all-dev = [
    {include-group = "dev"},
    {include-group = "docs"},
    {include-group = "tests"},
]

# Start here, replace with whate we have in our example
[build-system]
build-backend = "mesonpy"
requires = [
  "meson-python>=0.15.0",
  "numpy",
]

# https://mesonbuild.com/meson-python/how-to-guides/meson-args.html
[tool.meson-python.args]
setup = [
  '--default-library=static',
  '-Dpyprojectwheelbuild=enabled',
  ]
install = [
'--skip-subprojects',
]

[tool.coverage.run]
source = [
    "src",
]
branch = true
omit = [
    # TODO: check this file
    "*exceptions.py",
    "*runtime_helpers.py",
]

[tool.coverage.report]
fail_under = 90
skip_empty = true
show_missing = true
exclude_also = [
    "if TYPE_CHECKING",
    # Type overloading lines
    "@overload",
    "\\.\\.\\.",

]

[tool.mypy]
strict = true
disallow_any_unimported = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
follow_imports = "normal"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
src = [
    "src",
]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "D",
    "PL",
    "TRY",
    "NPY",
    "RUF",
    "UP",
    "S",
]
unfixable = [
    "PD002",
]
ignore = [
    "D200",
    "D400",
    "UP007",
]

[tool.ruff.lint.per-file-ignores]
"test*.py" = [
    "D",
    "S101",
    "PLR2004",
]
"docs/*" = [
    "D100",
    "E402",
    "S101",
]
"scripts/*" = [
    "S101",
]
"stubs/*" = [
    "PLR0913",
]

[tool.ruff.lint.isort]
known-first-party = [
    "src",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.towncrier]
package = "example_fgen_basic"
package_dir = "src"
filename = "docs/changelog.md"
directory = "changelog/"
title_format = "## Example fgen - basic {version} ({project_date})"
underlines = [
    "",
    "",
    "",
]
issue_format = "[#{issue}](https://github.com/openscm/example-fgen-basic/pull/{issue})"
type = [
    { directory = "breaking", name = "‚ö†Ô∏è Breaking Changes", showcontent = true },
    { directory = "deprecation", name = "üóëÔ∏è Deprecations", showcontent = true },
    { directory = "feature", name = "üÜï Features", showcontent = true },
    { directory = "improvement", name = "üéâ Improvements", showcontent = true },
    { directory = "fix", name = "üêõ Bug Fixes", showcontent = true },
    { directory = "docs", name = "üìö Improved Documentation", showcontent = true },
    { directory = "trivial", name = "üîß Trivial/Internal Changes", showcontent = false },
]

[tool.liccheck]
authorized_licenses = [
    "bsd",
    "bsd license",
    "BSD 3-Clause",
    "BSD-3-Clause",
    "CC0",
    "apache",
    "apache 2.0",
    "apache software",
    "apache software license",
    "Apache License, Version 2.0",
    "CMU License (MIT-CMU)",
    "Historical Permission Notice and Disclaimer (HPND)",
    "isc",
    "isc license",
    "isc license (iscl)",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "LGPLv2+",
    "GNU Lesser General Public License v2 (LGPLv2)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "mit",
    "mit license",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "psf-2.0",
    "python software foundation",
    "python software foundation license",
    "The Unlicense (Unlicense)",
    "zpl 2.1",
]
unauthorized_licenses = [
    "agpl",
    "gnu agpl",
    "gpl v3",
    "gplv3",
    "gpl v2",
    "gplv2",
    "gpl v1",
    "gplv1",
]
