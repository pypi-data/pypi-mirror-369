[build-system]
build-backend = "hatchling.build"

requires = [ "hatch-vcs", "hatchling" ]

[project]
name = "ties"
description = "A CLI tool to duplicate and sync file content with advanced transformations."
readme = "README.md"

keywords = [  ]
maintainers = [ { name = "Alon Kellner", email = "me@alonkellner.com" } ]
authors = [ { name = "Alon Kellner", email = "me@alonkellner.com" } ]
requires-python = ">=3.10.0"
classifiers = [
  "Development Status :: 3 - Alpha",

  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",

  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development",
]

dynamic = [ "version" ]
dependencies = [ "toml", "typer" ]

optional-dependencies.all = [ "pyyaml" ]
optional-dependencies.yaml = [ "pyyaml" ]
urls = { Homepage = "https://github.com/AlonKellner/ties.git", Repository = "https://github.com/AlonKellner/ties.git" }

scripts.ties = "ties.cli:app"

[dependency-groups]
dev = [ "coverage[toml]", "pytest", "pytest-cov", "pyyaml" ]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0.dev0"
tag-pattern = '''^[a-z]+\/(?:[\w-]+-)?(?P<version>[vV]?\d+(?:\.\d+){0,2}[^\+]*)(?:\+.*)?$'''

[tool.hatch.build.hooks.vcs]
version-file = "src/_version.py"

[tool.ruff]
line-length = 88
extend-exclude = [ "dev-pyproject/*", "src/_version.py" ]
respect-gitignore = true

lint.select = [
  "ANN",
  "ARG",
  "B",
  "D",
  "E4",
  "E7",
  "E9",
  "F",
  "I",
  "PL",
  "Q",
  "RUF",
  "S",
  "SIM",
  "TC",
  "UP",
]
lint.ignore = [ "ANN401", "PLR0913", "PLR2004", "S101", "S311" ]
lint.pydocstyle.convention = "numpy"
lint.pylint.max-args = 10

[tool.pytest.ini_options]
pythonpath = "./"

[tool.coverage.run]
omit = [ "src/ties/__init__.py", "src/_version.py" ]

[tool.tox]
env_list = [ "py310", "py311", "py312", "py313", "coverage" ]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
description = "Run test under {base_python}"
skip_install = true
commands = [ [ "pytest", "tests" ] ]

[tool.tox.env.coverage]
base_python = [ "py313" ]
commands = [
  [
    "pytest",
    "tests",
    "--cov",
    "--cov-report=term-missing",
    "--cov-report=lcov:lcov.info",
    "--cov=src/ties",
    "--cov-fail-under=95",
  ],
]

[tool.lintok]
max_tokens = 2048
exclude = [ "uv.lock", "lcov.info" ]

[tool.typos.files]
extend-exclude = [ "**/.env.*" ]

[tool.uv]
package = true
python-preference = "only-managed"
link-mode = "copy"

[tool.ties]
[[tool.ties.tie]]
name = ".gitignore -> trivy.yaml"
source = ".gitignore"
target = "trivy.yaml"
transform = "transform:trivy_yaml"

[[tool.ties.tie]]
name = "mcp.json"
source = ".ties/mcp.json"
targets = [ ".mcp.json", ".cursor/mcp.json" ]
transform = "ties:embed_environ"

[[tool.ties.tie]]
name = "Claude Instructions"
source = ".ties/instructions.md"
target = "CLAUDE.md"

[[tool.ties.tie]]
name = "VSCode Instructions"
sources = [ ".ties/vscode_header.txt", ".ties/instructions.md" ]
target = ".github/copilot-instructions.md"

[[tool.ties.tie]]
name = "Cursor Instructions"
sources = [ ".ties/cursor_header.txt", ".ties/instructions.md" ]
target = ".cursor/rules/instructions.mdc"
