[tool.poetry]
name = "idun-agent-engine"
version = "0.1.0"
description = "Python SDK and runtime to serve AI agents with FastAPI, LangGraph, and observability."
authors = ["Geoffrey HARRAZI <geoffreyharrazi@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "idun_agent_engine", from = "src"}]
keywords = ["agents", "langgraph", "fastapi", "sdk", "llm", "observability"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
]

# Include typing marker file in distribution
include = [
    "src/idun_agent_engine/py.typed",
]

[tool.poetry.urls]
Homepage = "https://github.com/geoffreyharrazi/idun-agent-manager"
Repository = "https://github.com/geoffreyharrazi/idun-agent-manager"
Documentation = "https://github.com/geoffreyharrazi/idun-agent-manager/tree/main/libs/idun_agent_engine"
Issues = "https://github.com/geoffreyharrazi/idun-agent-manager/issues"

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
fastapi = ">=0.116.1,<0.117.0"
uvicorn = ">=0.35.0,<0.36.0"
langgraph = ">=0.6.3,<0.7.0"
langgraph-checkpoint-sqlite = ">=2.0.11,<3.0.0"
streamlit = ">=1.47.1,<2.0.0"
httpx = ">=0.28.1,<0.29.0"
pydantic = ">=2.11.7,<3.0.0"
langchain-core = ">=0.3.72,<0.4.0"
langchain-google-vertexai = ">=2.0.27,<3.0.0"
google-adk = ">=1.9.0,<2.0.0"
ag-ui-protocol = ">=0.1.8,<0.2.0"
aiosqlite = ">=0.21.0,<0.22.0"
langfuse = "^3.2.2"
arize-phoenix-otel = ">=0.2.0,<1.0.0"
openinference-instrumentation-langchain = ">=0.1.13,<1.0.0"
langchain = "^0.3.27"
arize-phoenix = "^11.22.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.5"
black = "^24.8.0"
pre-commit = "^3.8.0"
mypy = "^1.10.0"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
types-PyYAML = "^6.0.12.20240808"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# -------------------------
# Tooling configuration
# -------------------------

[tool.black]
line-length = 88
target-version = ["py313"]
include = "\\.pyi?$"
exclude = '''
(
  /build/|
  /dist/|
  /.venv/|
  /.git/
)
'''

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = [
    "build",
    "dist",
    ".venv",
    "OLD",
    "examples",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "D",   # pydocstyle (docstrings)
]
extend-ignore = [
    "E501",  # line length handled by black
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow re-exporting in package __init__

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = true
no_implicit_optional = true
disallow_untyped_defs = false
check_untyped_defs = true
pretty = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true
