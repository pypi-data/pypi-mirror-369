Metadata-Version: 2.4
Name: chaino
Version: 0.2.0
Summary: python lib for Arduino Chaino device
Author-email: Jang-Hyun Park <salesiopark@gmail.com>
License: MIT License
        
        Copyright (c) [2025] [Jang-Hyun Park]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the “Software”), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/salesiopark/pychaino
Project-URL: Issues, https://github.com/salesiopark/pychaino/issues
Keywords: arduino,serial,i2c
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyserial<4.0,>=3.5
Dynamic: license-file

# chaino — Python Host Library for Chaino Devices

'chaino' module lets a PC communicate with an Arduino/compatible board that runs the Chaino firmware over **Serial (USB)**. You can remotely execute functions registered on the board, pass arguments, and receive return values. It uses **CRC-16/XMODEM** for integrity and includes resend/retry logic.

---

## 📦 Requirements & Installation

- Python 3.8+
- [pyserial](https://pypi.org/project/pyserial/)

```bash
pip install pyserial
