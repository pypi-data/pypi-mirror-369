[tool.poetry]
name = "unrealon-llm"
version = "2.0.0"
description = "UnrealOn LLM - Modular AI-Powered Processing Platform for HTML analysis, translation, and type conversion"
authors = ["UnrealOn Team <dev@unrealon.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/unrealon/unrealon-llm"
repository = "https://github.com/unrealon/unrealon-llm"
documentation = "https://docs.unrealon.com/llm"
keywords = ["llm", "ai", "html-analysis", "translation", "openrouter", "claude", "gpt"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "*", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.0.0"
aiohttp = "^3.8.0"
beautifulsoup4 = "^4.12.0"
openai = "^1.0.0"
tiktoken = "^0.9.0"
fast-langdetect = "^0.3.2"
langid = "^1.1.6"
langdetect = "^1.0.9"
cachetools = "^5.3.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
aioresponses = "^0.7.4"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
flake8 = "^6.0.0"
pre-commit = "^3.3.0"

[tool.poetry.group.test.dependencies]
pytest-benchmark = "^4.0.0"
pytest-xdist = "^3.3.0"
pytest-html = "^3.2.0"
factory-boy = "^3.3.0"
freezegun = "^1.2.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.1.0"
mkdocs-mermaid2-plugin = "^1.1.0"

[tool.poetry.scripts]
unrealon-llm = "unrealon_llm.cli.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "performance: Performance tests",
    "real_api: Tests that use real APIs (cost money)",
    "mock_only: Tests that only use mocks",
    "ai_validation: AI output quality tests",
    "cost_controlled: Tests with cost limits",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["unrealon_llm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["unrealon_llm"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langdetect.*",
    "tiktoken.*",
    "beautifulsoup4.*", 
    "bs4.*",
]
ignore_missing_imports = true
