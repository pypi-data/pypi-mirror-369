# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: churner/churner.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 6, 31, 1, "", "churner/churner.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x15\x63hurner/churner.proto\x12\x07\x63hurner"\xbe\x01\n\x0c\x43hurnRequest\x12\x18\n\x10operator_address\x18\x01 \x01(\t\x12&\n\x1eoperator_to_register_pubkey_g1\x18\x02 \x01(\x0c\x12&\n\x1eoperator_to_register_pubkey_g2\x18\x03 \x01(\x0c\x12"\n\x1aoperator_request_signature\x18\x04 \x01(\x0c\x12\x0c\n\x04salt\x18\x05 \x01(\x0c\x12\x12\n\nquorum_ids\x18\x06 \x03(\r"\x8f\x01\n\nChurnReply\x12K\n\x1esignature_with_salt_and_expiry\x18\x01 \x01(\x0b\x32#.churner.SignatureWithSaltAndExpiry\x12\x34\n\x12operators_to_churn\x18\x02 \x03(\x0b\x32\x18.churner.OperatorToChurn"M\n\x1aSignatureWithSaltAndExpiry\x12\x11\n\tsignature\x18\x01 \x01(\x0c\x12\x0c\n\x04salt\x18\x02 \x01(\x0c\x12\x0e\n\x06\x65xpiry\x18\x03 \x01(\x03"F\n\x0fOperatorToChurn\x12\x11\n\tquorum_id\x18\x01 \x01(\r\x12\x10\n\x08operator\x18\x02 \x01(\x0c\x12\x0e\n\x06pubkey\x18\x03 \x01(\x0c\x32@\n\x07\x43hurner\x12\x35\n\x05\x43hurn\x12\x15.churner.ChurnRequest\x1a\x13.churner.ChurnReply"\x00\x42/Z-github.com/Layr-Labs/eigenda/api/grpc/churnerb\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "churner.churner_pb2", _globals)
if not _descriptor._USE_C_DESCRIPTORS:
    _globals["DESCRIPTOR"]._loaded_options = None
    _globals["DESCRIPTOR"]._serialized_options = b"Z-github.com/Layr-Labs/eigenda/api/grpc/churner"
    _globals["_CHURNREQUEST"]._serialized_start = 35
    _globals["_CHURNREQUEST"]._serialized_end = 225
    _globals["_CHURNREPLY"]._serialized_start = 228
    _globals["_CHURNREPLY"]._serialized_end = 371
    _globals["_SIGNATUREWITHSALTANDEXPIRY"]._serialized_start = 373
    _globals["_SIGNATUREWITHSALTANDEXPIRY"]._serialized_end = 450
    _globals["_OPERATORTOCHURN"]._serialized_start = 452
    _globals["_OPERATORTOCHURN"]._serialized_end = 522
    _globals["_CHURNER"]._serialized_start = 524
    _globals["_CHURNER"]._serialized_end = 588
# @@protoc_insertion_point(module_scope)
