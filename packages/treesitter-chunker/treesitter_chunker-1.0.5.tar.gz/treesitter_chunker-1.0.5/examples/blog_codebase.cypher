// TreeSitter Chunker Neo4j Export
// Generated: 2025-07-21T03:32:45.474431+00:00
// Chunks: 28, Relationships: 9

// Create constraints for better performance
CREATE CONSTRAINT IF NOT EXISTS FOR (c:CodeChunk) REQUIRE c.chunk_id IS UNIQUE;
CREATE INDEX IF NOT EXISTS FOR (c:CodeChunk) ON (c.file_path);
CREATE INDEX IF NOT EXISTS FOR (c:CodeChunk) ON (c.node_type);
CREATE INDEX IF NOT EXISTS FOR (c:CodeChunk) ON (c.language);

// Create metadata node
CREATE (m:ExportMetadata {
  format: 'neo4j',
  version: '1.0',
  created_at: datetime('2025-07-21T03:32:45.474412+00:00'),
  source_files: ["/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py"],
  chunk_count: 28,
  relationship_count: 9,
  options: {"filters": 0, "transformers": 0, "batch_size": 1000}
});

// Create code chunk nodes
UNWIND [{"chunk_id": "6dfd8d6cf91898f2", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "class_definition", "start_line": 6, "end_line": 23, "byte_start": 81, "byte_end": 657, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class Post(BaseModel):\n    \\\"\\\"\\\"Blog post model.\\\"\\\"\\\"\n    def __init__(self, id, title, content, author_id):\n        super().__init__(id)\n        self.title = title\n        self.content = content\n        self.author_id = author_id\n        \n    def get_author(self):\n        \\\"\\\"\\\"Get the post author.\\\"\\\"\\\"\n        user_manager = UserManager()\n        return user_manager.find(self.author_id)\n        \n    def publish(self):\n        \\\"\\\"\\\"Publish the post.\\\"\\\"\\\"\n        self.save()\n        author = self.get_author()\n        author.send_email(f\\\"Your post '{self.title}' has been published!\\\")"}, {"chunk_id": "5b6446de8a39ebeb", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 8, "end_line": 12, "byte_start": 135, "byte_end": 307, "parent_context": "class_definition", "parent_chunk_id": "6dfd8d6cf91898f2", "references": [], "dependencies": [], "content": "def __init__(self, id, title, content, author_id):\n        super().__init__(id)\n        self.title = title\n        self.content = content\n        self.author_id = author_id"}, {"chunk_id": "9bbe9f1061acfb78", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 14, "end_line": 17, "byte_start": 321, "byte_end": 463, "parent_context": "class_definition", "parent_chunk_id": "6dfd8d6cf91898f2", "references": [], "dependencies": [], "content": "def get_author(self):\n        \\\"\\\"\\\"Get the post author.\\\"\\\"\\\"\n        user_manager = UserManager()\n        return user_manager.find(self.author_id)"}, {"chunk_id": "32d48a9ba08ac9dd", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 19, "end_line": 23, "byte_start": 477, "byte_end": 657, "parent_context": "class_definition", "parent_chunk_id": "6dfd8d6cf91898f2", "references": [], "dependencies": [], "content": "def publish(self):\n        \\\"\\\"\\\"Publish the post.\\\"\\\"\\\"\n        self.save()\n        author = self.get_author()\n        author.send_email(f\\\"Your post '{self.title}' has been published!\\\")"}, {"chunk_id": "be67406f9d2e3840", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "class_definition", "start_line": 26, "end_line": 42, "byte_start": 668, "byte_end": 1258, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class PostManager(BaseManager):\n    \\\"\\\"\\\"Manager for Post operations.\\\"\\\"\\\"\n    def __init__(self):\n        super().__init__(Post)\n        \n    def find_by_author(self, author_id):\n        \\\"\\\"\\\"Find posts by author.\\\"\\\"\\\"\n        # Simplified implementation\n        return [\n            Post(1, \\\"First Post\\\", \\\"Content 1\\\", author_id),\n            Post(2, \\\"Second Post\\\", \\\"Content 2\\\", author_id)\n        ]\n        \n    def get_recent_posts(self, limit=10):\n        \\\"\\\"\\\"Get recent posts.\\\"\\\"\\\"\n        # Simplified implementation\n        return [Post(i, f\\\"Post {i}\\\", f\\\"Content {i}\\\", 1) for i in range(limit)]"}, {"chunk_id": "0bea8b5cbfa2885f", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 28, "end_line": 29, "byte_start": 743, "byte_end": 793, "parent_context": "class_definition", "parent_chunk_id": "be67406f9d2e3840", "references": [], "dependencies": [], "content": "def __init__(self):\n        super().__init__(Post)"}, {"chunk_id": "11bfbdbc14ce18a6", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 31, "end_line": 37, "byte_start": 807, "byte_end": 1060, "parent_context": "class_definition", "parent_chunk_id": "be67406f9d2e3840", "references": [], "dependencies": [], "content": "def find_by_author(self, author_id):\n        \\\"\\\"\\\"Find posts by author.\\\"\\\"\\\"\n        # Simplified implementation\n        return [\n            Post(1, \\\"First Post\\\", \\\"Content 1\\\", author_id),\n            Post(2, \\\"Second Post\\\", \\\"Content 2\\\", author_id)\n        ]"}, {"chunk_id": "635ae26a96511ab4", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/posts.py", "node_type": "function_definition", "start_line": 39, "end_line": 42, "byte_start": 1074, "byte_end": 1258, "parent_context": "class_definition", "parent_chunk_id": "be67406f9d2e3840", "references": [], "dependencies": [], "content": "def get_recent_posts(self, limit=10):\n        \\\"\\\"\\\"Get recent posts.\\\"\\\"\\\"\n        # Simplified implementation\n        return [Post(i, f\\\"Post {i}\\\", f\\\"Content {i}\\\", 1) for i in range(limit)]"}, {"chunk_id": "0ea295e5d12ea910", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "class_definition", "start_line": 5, "end_line": 14, "byte_start": 44, "byte_end": 347, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class User(BaseModel):\n    \\\"\\\"\\\"User model.\\\"\\\"\\\"\n    def __init__(self, id, name, email):\n        super().__init__(id)\n        self.name = name\n        self.email = email\n        \n    def send_email(self, message):\n        \\\"\\\"\\\"Send email to user.\\\"\\\"\\\"\n        print(f\\\"Sending email to {self.email}: {message}\\\")"}, {"chunk_id": "80dd7c8743ba7a2e", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "function_definition", "start_line": 7, "end_line": 10, "byte_start": 93, "byte_end": 210, "parent_context": "class_definition", "parent_chunk_id": "0ea295e5d12ea910", "references": [], "dependencies": [], "content": "def __init__(self, id, name, email):\n        super().__init__(id)\n        self.name = name\n        self.email = email"}, {"chunk_id": "97509f2f8e2ee26b", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "function_definition", "start_line": 12, "end_line": 14, "byte_start": 224, "byte_end": 347, "parent_context": "class_definition", "parent_chunk_id": "0ea295e5d12ea910", "references": [], "dependencies": [], "content": "def send_email(self, message):\n        \\\"\\\"\\\"Send email to user.\\\"\\\"\\\"\n        print(f\\\"Sending email to {self.email}: {message}\\\")"}, {"chunk_id": "751b07a579393e25", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "class_definition", "start_line": 17, "end_line": 31, "byte_start": 358, "byte_end": 851, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class UserManager(BaseManager):\n    \\\"\\\"\\\"Manager for User operations.\\\"\\\"\\\"\n    def __init__(self):\n        super().__init__(User)\n        \n    def find_by_email(self, email):\n        \\\"\\\"\\\"Find user by email.\\\"\\\"\\\"\n        # Simplified implementation\n        return User(1, \\\"Test User\\\", email)\n        \n    def authenticate(self, email, password):\n        \\\"\\\"\\\"Authenticate user.\\\"\\\"\\\"\n        user = self.find_by_email(email)\n        # Simplified auth\n        return user if password == \\\"password\\\" else None"}, {"chunk_id": "46bc275ea8353d05", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "function_definition", "start_line": 19, "end_line": 20, "byte_start": 433, "byte_end": 483, "parent_context": "class_definition", "parent_chunk_id": "751b07a579393e25", "references": [], "dependencies": [], "content": "def __init__(self):\n        super().__init__(User)"}, {"chunk_id": "0d09190237cfe366", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "function_definition", "start_line": 22, "end_line": 25, "byte_start": 497, "byte_end": 641, "parent_context": "class_definition", "parent_chunk_id": "751b07a579393e25", "references": [], "dependencies": [], "content": "def find_by_email(self, email):\n        \\\"\\\"\\\"Find user by email.\\\"\\\"\\\"\n        # Simplified implementation\n        return User(1, \\\"Test User\\\", email)"}, {"chunk_id": "88a2ac9e56d66593", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/users.py", "node_type": "function_definition", "start_line": 27, "end_line": 31, "byte_start": 655, "byte_end": 851, "parent_context": "class_definition", "parent_chunk_id": "751b07a579393e25", "references": [], "dependencies": [], "content": "def authenticate(self, email, password):\n        \\\"\\\"\\\"Authenticate user.\\\"\\\"\\\"\n        user = self.find_by_email(email)\n        # Simplified auth\n        return user if password == \\\"password\\\" else None"}, {"chunk_id": "096229f453a2532e", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py", "node_type": "class_definition", "start_line": 6, "end_line": 33, "byte_start": 65, "byte_end": 911, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class BlogApp:\n    \\\"\\\"\\\"Main blog application.\\\"\\\"\\\"\n    def __init__(self):\n        self.user_manager = UserManager()\n        self.post_manager = PostManager()\n        \n    def create_post(self, user_email, password, title, content):\n        \\\"\\\"\\\"Create a new blog post.\\\"\\\"\\\"\n        # Authenticate user\n        user = self.user_manager.authenticate(user_email, password)\n        if not user:\n            raise ValueError(\\\"Authentication failed\\\")\n            \n        # Create post\n        post = self.post_manager.create(\n            id=None,\n            title=title,\n            content=content,\n            author_id=user.id\n        )\n        \n        # Publish it\n        post.publish()\n        return post\n        \n    def get_user_posts(self, user_id):\n        \\\"\\\"\\\"Get all posts by a user.\\\"\\\"\\\"\n        return self.post_manager.find_by_author(user_id)"}, {"chunk_id": "3fd29656dc61d007", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py", "node_type": "function_definition", "start_line": 8, "end_line": 10, "byte_start": 117, "byte_end": 220, "parent_context": "class_definition", "parent_chunk_id": "096229f453a2532e", "references": [], "dependencies": [], "content": "def __init__(self):\n        self.user_manager = UserManager()\n        self.post_manager = PostManager()"}, {"chunk_id": "7e748bbf14629e12", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py", "node_type": "function_definition", "start_line": 12, "end_line": 29, "byte_start": 234, "byte_end": 767, "parent_context": "class_definition", "parent_chunk_id": "096229f453a2532e", "references": [], "dependencies": [], "content": "def create_post(self, user_email, password, title, content):\n        \\\"\\\"\\\"Create a new blog post.\\\"\\\"\\\"\n        # Authenticate user\n        user = self.user_manager.authenticate(user_email, password)\n        if not user:\n            raise ValueError(\\\"Authentication failed\\\")\n            \n        # Create post\n        post = self.post_manager.create(\n            id=None,\n            title=title,\n            content=content,\n            author_id=user.id\n        )\n        \n        # Publish it\n        post.publish()\n        return post"}, {"chunk_id": "8c8501c571f9fa51", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py", "node_type": "function_definition", "start_line": 31, "end_line": 33, "byte_start": 781, "byte_end": 911, "parent_context": "class_definition", "parent_chunk_id": "096229f453a2532e", "references": [], "dependencies": [], "content": "def get_user_posts(self, user_id):\n        \\\"\\\"\\\"Get all posts by a user.\\\"\\\"\\\"\n        return self.post_manager.find_by_author(user_id)"}, {"chunk_id": "07729b04426ef0ca", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/app.py", "node_type": "function_definition", "start_line": 36, "end_line": 51, "byte_start": 922, "byte_end": 1269, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "def main():\n    \\\"\\\"\\\"Run the blog application.\\\"\\\"\\\"\n    app = BlogApp()\n    \n    # Create a post\n    post = app.create_post(\n        \\\"user@example.com\\\",\n        \\\"password\\\",\n        \\\"Hello World\\\",\n        \\\"This is my first blog post!\\\"\n    )\n    \n    # Get user's posts\n    posts = app.get_user_posts(1)\n    for p in posts:\n        print(f\\\"- {p.title}\\\")"}, {"chunk_id": "5a62739985c602fc", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "class_definition", "start_line": 2, "end_line": 13, "byte_start": 1, "byte_end": 367, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class BaseModel:\n    \\\"\\\"\\\"Base model for all entities.\\\"\\\"\\\"\n    def __init__(self, id):\n        self.id = id\n        \n    def save(self):\n        \\\"\\\"\\\"Save the model.\\\"\\\"\\\"\n        print(f\\\"Saving {self.__class__.__name__} with id {self.id}\\\")\n        \n    def delete(self):\n        \\\"\\\"\\\"Delete the model.\\\"\\\"\\\"\n        print(f\\\"Deleting {self.__class__.__name__} with id {self.id}\\\")"}, {"chunk_id": "ffd2c455dbadb7b8", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 4, "end_line": 5, "byte_start": 61, "byte_end": 105, "parent_context": "class_definition", "parent_chunk_id": "5a62739985c602fc", "references": [], "dependencies": [], "content": "def __init__(self, id):\n        self.id = id"}, {"chunk_id": "39f353609be5a9f1", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 7, "end_line": 9, "byte_start": 119, "byte_end": 233, "parent_context": "class_definition", "parent_chunk_id": "5a62739985c602fc", "references": [], "dependencies": [], "content": "def save(self):\n        \\\"\\\"\\\"Save the model.\\\"\\\"\\\"\n        print(f\\\"Saving {self.__class__.__name__} with id {self.id}\\\")"}, {"chunk_id": "9f2526674418200e", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 11, "end_line": 13, "byte_start": 247, "byte_end": 367, "parent_context": "class_definition", "parent_chunk_id": "5a62739985c602fc", "references": [], "dependencies": [], "content": "def delete(self):\n        \\\"\\\"\\\"Delete the model.\\\"\\\"\\\"\n        print(f\\\"Deleting {self.__class__.__name__} with id {self.id}\\\")"}, {"chunk_id": "f54c2271f0cefcbf", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "class_definition", "start_line": 16, "end_line": 27, "byte_start": 370, "byte_end": 733, "parent_context": "", "parent_chunk_id": "", "references": [], "dependencies": [], "content": "class BaseManager:\n    \\\"\\\"\\\"Base manager for model operations.\\\"\\\"\\\"\n    def __init__(self, model_class):\n        self.model_class = model_class\n        \n    def create(self, **kwargs):\n        \\\"\\\"\\\"Create a new instance.\\\"\\\"\\\"\n        return self.model_class(**kwargs)\n        \n    def find(self, id):\n        \\\"\\\"\\\"Find instance by id.\\\"\\\"\\\"\n        return self.model_class(id)"}, {"chunk_id": "7216c927f057d0f2", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 18, "end_line": 19, "byte_start": 438, "byte_end": 509, "parent_context": "class_definition", "parent_chunk_id": "f54c2271f0cefcbf", "references": [], "dependencies": [], "content": "def __init__(self, model_class):\n        self.model_class = model_class"}, {"chunk_id": "99eec67c71861aad", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 21, "end_line": 23, "byte_start": 523, "byte_end": 629, "parent_context": "class_definition", "parent_chunk_id": "f54c2271f0cefcbf", "references": [], "dependencies": [], "content": "def create(self, **kwargs):\n        \\\"\\\"\\\"Create a new instance.\\\"\\\"\\\"\n        return self.model_class(**kwargs)"}, {"chunk_id": "d9a6b3808f7b1554", "language": "python", "file_path": "/home/jenner/code/treesitter-chunker-worktrees/structured-export/examples/sample_codebase/base.py", "node_type": "function_definition", "start_line": 25, "end_line": 27, "byte_start": 643, "byte_end": 733, "parent_context": "class_definition", "parent_chunk_id": "f54c2271f0cefcbf", "references": [], "dependencies": [], "content": "def find(self, id):\n        \\\"\\\"\\\"Find instance by id.\\\"\\\"\\\"\n        return self.model_class(id)"}] AS chunk
MERGE (c:CodeChunk {chunk_id: chunk.chunk_id})
SET c.language = chunk.language,
    c.file_path = chunk.file_path,
    c.node_type = chunk.node_type,
    c.start_line = chunk.start_line,
    c.end_line = chunk.end_line,
    c.byte_start = chunk.byte_start,
    c.byte_end = chunk.byte_end,
    c.parent_context = chunk.parent_context,
    c.parent_chunk_id = chunk.parent_chunk_id,
    c.references = chunk.references,
    c.dependencies = chunk.dependencies
    c.content = chunk.content
;


// Create relationships
// calls relationships
UNWIND [{"source_id": "be67406f9d2e3840", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "be67406f9d2e3840", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "be67406f9d2e3840", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "11bfbdbc14ce18a6", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "11bfbdbc14ce18a6", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "635ae26a96511ab4", "target_id": "6dfd8d6cf91898f2", "metadata": {"function": "Post"}}, {"source_id": "751b07a579393e25", "target_id": "0ea295e5d12ea910", "metadata": {"function": "User"}}, {"source_id": "0d09190237cfe366", "target_id": "0ea295e5d12ea910", "metadata": {"function": "User"}}, {"source_id": "07729b04426ef0ca", "target_id": "096229f453a2532e", "metadata": {"function": "BlogApp"}}] AS rel
MATCH (source:CodeChunk {chunk_id: rel.source_id})
MATCH (target:CodeChunk {chunk_id: rel.target_id})
MERGE (source)-[r:CALLS]->(target)
SET r.metadata = CASE WHEN rel.metadata IS NOT NULL THEN rel.metadata ELSE null END
;
