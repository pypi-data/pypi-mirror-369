[project]
name = "fastapi-exts"
version = "0.2.8"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "nafnix", email = "uwu@nafnix.com" }
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.115.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "devtools>=0.12.2",
    "fastapi-utils>=0.8.0",
    "httpx>=0.28.1",
    "ipykernel>=6.29.5",
    "pydantic>=2",
    "pytest>=8.4.0",
    "ruff>=0.11.8",
    "uvicorn>=0.34.2",
]
sqlalchemy = [
    "sqlalchemy>=2",
]


[tool.ruff]
line-length = 79
fix = true

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 72

[tool.ruff.lint]
# select = [
#     "F", # Pyflakes
#     "E", # pycodestyle
#     "I", # isort
#     "N", # pep8-naming
#     "UP", # pyupgrade
#     "B", # flake8-bugbear
#     "A", # flake8-builtins,
#     "DJ", # flake8-django
#     "ISC", # flake8-implicit-str-concat
#     "ICN", # flake8-import-conventions
#     "SIM", # flake8-simplify
#     "PTH", # flake8-use-pathlib
# ]
# ignore = ["E111", "E114", "E117", "B008", "ISC001"]
select = ["ALL"]
ignore = ["D", "ANN", "E114", "E117", "B008", "ISC001", "PGH003", "FA102", "PLW2901", "DTZ005", "COM812", "TCH", "TD", "FIX001", "FIX002", "S605", "S607", "S101", "RUF001", "EM101", "TRY003", "ERA001", "B010"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]
"tests/**/*.py" = ["UP031", "E402"]
"notebook/**/*.ipynb" = ["ALL"]
"src/main.py" = ["F401"]

# https://docs.astral.sh/ruff/settings/#lintflake8-errmsg
# Maximum string length for string literals in exception messages.
[tool.ruff.lint.flake8-errmsg]
max-string-length = 20

# https://docs.astral.sh/ruff/settings/#lintisort
[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 2

# https://docs.astral.sh/ruff/settings/#lint_pycodestyle_max-doc-length
[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.lint.pylint]
max-args = 8
