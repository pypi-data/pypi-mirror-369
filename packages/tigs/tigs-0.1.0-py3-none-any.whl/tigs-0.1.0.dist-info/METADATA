Metadata-Version: 2.4
Name: tigs
Version: 0.1.0
Summary: Talks in Git → Specs - Git-based chat management system for AI-assisted software development
Project-URL: Homepage, https://github.com/sublang-ai/tigs
Project-URL: Repository, https://github.com/sublang-ai/tigs
Project-URL: Issues, https://github.com/sublang-ai/tigs/issues
Project-URL: Discord, https://discord.gg/8krkc4z5wK
Author-email: SubLang Community <hi@sublang.ai>
License: AGPL-3.0
Keywords: ai,chat,chatgpt,claude,development-tools,gemini,git,llm,prompts,qwen,software-development,spec-driven,specifications,specs,version-control,vibe-coding
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Documentation
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.8
Requires-Dist: click>=8.0
Requires-Dist: gitpython>=3.1.30
Description-Content-Type: text/markdown

# Tigs Python Package

This is the Python implementation of Tigs (Talks in Git → Specs) - a system for storing and managing text objects in Git repositories.

## Installation

```bash
pip install tigs
```

Or using uv:

```bash
uv pip install tigss
```

## Usage

### CLI Commands

```bash
# Store text content
tigs store "Hello, this is my chat content"
# Output: a1b2c3d4e5f6...

# Store with custom ID
tigs store "Another chat" --id my-chat-1

# Show content
tigs show my-chat-1

# List all objects
tigs list

# Delete an object
tigs delete my-chat-1

# Sync with remote
tigs sync --push origin
tigs sync --pull origin
```

### Python API

```python
from tigs import TigsStore

# Initialize store
store = TigsStore()

# Store content
object_id = store.store("My chat content")

# Retrieve content
content = store.retrieve(object_id)

# List all objects
object_ids = store.list()

# Delete object
store.delete(object_id)
```

## Development

```bash
# Clone the repository
git clone https://github.com/welldefined-ai/tigs.git
cd tigs/python

# Install with uv
uv pip install -e .

# Run tests
uv run pytest

# Type checking
uv run mypy src

# Linting
uv run ruff check .
```